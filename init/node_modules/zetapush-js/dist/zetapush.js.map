{"version":3,"file":"zetapush.js","sources":["../src/mapping/core.js","../src/mapping/authentications.js","../src/authentication/handshake.js","../src/connection/connection-status.js","../node_modules/zetapush-cometd/lib/TransportRegistry.js","../node_modules/zetapush-cometd/lib/Utils.js","../node_modules/zetapush-cometd/lib/CometD.js","../node_modules/zetapush-cometd/lib/TransportTypes.js","../node_modules/zetapush-cometd/lib/Transport.js","../node_modules/zetapush-cometd/lib/RequestTransport.js","../node_modules/zetapush-cometd/lib/LongPollingTransport.js","../node_modules/zetapush-cometd/lib/FetchLongPollingTransport.js","../node_modules/zetapush-cometd/lib/WebSocketTransport.js","../node_modules/zetapush-cometd/lib/browser/Transports.js","../node_modules/zetapush-cometd/index.js","../src/mapping/services.js","../src/utils/index.js","../src/client/helper.js","../src/client/basic.js","../src/utils/storage.js","../src/utils/session-persistence.js","../src/client/smart.js","../src/client/weak.js","../src/client/server.js","../src/index.js"],"sourcesContent":["/**\n * @access protected\n */\nexport class Service {\n  constructor({ $publish }) {\n    this.$publish = $publish;\n  }\n}\n","import { Service } from './core';\n/**\n * Delegating authentication\n *\n * This authentication delegates authentication to an external auth provider\n * <br>When a zetapush client handshakes with a delegated authentication, the 'token' field given by the client is sent to the configured remote server as part of the URL\n * <br>The response must be in JSON format\n *  Each key of the response will be considered a user information field name\n * <br>The handshake from the server will return the primary key in a field named 'login' (regardless of the actual key name you might have chosen)\n * */\n/**\n * End-user API for the delegating authentication\n *\n * Provisionning verbs.\n * @access public\n * */\nexport class Delegating extends Service {\n  /**\n   * Get default deployment id associated to Delegating service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'delegating_0';\n  }\n}\n/**\n * Local authentication\n *\n * Zetapush local authentication\n *  The configurer can choose the primary key and mandatory user fields for account creation\n *  The field 'zetapushKey' is generated by the server and MUST not be used : it contains the unique key of the user inside a sandbox (it can be obtained from inside a macro with the <b>__userKey</b> pseudo-constant)\n * */\n/**\n * End-user API for the simple local authentication\n *\n * These API verbs allow end-users to manage their account.\n * @access public\n * */\nexport class Simple extends Service {\n  /**\n   * Get default deployment id associated to Simple service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'simple_0';\n  }\n}\n/**\n * Weak authentication\n *\n * The weak authentication allows for anonymous authentication of devices\n *  Such devices can display a qrcode to allow regular users to take control of them\n * */\n/**\n * User API for weak devices control\n *\n * User API for control and release of weakly authenticated user sessions.\n * @access public\n * */\nexport class Weak extends Service {\n  /**\n   * Get default deployment id associated to Weak service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'weak_0';\n  }\n  /**\n   * Controls a session\n   *\n   * Takes control of a weak user session, identified by the given public token.\n   * The public token has been previously made available by the controlled device, for example by displaying a QRCode.\n   * Upon control notification, the client SDK of the controlled session is expected to re-handshake.\n   * */\n  control({ publicToken, fullRights }) {\n    return this.$publish('control', { publicToken, fullRights });\n  }\n  /**\n   * Returns the current token\n   *\n   * Returns your current session's private token. The token field may be null, if you did not log in with this authentication.\n   * The token can be used to log in as the same weak user another time.\n   * */\n  getToken() {\n    return this.$publish('getToken', {});\n  }\n  /**\n   * Releases a session\n   *\n   * Releases control of a weak user session, identified by the given public token.\n   * The weak user session must have been previously controlled by a call to 'control'.\n   * */\n  release({ publicToken, fullRights }) {\n    return this.$publish('release', { publicToken, fullRights });\n  }\n}\n","import { Delegating, Simple, Weak } from '../mapping/authentications';\n\n/**\n * ZetaPush deployables names\n */\nconst DeployableNames = {\n  AUTH_SIMPLE: 'simple',\n  AUTH_WEAK: 'weak',\n  AUTH_DELEGATING: 'delegating',\n  AUTH_DEVELOPER: 'developer',\n};\n\n/**\n * Provide abstraction over CometD handshake data structure\n * @access protected\n */\nclass AbstractHandshake {\n  /**\n   * Create a new handshake manager\n   * @param {{authType: string, sandboxId: string, deploymentId: string}} parameters\n   */\n  constructor({ authType, sandboxId, deploymentId }) {\n    /**\n     * @access protected\n     * @type {string}\n     */\n    this.authType = authType;\n    /**\n     * @access protected\n     * @type {string}\n     */\n    this.sandboxId = sandboxId;\n    /**\n     * @access protected\n     * @type {string}\n     */\n    this.deploymentId = deploymentId;\n  }\n  /**\n   * @param {ClientHelper} client\n   * @return {Object}\n   */\n  getHandshakeFields(client) {\n    const authentication = {\n      data: this.authData,\n      type: `${client.getSandboxId()}.${this.deploymentId}.${this.authType}`,\n      version: this.authVersion,\n    };\n    if (client.getResource()) {\n      authentication.resource = client.getResource();\n    }\n    return {\n      ext: {\n        authentication,\n      },\n    };\n  }\n  /**\n   * Get auth version\n   * @return {string}\n   */\n  get authVersion() {\n    return 'none';\n  }\n}\n\n/**\n * Provide abstraction over CometD token base handshake data structure\n * @access protected\n * @extends {AbstractHandshake}\n */\nclass TokenHandshake extends AbstractHandshake {\n  /**\n   * @param {{authType: string, deploymentId: string, token: string}} parameters\n   */\n  constructor({ authType, deploymentId, token }) {\n    super({\n      deploymentId,\n      authType,\n    });\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.token = token;\n  }\n  /**\n   * @return {token: string}\n   */\n  get authData() {\n    const { token } = this;\n    return {\n      token,\n    };\n  }\n}\n\n/**\n * Provide abstraction over CometD credentials based handshake data structure\n * @access protected\n * @extends {AbstractHandshake}\n */\nclass CredentialsHandshake extends AbstractHandshake {\n  /**\n   * @param {{authType: string, deploymentId: string, login: string, password: string}} parameters\n   */\n  constructor({ authType, deploymentId, login, password }) {\n    super({\n      authType,\n      deploymentId,\n    });\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.login = login;\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.password = password;\n  }\n  /**\n   * Get auth data\n   * @return {login: string, password: string}\n   */\n  get authData() {\n    const { login, password } = this;\n    return {\n      login,\n      password,\n    };\n  }\n}\n\n/**\n * Factory to create handshake\n * @access public\n */\nexport class Authentication {\n  /**\n   * @param {{deploymentId: string, login: string, password: string}} parameters\n   * @return {CredentialsHandshake}\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * Authentication.delegating({\n   *   deploymentId: '<YOUR-SIMPLE-AUTHENTICATION-DEPLOYMENT-ID>',\n   *   login: <USER-LOGIN>,\n   *   password: '<USER-PASSWORD>'\n   * })\n   */\n  static simple({\n    deploymentId = Simple.DEFAULT_DEPLOYMENT_ID,\n    login,\n    password,\n  }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_SIMPLE,\n      deploymentId,\n      login,\n      password,\n    });\n  }\n  /**\n   * @param {{deploymentId: string, token: string}} parameters\n   * @return {TokenHandshake}\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * Authentication.delegating({\n   *   deploymentId: '<YOUR-WEAK-AUTHENTICATION-DEPLOYMENT-ID>',\n   *   token: null\n   * })\n   */\n  static weak({ deploymentId = Weak.DEFAULT_DEPLOYMENT_ID, token }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_WEAK,\n      deploymentId,\n      login: token,\n      password: null,\n    });\n  }\n  /**\n   * @param {{deploymentId: string, token: string}} parameters\n   * @return {TokenHandshake}\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * Authentication.delegating({\n   *   deploymentId: '<YOUR-DELEGATING-AUTHENTICATION-DEPLOYMENT-ID>',\n   *   token: null\n   * })\n   */\n  static delegating({\n    deploymentId = Delegating.DEFAULT_DEPLOYMENT_ID,\n    token,\n  }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_DELEGATING,\n      deploymentId,\n      login: token,\n      password: null,\n    });\n  }\n  static developer({ login, password }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_DEVELOPER,\n      deploymentId: DeployableNames.AUTH_DEVELOPER,\n      login,\n      password,\n    });\n  }\n  /**\n   * @param {{authType: string, deploymentId: string, login: string, password: string}} parameters\n   * @return {TokenHandshake|CredentialsHandshake}\n   */\n  static create({ authType, deploymentId, login, password }) {\n    if (password === null) {\n      return new TokenHandshake({\n        authType,\n        deploymentId,\n        token: login,\n      });\n    }\n    return new CredentialsHandshake({\n      authType,\n      deploymentId,\n      login,\n      password,\n    });\n  }\n}\n","/**\n * Define life cycle connection methods\n * @access public\n */\nexport class ConnectionStatusListener {\n  /**\n   * Callback fired when connection is broken\n   */\n  onConnectionBroken() {}\n  /**\n   * Callback fired when connection is closed\n   */\n  onConnectionClosed() {}\n  /**\n   * Callback fired when connection is established\n   */\n  onConnectionEstablished() {}\n  /**\n   * Callback fired when an error occurs in connection to server step\n   * @param {Object} failure\n   */\n  onConnectionToServerFail(failure) {}\n  /**\n   * Callback fired when negociation with server failed\n   * @param {Object} failure\n   */\n  onNegotiationFailed(failure) {}\n  /**\n   * Callback no server url avaibale\n   */\n  onNoServerUrlAvailable() {}\n  /**\n   * Callback fired when connection will close\n   */\n  onConnectionWillClose() {}\n  /**\n   * Callback fired when an error occurs in handshake step\n   * @param {Object} failure\n   */\n  onFailedHandshake(failure) {}\n  /**\n   * Callback fired when a message is lost\n   */\n  onMessageLost() {}\n  /**\n   * Callback fired when handshake step succeed\n   * @param {Object} authentication\n   */\n  onSuccessfulHandshake(authentication) {}\n}\n","/**\n * A registry for transports used by the CometD object.\n */\nmodule.exports = function TransportRegistry() {\n    var _types = [];\n    var _transports = {};\n\n    this.getTransportTypes = function() {\n        return _types.slice(0);\n    };\n\n    this.findTransportTypes = function(version, crossDomain, url) {\n        var result = [];\n        for (var i = 0; i < _types.length; ++i) {\n            var type = _types[i];\n            if (_transports[type].accept(version, crossDomain, url) === true) {\n                result.push(type);\n            }\n        }\n        return result;\n    };\n\n    this.negotiateTransport = function(types, version, crossDomain, url) {\n        for (var i = 0; i < _types.length; ++i) {\n            var type = _types[i];\n            for (var j = 0; j < types.length; ++j) {\n                if (type === types[j]) {\n                    var transport = _transports[type];\n                    if (transport.accept(version, crossDomain, url) === true) {\n                        return transport;\n                    }\n                }\n            }\n        }\n        return null;\n    };\n\n    this.add = function(type, transport, index) {\n        var existing = false;\n        for (var i = 0; i < _types.length; ++i) {\n            if (_types[i] === type) {\n                existing = true;\n                break;\n            }\n        }\n\n        if (!existing) {\n            if (typeof index !== 'number') {\n                _types.push(type);\n            } else {\n                _types.splice(index, 0, type);\n            }\n            _transports[type] = transport;\n        }\n\n        return !existing;\n    };\n\n    this.find = function(type) {\n        for (var i = 0; i < _types.length; ++i) {\n            if (_types[i] === type) {\n                return _transports[type];\n            }\n        }\n        return null;\n    };\n\n    this.remove = function(type) {\n        for (var i = 0; i < _types.length; ++i) {\n            if (_types[i] === type) {\n                _types.splice(i, 1);\n                var transport = _transports[type];\n                delete _transports[type];\n                return transport;\n            }\n        }\n        return null;\n    };\n\n    this.clear = function() {\n        _types = [];\n        _transports = {};\n    };\n\n    this.reset = function(init) {\n        for (var i = 0; i < _types.length; ++i) {\n            _transports[_types[i]].reset(init);\n        }\n    };\n};\n","exports.isString = function (value) {\n    if (value === undefined || value === null) {\n        return false;\n    }\n    return typeof value === 'string' || value instanceof String;\n};\n\nexports.isArray = function (value) {\n    if (value === undefined || value === null) {\n        return false;\n    }\n    return value instanceof Array;\n};\n\n/**\n * Returns whether the given element is contained into the given array.\n * @param element the element to check presence for\n * @param array the array to check for the element presence\n * @return the index of the element, if present, or a negative index if the element is not present\n */\nexports.inArray = function (element, array) {\n    for (var i = 0; i < array.length; ++i) {\n        if (element === array[i]) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nexports.setTimeout = function (cometd, funktion, delay) {\n    return setTimeout(function() {\n        try {\n            cometd._debug('Invoking timed function', funktion);\n            funktion();\n        } catch (x) {\n            cometd._debug('Exception invoking timed function', funktion, x);\n        }\n    }, delay);\n};\n\nexports.clearTimeout = function (timeoutHandle) {\n    clearTimeout(timeoutHandle);\n};\n","var TransportRegistry = require('./TransportRegistry');\nvar Utils = require('./Utils');\n/**\n * The constructor for a CometD object, identified by an optional name.\n * The default name is the string 'default'.\n * In the rare case a page needs more than one Bayeux conversation,\n * a new instance can be created via:\n * <pre>\n * var bayeuxUrl2 = ...;\n *\n * // Dojo style\n * var cometd2 = new dojox.CometD('another_optional_name');\n *\n * // jQuery style\n * var cometd2 = new $.CometD('another_optional_name');\n *\n * cometd2.init({url: bayeuxUrl2});\n * </pre>\n * @param name the optional name of this cometd object\n */\nmodule.exports = function CometD(name) {\n    var _cometd = this;\n    var _name = name || 'default';\n    var _crossDomain = false;\n    var _transports = new TransportRegistry();\n    var _transport;\n    var _status = 'disconnected';\n    var _messageId = 0;\n    var _clientId = null;\n    var _batch = 0;\n    var _messageQueue = [];\n    var _internalBatch = false;\n    var _listeners = {};\n    var _backoff = 0;\n    var _scheduledSend = null;\n    var _extensions = [];\n    var _advice = {};\n    var _handshakeProps;\n    var _handshakeCallback;\n    var _callbacks = {};\n    var _remoteCalls = {};\n    var _reestablish = false;\n    var _connected = false;\n    var _unconnectTime = 0;\n    var _handshakeMessages = 0;\n    var _config = {\n        protocol: null,\n        stickyReconnect: true,\n        connectTimeout: 0,\n        maxConnections: 2,\n        backoffIncrement: 1000,\n        maxBackoff: 60000,\n        logLevel: 'info',\n        reverseIncomingExtensions: true,\n        maxNetworkDelay: 10000,\n        requestHeaders: {},\n        appendMessageTypeToURL: true,\n        autoBatch: false,\n        urls: {},\n        maxURILength: 2000,\n        advice: {\n            timeout: 60000,\n            interval: 0,\n            reconnect: 'retry',\n            maxInterval: 0\n        }\n    };\n\n    function _fieldValue(object, name) {\n        try {\n            return object[name];\n        } catch (x) {\n            return undefined;\n        }\n    }\n\n    /**\n     * Mixes in the given objects into the target object by copying the properties.\n     * @param deep if the copy must be deep\n     * @param target the target object\n     * @param objects the objects whose properties are copied into the target\n     */\n    this._mixin = function(deep, target, objects) {\n        var result = target || {};\n\n        // Skip first 2 parameters (deep and target), and loop over the others\n        for (var i = 2; i < arguments.length; ++i) {\n            var object = arguments[i];\n\n            if (object === undefined || object === null) {\n                continue;\n            }\n\n            for (var propName in object) {\n                if (object.hasOwnProperty(propName)) {\n                    var prop = _fieldValue(object, propName);\n                    var targ = _fieldValue(result, propName);\n\n                    // Avoid infinite loops\n                    if (prop === target) {\n                        continue;\n                    }\n                    // Do not mixin undefined values\n                    if (prop === undefined) {\n                        continue;\n                    }\n\n                    if (deep && typeof prop === 'object' && prop !== null) {\n                        if (prop instanceof Array) {\n                            result[propName] = this._mixin(deep, targ instanceof Array ? targ : [], prop);\n                        } else {\n                            var source = typeof targ === 'object' && !(targ instanceof Array) ? targ : {};\n                            result[propName] = this._mixin(deep, source, prop);\n                        }\n                    } else {\n                        result[propName] = prop;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n    function _isString(value) {\n        return Utils.isString(value);\n    }\n\n    function _isFunction(value) {\n        if (value === undefined || value === null) {\n            return false;\n        }\n        return typeof value === 'function';\n    }\n\n    function _zeroPad(value, length) {\n        var result = '';\n        while (--length > 0) {\n            if (value >= Math.pow(10, length)) {\n                break;\n            }\n            result += '0';\n        }\n        result += value;\n        return result;\n    }\n\n    function _log(level, args) {\n        if ('undefined' !== typeof console) {\n            var logger = console[level];\n            if (_isFunction(logger)) {\n                var now = new Date();\n                [].splice.call(args, 0, 0, _zeroPad(now.getHours(), 2) + ':' + _zeroPad(now.getMinutes(), 2) + ':' +\n                        _zeroPad(now.getSeconds(), 2) + '.' + _zeroPad(now.getMilliseconds(), 3));\n                logger.apply(console, args);\n            }\n        }\n    }\n\n    this._warn = function() {\n        _log('warn', arguments);\n    };\n\n    this._info = function() {\n        if (_config.logLevel !== 'warn') {\n            _log('info', arguments);\n        }\n    };\n\n    this._debug = function() {\n        if (_config.logLevel === 'debug') {\n            _log('debug', arguments);\n        }\n    };\n\n    function _splitURL(url) {\n        // [1] = protocol://,\n        // [2] = host:port,\n        // [3] = host,\n        // [4] = IPv6_host,\n        // [5] = IPv4_host,\n        // [6] = :port,\n        // [7] = port,\n        // [8] = uri,\n        // [9] = rest (query / fragment)\n        return /(^https?:\\/\\/)?(((\\[[^\\]]+\\])|([^:\\/\\?#]+))(:(\\d+))?)?([^\\?#]*)(.*)?/.exec(url);\n    }\n\n    /**\n     * Returns whether the given hostAndPort is cross domain.\n     * The default implementation checks against window.location.host\n     * but this function can be overridden to make it work in non-browser\n     * environments.\n     *\n     * @param hostAndPort the host and port in format host:port\n     * @return whether the given hostAndPort is cross domain\n     */\n    this._isCrossDomain = function(hostAndPort) {\n        var host = typeof location === 'undefined' ? hostAndPort : location.host;\n        return hostAndPort && hostAndPort !== host;\n    };\n\n    function _configure(configuration) {\n        _cometd._debug('Configuring cometd object with', configuration);\n        // Support old style param, where only the Bayeux server URL was passed\n        if (_isString(configuration)) {\n            configuration = { url: configuration };\n        }\n        if (!configuration) {\n            configuration = {};\n        }\n\n        _config = _cometd._mixin(false, _config, configuration);\n\n        var url = _cometd.getURL();\n        if (!url) {\n            throw 'Missing required configuration parameter \\'url\\' specifying the Bayeux server URL';\n        }\n\n        // Check if we're cross domain.\n        var urlParts = _splitURL(url);\n        var hostAndPort = urlParts[2];\n        var uri = urlParts[8];\n        var afterURI = urlParts[9];\n        _crossDomain = _cometd._isCrossDomain(hostAndPort);\n\n        // Check if appending extra path is supported\n        if (_config.appendMessageTypeToURL) {\n            if (afterURI !== undefined && afterURI.length > 0) {\n                _cometd._info('Appending message type to URI ' + uri + afterURI + ' is not supported, disabling \\'appendMessageTypeToURL\\' configuration');\n                _config.appendMessageTypeToURL = false;\n            } else {\n                var uriSegments = uri.split('/');\n                var lastSegmentIndex = uriSegments.length - 1;\n                if (uri.match(/\\/$/)) {\n                    lastSegmentIndex -= 1;\n                }\n                if (uriSegments[lastSegmentIndex].indexOf('.') >= 0) {\n                    // Very likely the CometD servlet's URL pattern is mapped to an extension, such as *.cometd\n                    // It will be difficult to add the extra path in this case\n                    _cometd._info('Appending message type to URI ' + uri + ' is not supported, disabling \\'appendMessageTypeToURL\\' configuration');\n                    _config.appendMessageTypeToURL = false;\n                }\n            }\n        }\n    }\n\n    function _removeListener(subscription) {\n        if (subscription) {\n            var subscriptions = _listeners[subscription.channel];\n            if (subscriptions && subscriptions[subscription.id]) {\n                delete subscriptions[subscription.id];\n                _cometd._debug('Removed', subscription.listener ? 'listener' : 'subscription', subscription);\n            }\n        }\n    }\n\n    function _removeSubscription(subscription) {\n        if (subscription && !subscription.listener) {\n            _removeListener(subscription);\n        }\n    }\n\n    function _clearSubscriptions() {\n        for (var channel in _listeners) {\n            if (_listeners.hasOwnProperty(channel)) {\n                var subscriptions = _listeners[channel];\n                if (subscriptions) {\n                    for (var i = 0; i < subscriptions.length; ++i) {\n                        _removeSubscription(subscriptions[i]);\n                    }\n                }\n            }\n        }\n    }\n\n    function _setStatus(newStatus) {\n        if (_status !== newStatus) {\n            _cometd._debug('Status', _status, '->', newStatus);\n            _status = newStatus;\n        }\n    }\n\n    function _isDisconnected() {\n        return _status === 'disconnecting' || _status === 'disconnected';\n    }\n\n    function _nextMessageId() {\n        var result = ++_messageId;\n        return '' + result;\n    }\n\n    function _applyExtension(scope, callback, name, message, outgoing) {\n        try {\n            return callback.call(scope, message);\n        } catch (x) {\n            var handler = _cometd.onExtensionException;\n            if (_isFunction(handler)) {\n                _cometd._debug('Invoking extension exception handler', name, x);\n                try {\n                    handler.call(_cometd, x, name, outgoing, message);\n                } catch (xx) {\n                    _cometd._info('Exception during execution of extension exception handler', name, xx);\n                }\n            } else {\n                _cometd._info('Exception during execution of extension', name, x);\n            }\n            return message;\n        }\n    }\n\n    function _applyIncomingExtensions(message) {\n        for (var i = 0; i < _extensions.length; ++i) {\n            if (message === undefined || message === null) {\n                break;\n            }\n\n            var index = _config.reverseIncomingExtensions ? _extensions.length - 1 - i : i;\n            var extension = _extensions[index];\n            var callback = extension.extension.incoming;\n            if (_isFunction(callback)) {\n                var result = _applyExtension(extension.extension, callback, extension.name, message, false);\n                message = result === undefined ? message : result;\n            }\n        }\n        return message;\n    }\n\n    function _applyOutgoingExtensions(message) {\n        for (var i = 0; i < _extensions.length; ++i) {\n            if (message === undefined || message === null) {\n                break;\n            }\n\n            var extension = _extensions[i];\n            var callback = extension.extension.outgoing;\n            if (_isFunction(callback)) {\n                var result = _applyExtension(extension.extension, callback, extension.name, message, true);\n                message = result === undefined ? message : result;\n            }\n        }\n        return message;\n    }\n\n    function _notify(channel, message) {\n        var subscriptions = _listeners[channel];\n        if (subscriptions && subscriptions.length > 0) {\n            for (var i = 0; i < subscriptions.length; ++i) {\n                var subscription = subscriptions[i];\n                // Subscriptions may come and go, so the array may have 'holes'\n                if (subscription) {\n                    try {\n                        subscription.callback.call(subscription.scope, message);\n                    } catch (x) {\n                        var handler = _cometd.onListenerException;\n                        if (_isFunction(handler)) {\n                            _cometd._debug('Invoking listener exception handler', subscription, x);\n                            try {\n                                handler.call(_cometd, x, subscription, subscription.listener, message);\n                            } catch (xx) {\n                                _cometd._info('Exception during execution of listener exception handler', subscription, xx);\n                            }\n                        } else {\n                            _cometd._info('Exception during execution of listener', subscription, message, x);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function _notifyListeners(channel, message) {\n        // Notify direct listeners\n        _notify(channel, message);\n\n        // Notify the globbing listeners\n        var channelParts = channel.split('/');\n        var last = channelParts.length - 1;\n        for (var i = last; i > 0; --i) {\n            var channelPart = channelParts.slice(0, i).join('/') + '/*';\n            // We don't want to notify /foo/* if the channel is /foo/bar/baz,\n            // so we stop at the first non recursive globbing\n            if (i === last) {\n                _notify(channelPart, message);\n            }\n            // Add the recursive globber and notify\n            channelPart += '*';\n            _notify(channelPart, message);\n        }\n    }\n\n    function _cancelDelayedSend() {\n        if (_scheduledSend !== null) {\n            Utils.clearTimeout(_scheduledSend);\n        }\n        _scheduledSend = null;\n    }\n\n    function _delayedSend(operation, delay) {\n        if ('undefined' === typeof delay) {\n          delay = _backoff\n        }\n        _cancelDelayedSend();\n        var time = _advice.interval + delay;\n        _cometd._debug('Function scheduled in', time, 'ms, interval =', _advice.interval, 'backoff =', _backoff, operation);\n        _scheduledSend = Utils.setTimeout(_cometd, operation, time);\n    }\n\n    // Needed to break cyclic dependencies between function definitions\n    var _handleMessages;\n    var _handleFailure;\n\n    /**\n     * Delivers the messages to the CometD server\n     * @param sync whether the send is synchronous\n     * @param messages the array of messages to send\n     * @param metaConnect true if this send is on /meta/connect\n     * @param extraPath an extra path to append to the Bayeux server URL\n     */\n    function _send(sync, messages, metaConnect, extraPath) {\n        // We must be sure that the messages have a clientId.\n        // This is not guaranteed since the handshake may take time to return\n        // (and hence the clientId is not known yet) and the application\n        // may create other messages.\n        for (var i = 0; i < messages.length; ++i) {\n            var message = messages[i];\n            var messageId = message.id;\n\n            if (_clientId) {\n                message.clientId = _clientId;\n            }\n\n            message = _applyOutgoingExtensions(message);\n            if (message !== undefined && message !== null) {\n                // Extensions may have modified the message id, but we need to own it.\n                message.id = messageId;\n                messages[i] = message;\n            } else {\n                delete _callbacks[messageId];\n                messages.splice(i--, 1);\n            }\n        }\n\n        if (messages.length === 0) {\n            return;\n        }\n\n        var url = _cometd.getURL();\n        if (_config.appendMessageTypeToURL) {\n            // If url does not end with '/', then append it\n            if (!url.match(/\\/$/)) {\n                url = url + '/';\n            }\n            if (extraPath) {\n                url = url + extraPath;\n            }\n        }\n\n        var envelope = {\n            url: url,\n            sync: sync,\n            messages: messages,\n            onSuccess: function(rcvdMessages) {\n                try {\n                    _handleMessages.call(_cometd, rcvdMessages);\n                } catch (x) {\n                    _cometd._info('Exception during handling of messages', x);\n                }\n            },\n            onFailure: function(conduit, messages, failure) {\n                try {\n                    var transport = _cometd.getTransport();\n                    failure.connectionType = transport ? transport.getType() : \"unknown\";\n                    _handleFailure.call(_cometd, conduit, messages, failure);\n                } catch (x) {\n                    _cometd._info('Exception during handling of failure', x);\n                }\n            }\n        };\n        _cometd._debug('Send', envelope);\n        _transport.send(envelope, metaConnect);\n    }\n\n    function _queueSend(message) {\n        if (_batch > 0 || _internalBatch === true) {\n            _messageQueue.push(message);\n        } else {\n            _send(false, [message], false);\n        }\n    }\n\n    /**\n     * Sends a complete bayeux message.\n     * This method is exposed as a public so that extensions may use it\n     * to send bayeux message directly, for example in case of re-sending\n     * messages that have already been sent but that for some reason must\n     * be resent.\n     */\n    this.send = _queueSend;\n\n    function _resetBackoff() {\n        _backoff = 0;\n    }\n\n    function _increaseBackoff() {\n        if (_backoff < _config.maxBackoff) {\n            _backoff += _config.backoffIncrement;\n        }\n        return _backoff;\n    }\n\n    /**\n     * Starts a the batch of messages to be sent in a single request.\n     * @see #_endBatch(sendMessages)\n     */\n    function _startBatch() {\n        ++_batch;\n        _cometd._debug('Starting batch, depth', _batch);\n    }\n\n    function _flushBatch() {\n        var messages = _messageQueue;\n        _messageQueue = [];\n        if (messages.length > 0) {\n            _send(false, messages, false);\n        }\n    }\n\n    /**\n     * Ends the batch of messages to be sent in a single request,\n     * optionally sending messages present in the message queue depending\n     * on the given argument.\n     * @see #_startBatch()\n     */\n    function _endBatch() {\n        --_batch;\n        _cometd._debug('Ending batch, depth', _batch);\n        if (_batch < 0) {\n            throw 'Calls to startBatch() and endBatch() are not paired';\n        }\n\n        if (_batch === 0 && !_isDisconnected() && !_internalBatch) {\n            _flushBatch();\n        }\n    }\n\n    /**\n     * Sends the connect message\n     */\n    function _connect() {\n        if (!_isDisconnected()) {\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                channel: '/meta/connect',\n                connectionType: _transport.getType()\n            };\n\n            // In case of reload or temporary loss of connection\n            // we want the next successful connect to return immediately\n            // instead of being held by the server, so that connect listeners\n            // can be notified that the connection has been re-established\n            if (!_connected) {\n                bayeuxMessage.advice = { timeout: 0 };\n            }\n\n            _setStatus('connecting');\n            _cometd._debug('Connect sent', bayeuxMessage);\n            _send(false, [bayeuxMessage], true, 'connect');\n            _setStatus('connected');\n        }\n    }\n\n    function _delayedConnect(delay) {\n        _setStatus('connecting');\n        _delayedSend(function() {\n            _connect();\n        }, delay);\n    }\n\n    function _updateAdvice(newAdvice) {\n        if (newAdvice) {\n            _advice = _cometd._mixin(false, {}, _config.advice, newAdvice);\n            _cometd._debug('New advice', _advice);\n        }\n    }\n\n    function _disconnect(abort) {\n        _cancelDelayedSend();\n        if (abort && _transport) {\n            _transport.abort();\n        }\n        _clientId = null;\n        _setStatus('disconnected');\n        _batch = 0;\n        _resetBackoff();\n        _transport = null;\n\n        // Fail any existing queued message\n        if (_messageQueue.length > 0) {\n            var messages = _messageQueue;\n            _messageQueue = [];\n            _handleFailure.call(_cometd, undefined, messages, {\n                reason: 'Disconnected'\n            });\n        }\n    }\n\n    function _notifyTransportFailure(oldTransport, newTransport, failure) {\n        var handler = _cometd.onTransportException;\n        if (_isFunction(handler)) {\n            _cometd._debug('Invoking transport exception handler', oldTransport, newTransport, failure);\n            try {\n                handler.call(_cometd, failure, oldTransport, newTransport);\n            } catch (x) {\n                _cometd._info('Exception during execution of transport exception handler', x);\n            }\n        }\n    }\n\n    /**\n     * Sends the initial handshake message\n     */\n    function _handshake(handshakeProps, handshakeCallback) {\n        if (_isFunction(handshakeProps)) {\n            handshakeCallback = handshakeProps;\n            handshakeProps = undefined;\n        }\n\n        _clientId = null;\n\n        _clearSubscriptions();\n\n        // Reset the transports if we're not retrying the handshake\n        if (_isDisconnected()) {\n            _transports.reset(true);\n            _updateAdvice(_config.advice);\n        } else {\n            // We are retrying the handshake, either because another handshake failed\n            // and we're backing off, or because the server timed us out and asks us to\n            // re-handshake: in both cases, make sure that if the handshake succeeds\n            // the next action is a connect.\n            _updateAdvice(_cometd._mixin(false, _advice, {reconnect: 'retry'}));\n        }\n\n        _batch = 0;\n\n        // Mark the start of an internal batch.\n        // This is needed because handshake and connect are async.\n        // It may happen that the application calls init() then subscribe()\n        // and the subscribe message is sent before the connect message, if\n        // the subscribe message is not held until the connect message is sent.\n        // So here we start a batch to hold temporarily any message until\n        // the connection is fully established.\n        _internalBatch = true;\n\n        // Save the properties provided by the user, so that\n        // we can reuse them during automatic re-handshake\n        _handshakeProps = handshakeProps;\n        _handshakeCallback = handshakeCallback;\n\n        var version = '1.0';\n\n        // Figure out the transports to send to the server\n        var url = _cometd.getURL();\n        var transportTypes = _transports.findTransportTypes(version, _crossDomain, url);\n\n        var bayeuxMessage = {\n            id: _nextMessageId(),\n            version: version,\n            minimumVersion: version,\n            channel: '/meta/handshake',\n            supportedConnectionTypes: transportTypes,\n            advice: {\n                timeout: _advice.timeout,\n                interval: _advice.interval\n            }\n        };\n        // Do not allow the user to override important fields.\n        var message = _cometd._mixin(false, {}, _handshakeProps, bayeuxMessage);\n\n        // Save the callback.\n        _cometd._putCallback(message.id, handshakeCallback);\n\n        // Pick up the first available transport as initial transport\n        // since we don't know if the server supports it\n        if (!_transport) {\n            _transport = _transports.negotiateTransport(transportTypes, version, _crossDomain, url);\n            if (!_transport) {\n                var failure = 'Could not find initial transport among: ' + _transports.getTransportTypes();\n                _cometd._warn(failure);\n                throw failure;\n            }\n        }\n\n        _cometd._debug('Initial transport is', _transport.getType());\n\n        // We started a batch to hold the application messages,\n        // so here we must bypass it and send immediately.\n        _setStatus('handshaking');\n        _cometd._debug('Handshake sent', message);\n        _send(false, [message], false, 'handshake');\n    }\n\n    function _delayedHandshake(delay) {\n        _setStatus('handshaking');\n\n        // We will call _handshake() which will reset _clientId, but we want to avoid\n        // that between the end of this method and the call to _handshake() someone may\n        // call publish() (or other methods that call _queueSend()).\n        _internalBatch = true;\n\n        _delayedSend(function() {\n            _handshake(_handshakeProps, _handshakeCallback);\n        }, delay);\n    }\n\n    function _notifyCallback(callback, message) {\n        try {\n            callback.call(_cometd, message);\n        } catch (x) {\n            var handler = _cometd.onCallbackException;\n            if (_isFunction(handler)) {\n                _cometd._debug('Invoking callback exception handler', x);\n                try {\n                    handler.call(_cometd, x, message);\n                } catch (xx) {\n                    _cometd._info('Exception during execution of callback exception handler', xx);\n                }\n            } else {\n                _cometd._info('Exception during execution of message callback', x);\n            }\n        }\n    }\n\n    this._getCallback = function(messageId) {\n        return _callbacks[messageId];\n    };\n\n    this._putCallback = function(messageId, callback) {\n        var result = this._getCallback(messageId);\n        if (_isFunction(callback)) {\n            _callbacks[messageId] = callback;\n        }\n        return result;\n    };\n\n    function _handleCallback(message) {\n        var callback = _cometd._getCallback([message.id]);\n        if (_isFunction(callback)) {\n            delete _callbacks[message.id];\n            _notifyCallback(callback, message);\n        }\n    }\n\n    function _handleRemoteCall(message) {\n        var context = _remoteCalls[message.id];\n        delete _remoteCalls[message.id];\n        _cometd._debug('Handling remote call response for', message, 'with context', context);\n        if (context) {\n            // Clear the timeout, if present.\n            var timeout = context.timeout;\n            if (timeout) {\n                Utils.clearTimeout(timeout);\n            }\n\n            var callback = context.callback;\n            if (_isFunction(callback)) {\n                _notifyCallback(callback, message);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function _failHandshake(message) {\n        _handleCallback(message);\n        _notifyListeners('/meta/handshake', message);\n        _notifyListeners('/meta/unsuccessful', message);\n\n        // Only try again if we haven't been disconnected and\n        // the advice permits us to retry the handshake\n        var retry = !_isDisconnected() && _advice.reconnect !== 'none';\n        if (retry) {\n            _increaseBackoff();\n            _delayedHandshake();\n        } else {\n            _disconnect(true);\n        }\n    }\n\n    function _handshakeResponse(message) {\n        if (message.successful) {\n            // Save clientId, figure out transport, then follow the advice to connect\n            _clientId = message.clientId;\n\n            var url = _cometd.getURL();\n            var newTransport = _transports.negotiateTransport(message.supportedConnectionTypes, message.version, _crossDomain, url);\n            if (newTransport === null) {\n                var failure = 'Could not negotiate transport with server; client=[' +\n                    _transports.findTransportTypes(message.version, _crossDomain, url) +\n                    '], server=[' + message.supportedConnectionTypes + ']';\n                var oldTransport = _cometd.getTransport();\n                _notifyTransportFailure(oldTransport.getType(), null, {\n                    reason: failure,\n                    connectionType: oldTransport.getType(),\n                    transport: oldTransport\n                });\n                _cometd._warn(failure);\n                _disconnect(true);\n                return;\n            } else if (_transport !== newTransport) {\n                _cometd._debug('Transport', _transport.getType(), '->', newTransport.getType());\n                _transport = newTransport;\n            }\n\n            // End the internal batch and allow held messages from the application\n            // to go to the server (see _handshake() where we start the internal batch).\n            _internalBatch = false;\n            _flushBatch();\n\n            // Here the new transport is in place, as well as the clientId, so\n            // the listeners can perform a publish() if they want.\n            // Notify the listeners before the connect below.\n            message.reestablish = _reestablish;\n            _reestablish = true;\n\n            _handleCallback(message);\n            _notifyListeners('/meta/handshake', message);\n\n            var action = _isDisconnected() ? 'none' : _advice.reconnect;\n            switch (action) {\n                case 'retry':\n                    _resetBackoff();\n                    _delayedConnect();\n                    break;\n                case 'none':\n                    _disconnect(true);\n                    break;\n                default:\n                    throw 'Unrecognized advice action ' + action;\n            }\n        } else {\n            _failHandshake(message);\n        }\n    }\n\n    function _handshakeFailure(message) {\n        var version = '1.0';\n        var url = _cometd.getURL();\n        var oldTransport = _cometd.getTransport();\n        var transportTypes = _transports.findTransportTypes(version, _crossDomain, url);\n        var newTransport = _transports.negotiateTransport(transportTypes, version, _crossDomain, url);\n        if (!newTransport) {\n            _notifyTransportFailure(oldTransport.getType(), null, message.failure);\n            _cometd._warn('Could not negotiate transport; client=[' + transportTypes + ']');\n            _disconnect(true);\n            _failHandshake(message);\n        } else {\n            _cometd._debug('Transport', oldTransport.getType(), '->', newTransport.getType());\n            _notifyTransportFailure(oldTransport.getType(), newTransport.getType(), message.failure);\n            _failHandshake(message);\n            _transport = newTransport;\n        }\n    }\n\n    function _failConnect(message) {\n        // Notify the listeners after the status change but before the next action\n        _notifyListeners('/meta/connect', message);\n        _notifyListeners('/meta/unsuccessful', message);\n\n        // This may happen when the server crashed, the current clientId\n        // will be invalid, and the server will ask to handshake again\n        // Listeners can call disconnect(), so check the state after they run\n        var action = _isDisconnected() ? 'none' : _advice.reconnect;\n        switch (action) {\n            case 'retry':\n                _delayedConnect();\n                _increaseBackoff();\n                break;\n            case 'handshake':\n                // The current transport may be failed (e.g. network disconnection)\n                // Reset the transports so the new handshake picks up the right one\n                _transports.reset(true);\n                _resetBackoff();\n                _delayedHandshake();\n                break;\n            case 'none':\n                _disconnect(true);\n                break;\n            default:\n                throw 'Unrecognized advice action' + action;\n        }\n    }\n\n    function _connectResponse(message) {\n        _connected = message.successful;\n\n        if (_connected) {\n            _notifyListeners('/meta/connect', message);\n\n            // Normally, the advice will say \"reconnect: 'retry', interval: 0\"\n            // and the server will hold the request, so when a response returns\n            // we immediately call the server again (long polling)\n            // Listeners can call disconnect(), so check the state after they run\n            var action = _isDisconnected() ? 'none' : _advice.reconnect;\n            switch (action) {\n                case 'retry':\n                    _resetBackoff();\n                    _delayedConnect();\n                    break;\n                case 'none':\n                    // Wait for the /meta/disconnect to arrive.\n                    _disconnect(false);\n                    break;\n                default:\n                    throw 'Unrecognized advice action ' + action;\n            }\n        } else {\n            _failConnect(message);\n        }\n    }\n\n    function _connectFailure(message) {\n        _connected = false;\n        _failConnect(message);\n    }\n\n    function _failDisconnect(message) {\n        _disconnect(true);\n        _handleCallback(message);\n        _notifyListeners('/meta/disconnect', message);\n        _notifyListeners('/meta/unsuccessful', message);\n    }\n\n    function _disconnectResponse(message) {\n        if (message.successful) {\n            // Wait for the /meta/connect to arrive.\n            _disconnect(false);\n            _handleCallback(message);\n            _notifyListeners('/meta/disconnect', message);\n        } else {\n            _failDisconnect(message);\n        }\n    }\n\n    function _disconnectFailure(message) {\n        _failDisconnect(message);\n    }\n\n    function _failSubscribe(message) {\n        var subscriptions = _listeners[message.subscription];\n        if (subscriptions) {\n            for (var i = subscriptions.length - 1; i >= 0; --i) {\n                var subscription = subscriptions[i];\n                if (subscription && !subscription.listener) {\n                    delete subscriptions[i];\n                    _cometd._debug('Removed failed subscription', subscription);\n                    break;\n                }\n            }\n        }\n        _handleCallback(message);\n        _notifyListeners('/meta/subscribe', message);\n        _notifyListeners('/meta/unsuccessful', message);\n    }\n\n    function _subscribeResponse(message) {\n        if (message.successful) {\n            _handleCallback(message);\n            _notifyListeners('/meta/subscribe', message);\n        } else {\n            _failSubscribe(message);\n        }\n    }\n\n    function _subscribeFailure(message) {\n        _failSubscribe(message);\n    }\n\n    function _failUnsubscribe(message) {\n        _handleCallback(message);\n        _notifyListeners('/meta/unsubscribe', message);\n        _notifyListeners('/meta/unsuccessful', message);\n    }\n\n    function _unsubscribeResponse(message) {\n        if (message.successful) {\n            _handleCallback(message);\n            _notifyListeners('/meta/unsubscribe', message);\n        } else {\n            _failUnsubscribe(message);\n        }\n    }\n\n    function _unsubscribeFailure(message) {\n        _failUnsubscribe(message);\n    }\n\n    function _failMessage(message) {\n        if (!_handleRemoteCall(message)) {\n            _handleCallback(message);\n            _notifyListeners('/meta/publish', message);\n            _notifyListeners('/meta/unsuccessful', message);\n        }\n    }\n\n    function _messageResponse(message) {\n        if (message.data !== undefined) {\n            if (!_handleRemoteCall(message)) {\n                _notifyListeners(message.channel, message);\n                if (_handshakeMessages > 0) {\n                    --_handshakeMessages;\n                    if (_handshakeMessages === 0) {\n                        _cometd._debug('Processed last handshake-delivered message');\n                        _delayedConnect(0);\n                    }\n                }\n            }\n        } else {\n            if (message.successful === undefined) {\n                _cometd._warn('Unknown Bayeux Message', message);\n            } else {\n                if (message.successful) {\n                    _handleCallback(message);\n                    _notifyListeners('/meta/publish', message);\n                } else {\n                    _failMessage(message);\n                }\n            }\n        }\n    }\n\n    function _messageFailure(failure) {\n        _failMessage(failure);\n    }\n\n    function _receive(message) {\n        _unconnectTime = 0;\n\n        message = _applyIncomingExtensions(message);\n        if (message === undefined || message === null) {\n            return;\n        }\n\n        _updateAdvice(message.advice);\n\n        var channel = message.channel;\n        switch (channel) {\n            case '/meta/handshake':\n                _handshakeResponse(message);\n                break;\n            case '/meta/connect':\n                _connectResponse(message);\n                break;\n            case '/meta/disconnect':\n                _disconnectResponse(message);\n                break;\n            case '/meta/subscribe':\n                _subscribeResponse(message);\n                break;\n            case '/meta/unsubscribe':\n                _unsubscribeResponse(message);\n                break;\n            default:\n                _messageResponse(message);\n                break;\n        }\n    }\n\n    /**\n     * Receives a message.\n     * This method is exposed as a public so that extensions may inject\n     * messages simulating that they had been received.\n     */\n    this.receive = _receive;\n\n    _handleMessages = function(rcvdMessages) {\n        _cometd._debug('Received', rcvdMessages);\n\n        for (var i = 0; i < rcvdMessages.length; ++i) {\n            var message = rcvdMessages[i];\n            _receive(message);\n        }\n    };\n\n    _handleFailure = function(conduit, messages, failure) {\n        _cometd._debug('handleFailure', conduit, messages, failure);\n\n        failure.transport = conduit;\n        for (var i = 0; i < messages.length; ++i) {\n            var message = messages[i];\n            var failureMessage = {\n                id: message.id,\n                successful: false,\n                channel: message.channel,\n                failure: failure\n            };\n            failure.message = message;\n            switch (message.channel) {\n                case '/meta/handshake':\n                    _handshakeFailure(failureMessage);\n                    break;\n                case '/meta/connect':\n                    _connectFailure(failureMessage);\n                    break;\n                case '/meta/disconnect':\n                    _disconnectFailure(failureMessage);\n                    break;\n                case '/meta/subscribe':\n                    failureMessage.subscription = message.subscription;\n                    _subscribeFailure(failureMessage);\n                    break;\n                case '/meta/unsubscribe':\n                    failureMessage.subscription = message.subscription;\n                    _unsubscribeFailure(failureMessage);\n                    break;\n                default:\n                    _messageFailure(failureMessage);\n                    break;\n            }\n        }\n    };\n\n    function _hasSubscriptions(channel) {\n        var subscriptions = _listeners[channel];\n        if (subscriptions) {\n            for (var i = 0; i < subscriptions.length; ++i) {\n                if (subscriptions[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function _resolveScopedCallback(scope, callback) {\n        var delegate = {\n            scope: scope,\n            method: callback\n        };\n        if (_isFunction(scope)) {\n            delegate.scope = undefined;\n            delegate.method = scope;\n        } else {\n            if (_isString(callback)) {\n                if (!scope) {\n                    throw 'Invalid scope ' + scope;\n                }\n                delegate.method = scope[callback];\n                if (!_isFunction(delegate.method)) {\n                    throw 'Invalid callback ' + callback + ' for scope ' + scope;\n                }\n            } else if (!_isFunction(callback)) {\n                throw 'Invalid callback ' + callback;\n            }\n        }\n        return delegate;\n    }\n\n    function _addListener(channel, scope, callback, isListener) {\n        // The data structure is a map<channel, subscription[]>, where each subscription\n        // holds the callback to be called and its scope.\n\n        var delegate = _resolveScopedCallback(scope, callback);\n        _cometd._debug('Adding', isListener ? 'listener' : 'subscription', 'on', channel, 'with scope', delegate.scope, 'and callback', delegate.method);\n\n        var subscription = {\n            channel: channel,\n            scope: delegate.scope,\n            callback: delegate.method,\n            listener: isListener\n        };\n\n        var subscriptions = _listeners[channel];\n        if (!subscriptions) {\n            subscriptions = [];\n            _listeners[channel] = subscriptions;\n        }\n\n        // Pushing onto an array appends at the end and returns the id associated with the element increased by 1.\n        // Note that if:\n        // a.push('a'); var hb=a.push('b'); delete a[hb-1]; var hc=a.push('c');\n        // then:\n        // hc==3, a.join()=='a',,'c', a.length==3\n        subscription.id = subscriptions.push(subscription) - 1;\n\n        _cometd._debug('Added', isListener ? 'listener' : 'subscription', subscription);\n\n        // For backward compatibility: we used to return [channel, subscription.id]\n        subscription[0] = channel;\n        subscription[1] = subscription.id;\n\n        return subscription;\n    }\n\n    //\n    // PUBLIC API\n    //\n\n    /**\n     * Registers the given transport under the given transport type.\n     * The optional index parameter specifies the \"priority\" at which the\n     * transport is registered (where 0 is the max priority).\n     * If a transport with the same type is already registered, this function\n     * does nothing and returns false.\n     * @param type the transport type\n     * @param transport the transport object\n     * @param index the index at which this transport is to be registered\n     * @return true if the transport has been registered, false otherwise\n     * @see #unregisterTransport(type)\n     */\n    this.registerTransport = function(type, transport, index) {\n        var result = _transports.add(type, transport, index);\n        if (result) {\n            this._debug('Registered transport', type);\n\n            if (_isFunction(transport.registered)) {\n                transport.registered(type, this);\n            }\n        }\n        return result;\n    };\n\n    /**\n     * Unregisters the transport with the given transport type.\n     * @param type the transport type to unregister\n     * @return the transport that has been unregistered,\n     * or null if no transport was previously registered under the given transport type\n     */\n    this.unregisterTransport = function(type) {\n        var transport = _transports.remove(type);\n        if (transport !== null) {\n            this._debug('Unregistered transport', type);\n\n            if (_isFunction(transport.unregistered)) {\n                transport.unregistered();\n            }\n        }\n        return transport;\n    };\n\n    this.unregisterTransports = function() {\n        _transports.clear();\n    };\n\n    /**\n     * @return an array of all registered transport types\n     */\n    this.getTransportTypes = function() {\n        return _transports.getTransportTypes();\n    };\n\n    this.findTransport = function(name) {\n        return _transports.find(name);\n    };\n\n    /**\n     * @returns the TransportRegistry object\n     */\n    this.getTransportRegistry = function() {\n        return _transports;\n    };\n\n    /**\n     * Configures the initial Bayeux communication with the Bayeux server.\n     * Configuration is passed via an object that must contain a mandatory field <code>url</code>\n     * of type string containing the URL of the Bayeux server.\n     * @param configuration the configuration object\n     */\n    this.configure = function(configuration) {\n        _configure.call(this, configuration);\n    };\n\n    /**\n     * Configures and establishes the Bayeux communication with the Bayeux server\n     * via a handshake and a subsequent connect.\n     * @param configuration the configuration object\n     * @param handshakeProps an object to be merged with the handshake message\n     * @see #configure(configuration)\n     * @see #handshake(handshakeProps)\n     */\n    this.init = function(configuration, handshakeProps) {\n        this.configure(configuration);\n        this.handshake(handshakeProps);\n    };\n\n    /**\n     * Establishes the Bayeux communication with the Bayeux server\n     * via a handshake and a subsequent connect.\n     * @param handshakeProps an object to be merged with the handshake message\n     * @param handshakeCallback a function to be invoked when the handshake is acknowledged\n     */\n    this.handshake = function(handshakeProps, handshakeCallback) {\n        _setStatus('disconnected');\n        _reestablish = false;\n        _handshake(handshakeProps, handshakeCallback);\n    };\n\n    /**\n     * Disconnects from the Bayeux server.\n     * It is possible to suggest to attempt a synchronous disconnect, but this feature\n     * may only be available in certain transports (for example, long-polling may support\n     * it, callback-polling certainly does not).\n     * @param sync whether attempt to perform a synchronous disconnect\n     * @param disconnectProps an object to be merged with the disconnect message\n     * @param disconnectCallback a function to be invoked when the disconnect is acknowledged\n     */\n    this.disconnect = function(sync, disconnectProps, disconnectCallback) {\n        if (_isDisconnected()) {\n            return;\n        }\n\n        if (typeof sync !== 'boolean') {\n            disconnectCallback = disconnectProps;\n            disconnectProps = sync;\n            sync = false;\n        }\n        if (_isFunction(disconnectProps)) {\n            disconnectCallback = disconnectProps;\n            disconnectProps = undefined;\n        }\n\n        var bayeuxMessage = {\n            id: _nextMessageId(),\n            channel: '/meta/disconnect'\n        };\n        // Do not allow the user to override important fields.\n        var message = this._mixin(false, {}, disconnectProps, bayeuxMessage);\n\n        // Save the callback.\n        _cometd._putCallback(message.id, disconnectCallback);\n\n        _setStatus('disconnecting');\n        _send(sync === true, [message], false, 'disconnect');\n    };\n\n    /**\n     * Marks the start of a batch of application messages to be sent to the server\n     * in a single request, obtaining a single response containing (possibly) many\n     * application reply messages.\n     * Messages are held in a queue and not sent until {@link #endBatch()} is called.\n     * If startBatch() is called multiple times, then an equal number of endBatch()\n     * calls must be made to close and send the batch of messages.\n     * @see #endBatch()\n     */\n    this.startBatch = function() {\n        _startBatch();\n    };\n\n    /**\n     * Marks the end of a batch of application messages to be sent to the server\n     * in a single request.\n     * @see #startBatch()\n     */\n    this.endBatch = function() {\n        _endBatch();\n    };\n\n    /**\n     * Executes the given callback in the given scope, surrounded by a {@link #startBatch()}\n     * and {@link #endBatch()} calls.\n     * @param scope the scope of the callback, may be omitted\n     * @param callback the callback to be executed within {@link #startBatch()} and {@link #endBatch()} calls\n     */\n    this.batch = function(scope, callback) {\n        var delegate = _resolveScopedCallback(scope, callback);\n        this.startBatch();\n        try {\n            delegate.method.call(delegate.scope);\n            this.endBatch();\n        } catch (x) {\n            this._info('Exception during execution of batch', x);\n            this.endBatch();\n            throw x;\n        }\n    };\n\n    /**\n     * Adds a listener for bayeux messages, performing the given callback in the given scope\n     * when a message for the given channel arrives.\n     * @param channel the channel the listener is interested to\n     * @param scope the scope of the callback, may be omitted\n     * @param callback the callback to call when a message is sent to the channel\n     * @returns the subscription handle to be passed to {@link #removeListener(object)}\n     * @see #removeListener(subscription)\n     */\n    this.addListener = function(channel, scope, callback) {\n        if (arguments.length < 2) {\n            throw 'Illegal arguments number: required 2, got ' + arguments.length;\n        }\n        if (!_isString(channel)) {\n            throw 'Illegal argument type: channel must be a string';\n        }\n\n        return _addListener(channel, scope, callback, true);\n    };\n\n    /**\n     * Removes the subscription obtained with a call to {@link #addListener(string, object, function)}.\n     * @param subscription the subscription to unsubscribe.\n     * @see #addListener(channel, scope, callback)\n     */\n    this.removeListener = function(subscription) {\n        // Beware of subscription.id == 0, which is falsy => cannot use !subscription.id\n        if (!subscription || !subscription.channel || !(\"id\" in subscription)) {\n            throw 'Invalid argument: expected subscription, not ' + subscription;\n        }\n\n        _removeListener(subscription);\n    };\n\n    /**\n     * Removes all listeners registered with {@link #addListener(channel, scope, callback)} or\n     * {@link #subscribe(channel, scope, callback)}.\n     */\n    this.clearListeners = function() {\n        _listeners = {};\n    };\n\n    /**\n     * Subscribes to the given channel, performing the given callback in the given scope\n     * when a message for the channel arrives.\n     * @param channel the channel to subscribe to\n     * @param scope the scope of the callback, may be omitted\n     * @param callback the callback to call when a message is sent to the channel\n     * @param subscribeProps an object to be merged with the subscribe message\n     * @param subscribeCallback a function to be invoked when the subscription is acknowledged\n     * @return the subscription handle to be passed to {@link #unsubscribe(object)}\n     */\n    this.subscribe = function(channel, scope, callback, subscribeProps, subscribeCallback) {\n        if (arguments.length < 2) {\n            throw 'Illegal arguments number: required 2, got ' + arguments.length;\n        }\n        if (!_isString(channel)) {\n            throw 'Illegal argument type: channel must be a string';\n        }\n        if (_isDisconnected()) {\n            throw 'Illegal state: already disconnected';\n        }\n\n        // Normalize arguments\n        if (_isFunction(scope)) {\n            subscribeCallback = subscribeProps;\n            subscribeProps = callback;\n            callback = scope;\n            scope = undefined;\n        }\n        if (_isFunction(subscribeProps)) {\n            subscribeCallback = subscribeProps;\n            subscribeProps = undefined;\n        }\n\n        // Only send the message to the server if this client has not yet subscribed to the channel\n        var send = !_hasSubscriptions(channel);\n\n        var subscription = _addListener(channel, scope, callback, false);\n\n        if (send) {\n            // Send the subscription message after the subscription registration to avoid\n            // races where the server would send a message to the subscribers, but here\n            // on the client the subscription has not been added yet to the data structures\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                channel: '/meta/subscribe',\n                subscription: channel\n            };\n            // Do not allow the user to override important fields.\n            var message = this._mixin(false, {}, subscribeProps, bayeuxMessage);\n\n            // Save the callback.\n            _cometd._putCallback(message.id, subscribeCallback);\n\n            _queueSend(message);\n        }\n\n        return subscription;\n    };\n\n    /**\n     * Unsubscribes the subscription obtained with a call to {@link #subscribe(string, object, function)}.\n     * @param subscription the subscription to unsubscribe.\n     * @param unsubscribeProps an object to be merged with the unsubscribe message\n     * @param unsubscribeCallback a function to be invoked when the unsubscription is acknowledged\n     */\n    this.unsubscribe = function(subscription, unsubscribeProps, unsubscribeCallback) {\n        if (arguments.length < 1) {\n            throw 'Illegal arguments number: required 1, got ' + arguments.length;\n        }\n        if (_isDisconnected()) {\n            throw 'Illegal state: already disconnected';\n        }\n\n        if (_isFunction(unsubscribeProps)) {\n            unsubscribeCallback = unsubscribeProps;\n            unsubscribeProps = undefined;\n        }\n\n        // Remove the local listener before sending the message\n        // This ensures that if the server fails, this client does not get notifications\n        this.removeListener(subscription);\n\n        var channel = subscription.channel;\n        // Only send the message to the server if this client unsubscribes the last subscription\n        if (!_hasSubscriptions(channel)) {\n            var bayeuxMessage = {\n                id: _nextMessageId(),\n                channel: '/meta/unsubscribe',\n                subscription: channel\n            };\n            // Do not allow the user to override important fields.\n            var message = this._mixin(false, {}, unsubscribeProps, bayeuxMessage);\n\n            // Save the callback.\n            _cometd._putCallback(message.id, unsubscribeCallback);\n\n            _queueSend(message);\n        }\n    };\n\n    this.resubscribe = function(subscription, subscribeProps) {\n        _removeSubscription(subscription);\n        if (subscription) {\n            return this.subscribe(subscription.channel, subscription.scope, subscription.callback, subscribeProps);\n        }\n        return undefined;\n    };\n\n    /**\n     * Removes all subscriptions added via {@link #subscribe(channel, scope, callback, subscribeProps)},\n     * but does not remove the listeners added via {@link addListener(channel, scope, callback)}.\n     */\n    this.clearSubscriptions = function() {\n        _clearSubscriptions();\n    };\n\n    /**\n     * Publishes a message on the given channel, containing the given content.\n     * @param channel the channel to publish the message to\n     * @param content the content of the message\n     * @param publishProps an object to be merged with the publish message\n     * @param publishCallback a function to be invoked when the publish is acknowledged by the server\n     */\n    this.publish = function(channel, content, publishProps, publishCallback) {\n        if (arguments.length < 1) {\n            throw 'Illegal arguments number: required 1, got ' + arguments.length;\n        }\n        if (!_isString(channel)) {\n            throw 'Illegal argument type: channel must be a string';\n        }\n        if (/^\\/meta\\//.test(channel)) {\n            throw 'Illegal argument: cannot publish to meta channels';\n        }\n        if (_isDisconnected()) {\n            throw 'Illegal state: already disconnected';\n        }\n\n        if (_isFunction(content)) {\n            publishCallback = content;\n            content = publishProps = {};\n        } else if (_isFunction(publishProps)) {\n            publishCallback = publishProps;\n            publishProps = {};\n        }\n\n        var bayeuxMessage = {\n            id: _nextMessageId(),\n            channel: channel,\n            data: content\n        };\n        // Do not allow the user to override important fields.\n        var message = this._mixin(false, {}, publishProps, bayeuxMessage);\n\n        // Save the callback.\n        _cometd._putCallback(message.id, publishCallback);\n\n        _queueSend(message);\n    };\n\n    this.remoteCall = function(target, content, timeout, callback) {\n        if (arguments.length < 1) {\n            throw 'Illegal arguments number: required 1, got ' + arguments.length;\n        }\n        if (!_isString(target)) {\n            throw 'Illegal argument type: target must be a string';\n        }\n        if (_isDisconnected()) {\n            throw 'Illegal state: already disconnected';\n        }\n\n        if (_isFunction(content)) {\n            callback = content;\n            content = {};\n            timeout = _config.maxNetworkDelay;\n        } else if (_isFunction(timeout)) {\n            callback = timeout;\n            timeout = _config.maxNetworkDelay;\n        }\n\n        if (typeof timeout !== 'number') {\n            throw 'Illegal argument type: timeout must be a number';\n        }\n\n        if (!target.match(/^\\//)) {\n            target = '/' + target;\n        }\n        var channel = '/service' + target;\n\n        var bayeuxMessage = {\n            id: _nextMessageId(),\n            channel: channel,\n            data: content\n        };\n\n        var context = {\n            callback: callback\n        };\n        if (timeout > 0) {\n            context.timeout = Utils.setTimeout(_cometd, function() {\n                _cometd._debug('Timing out remote call', bayeuxMessage, 'after', timeout, 'ms');\n                _failMessage({\n                    id: bayeuxMessage.id,\n                    error: '406::timeout',\n                    successful: false,\n                    failure: {\n                        message : bayeuxMessage,\n                        reason: 'Remote Call Timeout'\n                    }\n                });\n            }, timeout);\n            _cometd._debug('Scheduled remote call timeout', bayeuxMessage, 'in', timeout, 'ms');\n        }\n        _remoteCalls[bayeuxMessage.id] = context;\n\n        _queueSend(bayeuxMessage);\n    };\n\n    /**\n     * Returns a string representing the status of the bayeux communication with the Bayeux server.\n     */\n    this.getStatus = function() {\n        return _status;\n    };\n\n    /**\n     * Returns whether this instance has been disconnected.\n     */\n    this.isDisconnected = _isDisconnected;\n\n    /**\n     * Sets the backoff period used to increase the backoff time when retrying an unsuccessful or failed message.\n     * Default value is 1 second, which means if there is a persistent failure the retries will happen\n     * after 1 second, then after 2 seconds, then after 3 seconds, etc. So for example with 15 seconds of\n     * elapsed time, there will be 5 retries (at 1, 3, 6, 10 and 15 seconds elapsed).\n     * @param period the backoff period to set\n     * @see #getBackoffIncrement()\n     */\n    this.setBackoffIncrement = function(period) {\n        _config.backoffIncrement = period;\n    };\n\n    /**\n     * Returns the backoff period used to increase the backoff time when retrying an unsuccessful or failed message.\n     * @see #setBackoffIncrement(period)\n     */\n    this.getBackoffIncrement = function() {\n        return _config.backoffIncrement;\n    };\n\n    /**\n     * Returns the backoff period to wait before retrying an unsuccessful or failed message.\n     */\n    this.getBackoffPeriod = function() {\n        return _backoff;\n    };\n\n    /**\n     * Increases the backoff period up to the maximum value configured.\n     * @returns the backoff period after increment\n     * @see getBackoffIncrement\n     */\n    this.increaseBackoffPeriod = function() {\n        return _increaseBackoff();\n    };\n\n    /**\n     * Resets the backoff period to zero.\n     */\n    this.resetBackoffPeriod = function() {\n        _resetBackoff();\n    };\n\n    /**\n     * Sets the log level for console logging.\n     * Valid values are the strings 'error', 'warn', 'info' and 'debug', from\n     * less verbose to more verbose.\n     * @param level the log level string\n     */\n    this.setLogLevel = function(level) {\n        _config.logLevel = level;\n    };\n\n    /**\n     * Registers an extension whose callbacks are called for every incoming message\n     * (that comes from the server to this client implementation) and for every\n     * outgoing message (that originates from this client implementation for the\n     * server).\n     * The format of the extension object is the following:\n     * <pre>\n     * {\n     *     incoming: function(message) { ... },\n     *     outgoing: function(message) { ... }\n     * }\n     * </pre>\n     * Both properties are optional, but if they are present they will be called\n     * respectively for each incoming message and for each outgoing message.\n     * @param name the name of the extension\n     * @param extension the extension to register\n     * @return true if the extension was registered, false otherwise\n     * @see #unregisterExtension(name)\n     */\n    this.registerExtension = function(name, extension) {\n        if (arguments.length < 2) {\n            throw 'Illegal arguments number: required 2, got ' + arguments.length;\n        }\n        if (!_isString(name)) {\n            throw 'Illegal argument type: extension name must be a string';\n        }\n\n        var existing = false;\n        for (var i = 0; i < _extensions.length; ++i) {\n            var existingExtension = _extensions[i];\n            if (existingExtension.name === name) {\n                existing = true;\n                break;\n            }\n        }\n        if (!existing) {\n            _extensions.push({\n                name: name,\n                extension: extension\n            });\n            this._debug('Registered extension', name);\n\n            // Callback for extensions\n            if (_isFunction(extension.registered)) {\n                extension.registered(name, this);\n            }\n\n            return true;\n        } else {\n            this._info('Could not register extension with name', name, 'since another extension with the same name already exists');\n            return false;\n        }\n    };\n\n    /**\n     * Unregister an extension previously registered with\n     * {@link #registerExtension(name, extension)}.\n     * @param name the name of the extension to unregister.\n     * @return true if the extension was unregistered, false otherwise\n     */\n    this.unregisterExtension = function(name) {\n        if (!_isString(name)) {\n            throw 'Illegal argument type: extension name must be a string';\n        }\n\n        var unregistered = false;\n        for (var i = 0; i < _extensions.length; ++i) {\n            var extension = _extensions[i];\n            if (extension.name === name) {\n                _extensions.splice(i, 1);\n                unregistered = true;\n                this._debug('Unregistered extension', name);\n\n                // Callback for extensions\n                var ext = extension.extension;\n                if (_isFunction(ext.unregistered)) {\n                    ext.unregistered();\n                }\n\n                break;\n            }\n        }\n        return unregistered;\n    };\n\n    /**\n     * Find the extension registered with the given name.\n     * @param name the name of the extension to find\n     * @return the extension found or null if no extension with the given name has been registered\n     */\n    this.getExtension = function(name) {\n        for (var i = 0; i < _extensions.length; ++i) {\n            var extension = _extensions[i];\n            if (extension.name === name) {\n                return extension.extension;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Returns the name assigned to this CometD object, or the string 'default'\n     * if no name has been explicitly passed as parameter to the constructor.\n     */\n    this.getName = function() {\n        return _name;\n    };\n\n    /**\n     * Returns the clientId assigned by the Bayeux server during handshake.\n     */\n    this.getClientId = function() {\n        return _clientId;\n    };\n\n    /**\n     * Returns the URL of the Bayeux server.\n     */\n    this.getURL = function() {\n        if (_transport) {\n            var url = _transport.getURL();\n            if (url) {\n                return url;\n            }\n            url = _config.urls[_transport.getType()];\n            if (url) {\n                return url;\n            }\n        }\n        return _config.url;\n    };\n\n    this.getTransport = function() {\n        return _transport;\n    };\n\n    this.getConfiguration = function() {\n        return this._mixin(true, {}, _config);\n    };\n\n    this.getAdvice = function() {\n        return this._mixin(true, {}, _advice);\n    };\n};\n","module.exports = {\n  LONG_POLLING: 'long-polling',\n  WEBSOCKET: 'websocket'\n}","var Utils = require('./Utils');\n\n/**\n * Base object with the common functionality for transports.\n */\nmodule.exports = function Transport() {\n    var _type;\n    var _cometd;\n    var _url;\n\n    /**\n     * Function invoked just after a transport has been successfully registered.\n     * @param type the type of transport (for example 'long-polling')\n     * @param cometd the cometd object this transport has been registered to\n     * @see #unregistered()\n     */\n    this.registered = function(type, cometd) {\n        _type = type;\n        _cometd = cometd;\n    };\n\n    /**\n     * Function invoked just after a transport has been successfully unregistered.\n     * @see #registered(type, cometd)\n     */\n    this.unregistered = function() {\n        _type = null;\n        _cometd = null;\n    };\n\n    this._debug = function() {\n        _cometd._debug.apply(_cometd, arguments);\n    };\n\n    this._mixin = function() {\n        return _cometd._mixin.apply(_cometd, arguments);\n    };\n\n    this.getConfiguration = function() {\n        return _cometd.getConfiguration();\n    };\n\n    this.getAdvice = function() {\n        return _cometd.getAdvice();\n    };\n\n    this.setTimeout = function(funktion, delay) {\n        return Utils.setTimeout(_cometd, funktion, delay);\n    };\n\n    this.clearTimeout = function(handle) {\n        Utils.clearTimeout(handle);\n    };\n\n    /**\n     * Converts the given response into an array of bayeux messages\n     * @param response the response to convert\n     * @return an array of bayeux messages obtained by converting the response\n     */\n    this.convertToMessages = function(response) {\n        if (Utils.isString(response)) {\n            try {\n                return JSON.parse(response);\n            } catch (x) {\n                this._debug('Could not convert to JSON the following string', '\"' + response + '\"');\n                throw x;\n            }\n        }\n        if (Utils.isArray(response)) {\n            return response;\n        }\n        if (response === undefined || response === null) {\n            return [];\n        }\n        if (response instanceof Object) {\n            return [response];\n        }\n        throw 'Conversion Error ' + response + ', typeof ' + (typeof response);\n    };\n\n    /**\n     * Returns whether this transport can work for the given version and cross domain communication case.\n     * @param version a string indicating the transport version\n     * @param crossDomain a boolean indicating whether the communication is cross domain\n     * @param url the URL to connect to\n     * @return true if this transport can work for the given version and cross domain communication case,\n     * false otherwise\n     */\n    this.accept = function(version, crossDomain, url) {\n        throw 'Abstract';\n    };\n\n    /**\n     * Returns the type of this transport.\n     * @see #registered(type, cometd)\n     */\n    this.getType = function() {\n        return _type;\n    };\n\n    this.getURL = function() {\n        return _url;\n    };\n\n    this.setURL = function(url) {\n        _url = url;\n    };\n\n    this.send = function(envelope, metaConnect) {\n        throw 'Abstract';\n    };\n\n    this.reset = function(init) {\n        this._debug('Transport', _type, 'reset', init ? 'initial' : 'retry');\n    };\n\n    this.abort = function() {\n        this._debug('Transport', _type, 'aborted');\n    };\n\n    this.toString = function() {\n        return this.getType();\n    };\n};\n\nmodule.exports.derive = function(baseObject) {\n    function F() {\n    }\n\n    F.prototype = baseObject;\n    return new F();\n};\n","var Transport = require('./Transport');\nvar Utils = require('./Utils');\n\n/**\n * Base object with the common functionality for transports based on requests.\n * The key responsibility is to allow at most 2 outstanding requests to the server,\n * to avoid that requests are sent behind a long poll.\n * To achieve this, we have one reserved request for the long poll, and all other\n * requests are serialized one after the other.\n */\nmodule.exports = function RequestTransport() {\n    var _super = new Transport();\n    var _self = Transport.derive(_super);\n    var _requestIds = 0;\n    var _metaConnectRequest = null;\n    var _requests = [];\n    var _envelopes = [];\n\n    function _coalesceEnvelopes(envelope) {\n        while (_envelopes.length > 0) {\n            var envelopeAndRequest = _envelopes[0];\n            var newEnvelope = envelopeAndRequest[0];\n            var newRequest = envelopeAndRequest[1];\n            if (newEnvelope.url === envelope.url &&\n                newEnvelope.sync === envelope.sync) {\n                _envelopes.shift();\n                envelope.messages = envelope.messages.concat(newEnvelope.messages);\n                this._debug('Coalesced', newEnvelope.messages.length, 'messages from request', newRequest.id);\n                continue;\n            }\n            break;\n        }\n    }\n\n    function _transportSend(envelope, request) {\n        this.transportSend(envelope, request);\n        request.expired = false;\n\n        if (!envelope.sync) {\n            var maxDelay = this.getConfiguration().maxNetworkDelay;\n            var delay = maxDelay;\n            if (request.metaConnect === true) {\n                delay += this.getAdvice().timeout;\n            }\n\n            this._debug('Transport', this.getType(), 'waiting at most', delay, 'ms for the response, maxNetworkDelay', maxDelay);\n\n            var self = this;\n            request.timeout = self.setTimeout(function() {\n                request.expired = true;\n                var errorMessage = 'Request ' + request.id + ' of transport ' + self.getType() + ' exceeded ' + delay + ' ms max network delay';\n                var failure = {\n                    reason: errorMessage\n                };\n                var xhr = request.xhr;\n                failure.httpCode = self.xhrStatus(xhr);\n                self.abortXHR(xhr);\n                self._debug(errorMessage);\n                self.complete(request, false, request.metaConnect);\n                envelope.onFailure(xhr, envelope.messages, failure);\n            }, delay);\n        }\n    }\n\n    function _queueSend(envelope) {\n        var requestId = ++_requestIds;\n        var request = {\n            id: requestId,\n            metaConnect: false,\n            envelope: envelope\n        };\n\n        // Consider the metaConnect requests which should always be present\n        if (_requests.length < this.getConfiguration().maxConnections - 1) {\n            _requests.push(request);\n            _transportSend.call(this, envelope, request);\n        } else {\n            this._debug('Transport', this.getType(), 'queueing request', requestId, 'envelope', envelope);\n            _envelopes.push([envelope, request]);\n        }\n    }\n\n    function _metaConnectComplete(request) {\n        var requestId = request.id;\n        this._debug('Transport', this.getType(), 'metaConnect complete, request', requestId);\n        if (_metaConnectRequest !== null && _metaConnectRequest.id !== requestId) {\n            throw 'Longpoll request mismatch, completing request ' + requestId;\n        }\n\n        // Reset metaConnect request\n        _metaConnectRequest = null;\n    }\n\n    function _complete(request, success) {\n        var index = Utils.inArray(request, _requests);\n        // The index can be negative if the request has been aborted\n        if (index >= 0) {\n            _requests.splice(index, 1);\n        }\n\n        if (_envelopes.length > 0) {\n            var envelopeAndRequest = _envelopes.shift();\n            var nextEnvelope = envelopeAndRequest[0];\n            var nextRequest = envelopeAndRequest[1];\n            this._debug('Transport dequeued request', nextRequest.id);\n            if (success) {\n                if (this.getConfiguration().autoBatch) {\n                    _coalesceEnvelopes.call(this, nextEnvelope);\n                }\n                _queueSend.call(this, nextEnvelope);\n                this._debug('Transport completed request', request.id, nextEnvelope);\n            } else {\n                // Keep the semantic of calling response callbacks asynchronously after the request\n                var self = this;\n                self.setTimeout(function() {\n                    self.complete(nextRequest, false, nextRequest.metaConnect);\n                    var failure = {\n                        reason: 'Previous request failed'\n                    };\n                    var xhr = nextRequest.xhr;\n                    failure.httpCode = self.xhrStatus(xhr);\n                    nextEnvelope.onFailure(xhr, nextEnvelope.messages, failure);\n                }, 0);\n            }\n        }\n    }\n\n    _self.complete = function(request, success, metaConnect) {\n        if (metaConnect) {\n            _metaConnectComplete.call(this, request);\n        } else {\n            _complete.call(this, request, success);\n        }\n    };\n\n    /**\n     * Performs the actual send depending on the transport type details.\n     * @param envelope the envelope to send\n     * @param request the request information\n     */\n    _self.transportSend = function(envelope, request) {\n        throw 'Abstract';\n    };\n\n    _self.transportSuccess = function(envelope, request, responses) {\n        if (!request.expired) {\n            this.clearTimeout(request.timeout);\n            this.complete(request, true, request.metaConnect);\n            if (responses && responses.length > 0) {\n                envelope.onSuccess(responses);\n            } else {\n                envelope.onFailure(request.xhr, envelope.messages, {\n                    httpCode: 204\n                });\n            }\n        }\n    };\n\n    _self.transportFailure = function(envelope, request, failure) {\n        if (!request.expired) {\n            this.clearTimeout(request.timeout);\n            this.complete(request, false, request.metaConnect);\n            envelope.onFailure(request.xhr, envelope.messages, failure);\n        }\n    };\n\n    function _metaConnectSend(envelope) {\n        if (_metaConnectRequest !== null) {\n            throw 'Concurrent metaConnect requests not allowed, request id=' + _metaConnectRequest.id + ' not yet completed';\n        }\n\n        var requestId = ++_requestIds;\n        this._debug('Transport', this.getType(), 'metaConnect send, request', requestId, 'envelope', envelope);\n        var request = {\n            id: requestId,\n            metaConnect: true,\n            envelope: envelope\n        };\n        _transportSend.call(this, envelope, request);\n        _metaConnectRequest = request;\n    }\n\n    _self.send = function(envelope, metaConnect) {\n        if (metaConnect) {\n            _metaConnectSend.call(this, envelope);\n        } else {\n            _queueSend.call(this, envelope);\n        }\n    };\n\n    _self.abort = function() {\n        _super.abort();\n        for (var i = 0; i < _requests.length; ++i) {\n            var request = _requests[i];\n            if (request) {\n                this._debug('Aborting request', request);\n                if (!this.abortXHR(request.xhr)) {\n                    this.transportFailure(request.envelope, request, {reason: 'abort'});\n                }\n            }\n        }\n        if (_metaConnectRequest) {\n            this._debug('Aborting metaConnect request', _metaConnectRequest);\n            if (!this.abortXHR(_metaConnectRequest.xhr)) {\n                this.transportFailure(_metaConnectRequest.envelope, _metaConnectRequest, {reason: 'abort'});\n            }\n        }\n        this.reset(true);\n    };\n\n    _self.reset = function(init) {\n        _super.reset(init);\n        _metaConnectRequest = null;\n        _requests = [];\n        _envelopes = [];\n    };\n\n    _self.abortXHR = function(xhr) {\n        if (xhr) {\n            try {\n                var state = xhr.readyState;\n                xhr.abort();\n                return state !== XMLHttpRequest.UNSENT;\n            } catch (x) {\n                this._debug(x);\n            }\n        }\n        return false;\n    };\n\n    _self.xhrStatus = function(xhr) {\n        if (xhr) {\n            try {\n                return xhr.status;\n            } catch (x) {\n                this._debug(x);\n            }\n        }\n        return -1;\n    };\n\n    return _self;\n};\n","var Transport = require('./Transport');\nvar RequestTransport = require('./RequestTransport');\n\nmodule.exports = function LongPollingTransport() {\n    var _super = new RequestTransport();\n    var _self = Transport.derive(_super);\n    // By default, support cross domain\n    var _supportsCrossDomain = true;\n\n    _self.accept = function(version, crossDomain, url) {\n        return _supportsCrossDomain || !crossDomain;\n    };\n\n    _self.xhrSend = function(packet) {\n        throw 'Abstract';\n    };\n\n    _self.transportSend = function(envelope, request) {\n        this._debug('Transport', this.getType(), 'sending request', request.id, 'envelope', envelope);\n\n        var self = this;\n        try {\n            var sameStack = true;\n            request.xhr = this.xhrSend({\n                transport: this,\n                url: envelope.url,\n                sync: envelope.sync,\n                headers: this.getConfiguration().requestHeaders,\n                body: JSON.stringify(envelope.messages),\n                onSuccess: function(response) {\n                    self._debug('Transport', self.getType(), 'received response', response);\n                    var success = false;\n                    try {\n                        var received = self.convertToMessages(response);\n                        if (received.length === 0) {\n                            _supportsCrossDomain = false;\n                            self.transportFailure(envelope, request, {\n                                httpCode: 204\n                            });\n                        } else {\n                            success = true;\n                            self.transportSuccess(envelope, request, received);\n                        }\n                    } catch (x) {\n                        self._debug(x);\n                        if (!success) {\n                            _supportsCrossDomain = false;\n                            var failure = {\n                                exception: x\n                            };\n                            failure.httpCode = self.xhrStatus(request.xhr);\n                            self.transportFailure(envelope, request, failure);\n                        }\n                    }\n                },\n                onError: function(reason, exception) {\n                    self._debug('Transport', self.getType(), 'received error', reason, exception);\n                    _supportsCrossDomain = false;\n                    var failure = {\n                        reason: reason,\n                        exception: exception\n                    };\n                    failure.httpCode = self.xhrStatus(request.xhr);\n                    if (sameStack) {\n                        // Keep the semantic of calling response callbacks asynchronously after the request\n                        self.setTimeout(function() {\n                            self.transportFailure(envelope, request, failure);\n                        }, 0);\n                    } else {\n                        self.transportFailure(envelope, request, failure);\n                    }\n                }\n            });\n            sameStack = false;\n        } catch (x) {\n            _supportsCrossDomain = false;\n            // Keep the semantic of calling response callbacks asynchronously after the request\n            self.setTimeout(function() {\n                self.transportFailure(envelope, request, {\n                    exception: x\n                });\n            }, 0);\n        }\n    };\n\n    _self.reset = function(init) {\n        _super.reset(init);\n        _supportsCrossDomain = true;\n    };\n\n    return _self;\n};\n","var Transport = require('./Transport')\nvar LongPollingTransport = require('./LongPollingTransport')\n\n/**\n * Implements LongPollingTransport using borwser fetch() API\n * @access private\n * @return {FetchLongPollingTransport}\n */\nfunction FetchLongPollingTransport() {\n  var _super = new LongPollingTransport()\n  var that = Transport.derive(_super)\n\n  /**\n   * Implements transport via fetch() API\n   * @param {Object} packet\n   */\n  that.xhrSend = function (packet) {\n    FetchLongPollingTransport.fetch(packet.url, {\n      method: 'post',\n      body: packet.body,\n      headers: Object.assign(packet.headers, {\n        'Content-Type': 'application/json;charset=UTF-8'\n      })\n    })\n    .then(function (response) {\n      return response.json()\n    })\n    .then(packet.onSuccess)\n    .catch(packet.onError)\n  }\n\n  return that\n}\n\n// Reference global WebSocket \nFetchLongPollingTransport.fetch = 'Abstract'\n\n// Export FetchLongPollingTransport\nmodule.exports = FetchLongPollingTransport;\n","var Transport = require('./Transport');\nvar Utils = require('./Utils');\n\nfunction WebSocketTransport() {\n    var _super = new Transport();\n    var _self = Transport.derive(_super);\n    var _cometd;\n    // By default WebSocket is supported\n    var _webSocketSupported = true;\n    // Whether we were able to establish a WebSocket connection\n    var _webSocketConnected = false;\n    var _stickyReconnect = true;\n    // The context contains the envelopes that have been sent\n    // and the timeouts for the messages that have been sent.\n    var _context = null;\n    var _connecting = null;\n    var _connected = false;\n    var _successCallback = null;\n\n    _self.reset = function(init) {\n        _super.reset(init);\n        _webSocketSupported = true;\n        if (init) {\n            _webSocketConnected = false;\n        }\n        _stickyReconnect = true;\n        _context = null;\n        _connecting = null;\n        _connected = false;\n    };\n\n    function _forceClose(context, event) {\n        if (context) {\n            this.webSocketClose(context, event.code, event.reason);\n            // Force immediate failure of pending messages to trigger reconnect.\n            // This is needed because the server may not reply to our close()\n            // and therefore the onclose function is never called.\n            this.onClose(context, event);\n        }\n    }\n\n    function _sameContext(context) {\n        return context === _connecting || context === _context;\n    }\n\n    function _storeEnvelope(context, envelope, metaConnect) {\n        var messageIds = [];\n        for (var i = 0; i < envelope.messages.length; ++i) {\n            var message = envelope.messages[i];\n            if (message.id) {\n                messageIds.push(message.id);\n            }\n        }\n        context.envelopes[messageIds.join(',')] = [envelope, metaConnect];\n        this._debug('Transport', this.getType(), 'stored envelope, envelopes', context.envelopes);\n    }\n\n    function _websocketConnect(context) {\n        // We may have multiple attempts to open a WebSocket\n        // connection, for example a /meta/connect request that\n        // may take time, along with a user-triggered publish.\n        // Early return if we are already connecting.\n        if (_connecting) {\n            return;\n        }\n\n        // Mangle the URL, changing the scheme from 'http' to 'ws'.\n        var url = _cometd.getURL().replace(/^http/, 'ws');\n        this._debug('Transport', this.getType(), 'connecting to URL', url);\n\n        try {\n            var protocol = _cometd.getConfiguration().protocol;\n            var WebSocket = WebSocketTransport.WebSocket;\n            context.webSocket = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\n            _connecting = context;\n        } catch (x) {\n            _webSocketSupported = false;\n            this._debug('Exception while creating WebSocket object', x);\n            throw x;\n        }\n\n        // By default use sticky reconnects.\n        _stickyReconnect = _cometd.getConfiguration().stickyReconnect !== false;\n\n        var self = this;\n        var connectTimeout = _cometd.getConfiguration().connectTimeout;\n        if (connectTimeout > 0) {\n            context.connectTimer = self.setTimeout(function() {\n                _cometd._debug('Transport', self.getType(), 'timed out while connecting to URL', url, ':', connectTimeout, 'ms');\n                // The connection was not opened, close anyway.\n                _forceClose.call(self, context, {code: 1000, reason: 'Connect Timeout'});\n            }, connectTimeout);\n        }\n\n        var onopen = function() {\n            _cometd._debug('WebSocket onopen', context);\n            if (context.connectTimer) {\n                self.clearTimeout(context.connectTimer);\n            }\n\n            if (_sameContext(context)) {\n                _connecting = null;\n                _context = context;\n                _webSocketConnected = true;\n                self.onOpen(context);\n            } else {\n                // We have a valid connection already, close this one.\n                _cometd._warn('Closing extra WebSocket connection', this, 'active connection', _context);\n                _forceClose.call(self, context, {code: 1000, reason: 'Extra Connection'});\n            }\n        };\n\n        // This callback is invoked when the server sends the close frame.\n        // The close frame for a connection may arrive *after* another\n        // connection has been opened, so we must make sure that actions\n        // are performed only if it's the same connection.\n        var onclose = function(event) {\n            event = event || {code: 1000};\n            _cometd._debug('WebSocket onclose', context, event, 'connecting', _connecting, 'current', _context);\n\n            if (context.connectTimer) {\n                self.clearTimeout(context.connectTimer);\n            }\n\n            self.onClose(context, event);\n        };\n\n        var onmessage = function(wsMessage) {\n            _cometd._debug('WebSocket onmessage', wsMessage, context);\n            self.onMessage(context, wsMessage);\n        };\n\n        context.webSocket.onopen = onopen;\n        context.webSocket.onclose = onclose;\n        context.webSocket.onerror = function() {\n            // Clients should call onclose(), but if they do not we do it here for safety.\n            onclose({code: 1000, reason: 'Error'});\n        };\n        context.webSocket.onmessage = onmessage;\n\n        this._debug('Transport', this.getType(), 'configured callbacks on', context);\n    }\n\n    function _webSocketSend(context, envelope, metaConnect) {\n        var json = JSON.stringify(envelope.messages);\n        context.webSocket.send(json);\n        this._debug('Transport', this.getType(), 'sent', envelope, 'metaConnect =', metaConnect);\n\n        // Manage the timeout waiting for the response.\n        var maxDelay = this.getConfiguration().maxNetworkDelay;\n        var delay = maxDelay;\n        if (metaConnect) {\n            delay += this.getAdvice().timeout;\n            _connected = true;\n        }\n\n        var self = this;\n        var messageIds = [];\n        for (var i = 0; i < envelope.messages.length; ++i) {\n            (function() {\n                var message = envelope.messages[i];\n                if (message.id) {\n                    messageIds.push(message.id);\n                    context.timeouts[message.id] = self.setTimeout(function() {\n                        _cometd._debug('Transport', self.getType(), 'timing out message', message.id, 'after', delay, 'on', context);\n                        _forceClose.call(self, context, {code: 1000, reason: 'Message Timeout'});\n                    }, delay);\n                }\n            })();\n        }\n\n        this._debug('Transport', this.getType(), 'waiting at most', delay, 'ms for messages', messageIds, 'maxNetworkDelay', maxDelay, ', timeouts:', context.timeouts);\n    }\n\n    _self._notifySuccess = function(fn, messages) {\n        fn.call(this, messages);\n    };\n\n    _self._notifyFailure = function(fn, context, messages, failure) {\n        fn.call(this, context, messages, failure);\n    };\n\n    function _send(context, envelope, metaConnect) {\n        try {\n            if (context === null) {\n                context = _connecting || {\n                        envelopes: {},\n                        timeouts: {}\n                    };\n                _storeEnvelope.call(this, context, envelope, metaConnect);\n                _websocketConnect.call(this, context);\n            } else {\n                _storeEnvelope.call(this, context, envelope, metaConnect);\n                _webSocketSend.call(this, context, envelope, metaConnect);\n            }\n        } catch (x) {\n            // Keep the semantic of calling response callbacks asynchronously after the request.\n            var self = this;\n            self.setTimeout(function() {\n                _forceClose.call(self, context, {\n                    code: 1000,\n                    reason: 'Exception',\n                    exception: x\n                });\n            }, 0);\n        }\n    }\n\n    _self.onOpen = function(context) {\n        var envelopes = context.envelopes;\n        this._debug('Transport', this.getType(), 'opened', context, 'pending messages', envelopes);\n        for (var key in envelopes) {\n            if (envelopes.hasOwnProperty(key)) {\n                var element = envelopes[key];\n                var envelope = element[0];\n                var metaConnect = element[1];\n                // Store the success callback, which is independent from the envelope,\n                // so that it can be used to notify arrival of messages.\n                _successCallback = envelope.onSuccess;\n                _webSocketSend.call(this, context, envelope, metaConnect);\n            }\n        }\n    };\n\n    _self.onMessage = function(context, wsMessage) {\n        this._debug('Transport', this.getType(), 'received websocket message', wsMessage, context);\n\n        var close = false;\n        var messages = this.convertToMessages(wsMessage.data);\n        var messageIds = [];\n        for (var i = 0; i < messages.length; ++i) {\n            var message = messages[i];\n\n            // Detect if the message is a response to a request we made.\n            // If it's a meta message, for sure it's a response; otherwise it's\n            // a publish message and publish responses don't have the data field.\n            if (/^\\/meta\\//.test(message.channel) || message.data === undefined) {\n                if (message.id) {\n                    messageIds.push(message.id);\n\n                    var timeout = context.timeouts[message.id];\n                    if (timeout) {\n                        this.clearTimeout(timeout);\n                        delete context.timeouts[message.id];\n                        this._debug('Transport', this.getType(), 'removed timeout for message', message.id, ', timeouts', context.timeouts);\n                    }\n                }\n            }\n\n            if ('/meta/connect' === message.channel) {\n                _connected = false;\n            }\n            if ('/meta/disconnect' === message.channel && !_connected) {\n                close = true;\n            }\n        }\n\n        // Remove the envelope corresponding to the messages.\n        var removed = false;\n        var envelopes = context.envelopes;\n        for (var j = 0; j < messageIds.length; ++j) {\n            var id = messageIds[j];\n            for (var key in envelopes) {\n                if (envelopes.hasOwnProperty(key)) {\n                    var ids = key.split(',');\n                    var index = Utils.inArray(id, ids);\n                    if (index >= 0) {\n                        removed = true;\n                        ids.splice(index, 1);\n                        var envelope = envelopes[key][0];\n                        var metaConnect = envelopes[key][1];\n                        delete envelopes[key];\n                        if (ids.length > 0) {\n                            envelopes[ids.join(',')] = [envelope, metaConnect];\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        if (removed) {\n            this._debug('Transport', this.getType(), 'removed envelope, envelopes', envelopes);\n        }\n\n        this._notifySuccess(_successCallback, messages);\n\n        if (close) {\n            this.webSocketClose(context, 1000, 'Disconnect');\n        }\n    };\n\n    _self.onClose = function(context, event) {\n        this._debug('Transport', this.getType(), 'closed', context, event);\n\n        if (_sameContext(context)) {\n            // Remember if we were able to connect.\n            // This close event could be due to server shutdown,\n            // and if it restarts we want to try websocket again.\n            _webSocketSupported = _stickyReconnect && _webSocketConnected;\n            _connecting = null;\n            _context = null;\n        }\n\n        var timeouts = context.timeouts;\n        context.timeouts = {};\n        for (var id in timeouts) {\n            if (timeouts.hasOwnProperty(id)) {\n                this.clearTimeout(timeouts[id]);\n            }\n        }\n\n        var envelopes = context.envelopes;\n        context.envelopes = {};\n        for (var key in envelopes) {\n            if (envelopes.hasOwnProperty(key)) {\n                var envelope = envelopes[key][0];\n                var metaConnect = envelopes[key][1];\n                if (metaConnect) {\n                    _connected = false;\n                }\n                var failure = {\n                    websocketCode: event.code,\n                    reason: event.reason\n                };\n                if (event.exception) {\n                    failure.exception = event.exception;\n                }\n                this._notifyFailure(envelope.onFailure, context, envelope.messages, failure);\n            }\n        }\n    };\n\n    _self.registered = function(type, cometd) {\n        _super.registered(type, cometd);\n        _cometd = cometd;\n    };\n\n    _self.accept = function(version, crossDomain, url) {\n        this._debug('Transport', this.getType(), 'accept, supported:', _webSocketSupported);\n        // Using !! to return a boolean (and not the WebSocket object).\n        return _webSocketSupported && !('string' === typeof WebSocketTransport.WebSocket) && _cometd.websocketEnabled !== false;\n    };\n\n    _self.send = function(envelope, metaConnect) {\n        this._debug('Transport', this.getType(), 'sending', envelope, 'metaConnect =', metaConnect);\n        _send.call(this, _context, envelope, metaConnect);\n    };\n\n    _self.webSocketClose = function(context, code, reason) {\n        try {\n            if (context.webSocket) {\n                context.webSocket.close(code, reason);\n            }\n        } catch (x) {\n            this._debug(x);\n        }\n    };\n\n    _self.abort = function() {\n        _super.abort();\n        _forceClose.call(this, _context, {code: 1000, reason: 'Abort'});\n        this.reset(true);\n    };\n\n    return _self;\n};\n\n// Reference global WebSocket \nWebSocketTransport.WebSocket = 'Abstract';\n\n// Export WebSocketTransport\nmodule.exports = WebSocketTransport;\n","var TRANSPORT_TYPES = require('../TransportTypes');\n\nvar FetchLongPollingTransport = require('../FetchLongPollingTransport');\nvar WebSocketTransport = require('../WebSocketTransport');\n\n// Use node-fetch implementation\nmodule.exports.fetch = FetchLongPollingTransport.fetch = function() {\n  return fetch.apply(window, arguments);\n};\n\n// Use node-websocket implementation\nmodule.exports.WebSocket = WebSocketTransport.WebSocket = typeof WebSocket === 'undefined' ? null : WebSocket;\n\n/**\n * Long polling transport layer\n */\nvar WEBSOCKET_TRANSPORT = {\n  type: TRANSPORT_TYPES.WEBSOCKET,\n  Transport: WebSocketTransport\n};\nmodule.exports.WEBSOCKET_TRANSPORT = WEBSOCKET_TRANSPORT;\n\n/**\n * Long polling transport layer\n */\nvar LONG_POLLING_TRANSPORT = {\n  type: TRANSPORT_TYPES.LONG_POLLING,\n  Transport: FetchLongPollingTransport\n};\nmodule.exports.LONG_POLLING_TRANSPORT = LONG_POLLING_TRANSPORT;\n\n/**\n * CometD Transports Layers map\n */\nvar ALL = [\n  WEBSOCKET_TRANSPORT,\n  LONG_POLLING_TRANSPORT\n];\nmodule.exports.ALL = ALL;\n","module.exports.CometD = require('./lib/CometD')\nmodule.exports.Transports = require('./lib/browser/Transports')\n","import { Service } from './core';\n/**\n * Data aggregation\n *\n * Provides data aggregation over time and across different items\n *  User devices push items data on developer-defined categories\n *  This service automatically aggregates the data\n * Raw data is not available for reading, only the generated aggregation result\n *\n * */\n/**\n * User API for item aggregation\n *\n * Users can push data and be notified of aggregated data.\n * This service does not allow you to read the data. To achieve that kind of behavior, you could configure a callback to store the data.\n * @access public\n * */\nexport class Aggreg extends Service {\n  /**\n   * Get default deployment id associated to Aggreg service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'aggreg_0';\n  }\n  /**\n   * Pushes some data\n   *\n   * Pushes the given data.\n   * All the items are processed according to the defined rules.\n   * At least one push for a given item is needed during a time period to trigger processing and calling of the corresponding callback verb/macro.\n   * */\n  push({ items, owner }) {\n    return this.$publish('push', { items, owner });\n  }\n}\n/**\n * Data stacks\n *\n * Stacks are a per-user named persistent queue of data\n *  An administrator creates a stack service\n *  End-users can push data on an arbitrary number of their own arbitrary named stacks\n * */\n/**\n * Data stack user API\n *\n * Data is stored on a per user basis. However, notifications can be sent to a configurable set of listeners.\n * Stack names are arbitrary and do not need to be explicitly initialized.\n * @access public\n * */\nexport class Stack extends Service {\n  /**\n   * Get default deployment id associated to Stack service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'stack_0';\n  }\n  /**\n   * Lists the listeners\n   *\n   * Returns the whole list of listeners for the given stack.\n   * */\n  getListeners({ stack, owner }) {\n    return this.$publish('getListeners', { stack, owner });\n  }\n  /**\n   * Lists content\n   *\n   * Returns a paginated list of contents for the given stack.\n   * Content is sorted according to the statically configured order.\n   * */\n  list({ stack, owner, page }) {\n    return this.$publish('list', { stack, owner, page });\n  }\n  /**\n   * Empties a stack\n   *\n   * Removes all items from the given stack.\n   * */\n  purge({ stack, owner }) {\n    return this.$publish('purge', { stack, owner });\n  }\n  /**\n   * Pushes an item\n   *\n   * Pushes an item onto the given stack.\n   * The stack does not need to be created.\n   * */\n  push({ stack, data, owner }) {\n    return this.$publish('push', { stack, data, owner });\n  }\n  /**\n   * Removes items\n   *\n   * Removes the item with the given guid from the given stack.\n   * */\n  remove({ guids, stack, owner }) {\n    return this.$publish('remove', { guids, stack, owner });\n  }\n  /**\n   * Sets the listeners\n   *\n   * Sets the listeners for the given stack.\n   * */\n  setListeners({ listeners, stack, owner }) {\n    return this.$publish('setListeners', { listeners, stack, owner });\n  }\n  /**\n   * Updates an item\n   *\n   * Updates an existing item of the given stack.\n   * The item MUST exist prior to the call.\n   * */\n  update({ guid, stack, data, owner }) {\n    return this.$publish('update', { guid, stack, data, owner });\n  }\n}\n/**\n * Echo\n *\n * Echo\n * */\n/**\n * Echo service\n *\n * Simple echo service, for development purposes.\n * @access public\n * */\nexport class Echo extends Service {\n  /**\n   * Get default deployment id associated to Echo service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'echo_0';\n  }\n  /**\n   * Echoes an object\n   *\n   * Echoes an object: the server will echo that object on channel 'echo' for the current user.\n   * */\n  echo(parameter) {\n    return this.$publish('echo', parameter);\n  }\n}\n/**\n * Game engine\n *\n * Abstract Game Engine\n *  Concrete game engines are remote cometd clients or internal macros\n * */\n/**\n * User API for games\n *\n * Users can list, start, join games, and play.\n * @access public\n * */\nexport class Game extends Service {\n  /**\n   * Get default deployment id associated to Game service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'game_0';\n  }\n  /**\n   * Lists game types\n   *\n   * Returns the list of game types supported by the server and the currently registered game engines.\n   * */\n  available() {\n    return this.$publish('available', {});\n  }\n  /**A user joins a game*/\n  join({ role, gameId, userId, userName }) {\n    return this.$publish('join', { role, gameId, userId, userName });\n  }\n  /**Organizes a game*/\n  organize({ type, owner, options }) {\n    return this.$publish('organize', { type, owner, options });\n  }\n  /**Gives some command to the game engine*/\n  play({ gameId, userId, data }) {\n    return this.$publish('play', { gameId, userId, data });\n  }\n  /**Starts a game*/\n  start({ gameId }) {\n    return this.$publish('start', { gameId });\n  }\n  /**A user cancels joining a game*/\n  unjoin({ role, gameId, userId, userName }) {\n    return this.$publish('unjoin', { role, gameId, userId, userName });\n  }\n}\n/**\n * Game Engine API\n *\n * The Game Engine API is for game engine clients, not end-users.\n * @access public\n * */\nexport class GameEngine extends Service {\n  /**\n   * Get default deployment id associated to GameEngine service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'game_0';\n  }\n  /**\n   * Notify the result for a join request\n   *\n   * A Game Engine notifies the STR of the result of a join request that it received on join_callback\n   * */\n  join_result({ msgId, payload, error, callerId }) {\n    return this.$publish('join_result', { msgId, payload, error, callerId });\n  }\n  /**\n   * Notify the result for an organization request\n   *\n   * A Game Engine notifies the STR of the result of an organization request that it received on organize_callback\n   * */\n  organize_result({ msgId, payload, error, callerId }) {\n    return this.$publish('organize_result', {\n      msgId,\n      payload,\n      error,\n      callerId,\n    });\n  }\n  /**\n   * Registers a game engine\n   *\n   * A client registers itself to the STR as a Game Engine.\n   * The STR may, from now on, dispatch game of the given game type to said client.\n   * Unregistration is done automatically on logoff.\n   * */\n  register({ maxGames, gameInfo, location }) {\n    return this.$publish('register', { maxGames, gameInfo, location });\n  }\n  /**\n   * Notify the result for a start request\n   *\n   * A Game Engine notifies the STR of the result of a start request that it received on start_callback\n   * */\n  start_result({ gameId }) {\n    return this.$publish('start_result', { gameId });\n  }\n  /**\n   * Notify a game event\n   *\n   * A Game Engine notifies the STR of some arbitrary game event.\n   * */\n  state({ status, gameId, data }) {\n    return this.$publish('state', { status, gameId, data });\n  }\n  /**\n   * Notify the result for an unjoin request\n   *\n   * A Game Engine notifies the STR of the result of an unjoin request that it received on unjoin_callback\n   * */\n  unjoin_result({ msgId, payload, error, callerId }) {\n    return this.$publish('unjoin_result', { msgId, payload, error, callerId });\n  }\n}\n/**\n * Generic Data Access\n *\n * Generic Data Access Service : NoSQL storage\n * */\n/**\n * GDA User API\n *\n * User API for Generic Data Access.\n * The data are stored on a per-user basis.\n * Users can put, get, list their data.\n * @access public\n * */\nexport class Gda extends Service {\n  /**\n   * Get default deployment id associated to Gda service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'gda_0';\n  }\n  /**\n   * Asks for a data row\n   *\n   * Returns a full data row.\n   * */\n  get({ table, key, owner }) {\n    return this.$publish('get', { table, key, owner });\n  }\n  /**\n   * Asks for a data cell\n   *\n   * Returns a precise list of cells from a column in a data row.\n   * */\n  getCells({ table, key, key2, owner, column }) {\n    return this.$publish('getCells', { table, key, key2, owner, column });\n  }\n  /**\n   * Increments an integer value\n   *\n   * Increments a cell 64-bit signed integer value and returns the result in the data field.\n   * The increment is atomic : if you concurrently increment 10 times a value by 1, the final result will be the initial value plus 10. The actual individual resulting values seen by the 10 concurrent callers may vary discontinuously, with duplicates : at least one of them will see the final (+10) result.\n   * */\n  inc({ table, data, key, key2, owner, column }) {\n    return this.$publish('inc', { table, data, key, key2, owner, column });\n  }\n  /**\n   * Asks for a list of rows\n   *\n   * Returns a paginated list of rows from the given table.\n   * */\n  list({ columns, table, owner, page }) {\n    return this.$publish('list', { columns, table, owner, page });\n  }\n  /**\n   * Puts some data into a cell\n   *\n   * Creates or replaces the contents of a particular cell.\n   * */\n  put({ table, data, key, key2, owner, column }) {\n    return this.$publish('put', { table, data, key, key2, owner, column });\n  }\n  /**\n   * Puts several rows\n   *\n   * Creates or replaces the (maybe partial) contents of a collection of rows.\n   * This method only creates or replaces cells for non-null input values.\n   * */\n  puts({ rows, table, owner }) {\n    return this.$publish('puts', { rows, table, owner });\n  }\n  /**\n   * Asks for a range of rows\n   *\n   * Returns a paginated range of rows from the given table.\n   * A range consists of consecutive rows from the start key (inclusive) to the stop key (exclusive).\n   * You can specify partial keys for the start and stop fields.\n   * */\n  range({ columns, start, table, stop, owner, page }) {\n    return this.$publish('range', { columns, start, table, stop, owner, page });\n  }\n  /**\n   * Removes one cell inside a column of a row\n   *\n   * Removes only one cell of the given column of the given row from the given table.\n   * */\n  removeCell({ table, key, key2, owner, column }) {\n    return this.$publish('removeCell', { table, key, key2, owner, column });\n  }\n  /**\n   * Removes one full column of a row\n   *\n   * Removes all cells of the given column of the given row from the given table.\n   * */\n  removeColumn({ table, key, owner, column }) {\n    return this.$publish('removeColumn', { table, key, owner, column });\n  }\n  /**\n   * Removes a range of rows\n   *\n   * Removes the specified columns of the given range of rows from the given table.\n   * */\n  removeRange({ columns, start, table, stop, owner }) {\n    return this.$publish('removeRange', { columns, start, table, stop, owner });\n  }\n  /**\n   * Removes one full row\n   *\n   * Removes all columns of the given row from the given table.\n   * */\n  removeRow({ table, key, owner }) {\n    return this.$publish('removeRow', { table, key, owner });\n  }\n}\n/**\n * Groups Management\n *\n * Groups management for users, grants on resources, remote commands on devices\n *  This is where you can configure rights for any resource\n *\n * */\n/**\n * User API for remote control\n *\n * @access public\n * */\nexport class Remoting extends Service {\n  /**\n   * Get default deployment id associated to Remoting service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'groups_0';\n  }\n  /**\n   * Adds a listener\n   *\n   * A user requests notifications from a device owned by anyone who granted him the right authorizations.\n   * Whenever the device calls 'notify', notifications will be sent to the caller of this verb.\n   * */\n  addListener({ resource, fromResource, cmd, from, data, owner }) {\n    return this.$publish('addListener', {\n      resource,\n      fromResource,\n      cmd,\n      from,\n      data,\n      owner,\n    });\n  }\n  /**Response to 'getCapabilities'*/\n  capabilities({ askingResource, capabilities, answeringResource }) {\n    return this.$publish('capabilities', {\n      askingResource,\n      capabilities,\n      answeringResource,\n    });\n  }\n  /**\n   * Executes a command\n   *\n   * A user executes a command on a device owned by anyone who granted him the right authorizations.\n   * The command is issued on channel 'command'\n   * */\n  execute({ resource, cmd, data, owner }) {\n    return this.$publish('execute', { resource, cmd, data, owner });\n  }\n  /**\n   * Requests capabilities\n   *\n   * A user requests all his devices for the whole list of their capabilities.\n   * Devices are expected to answer on channel 'capabilities'\n   * */\n  getCapabilities() {\n    return this.$publish('getCapabilities', {});\n  }\n  /**\n   * Notifies of some event\n   *\n   * A device notifies the registered users/devices on this channel.\n   * The server forwards the notification to said users.\n   * */\n  notify({ resource, fromResource, cmd, from, data, owner }) {\n    return this.$publish('notify', {\n      resource,\n      fromResource,\n      cmd,\n      from,\n      data,\n      owner,\n    });\n  }\n  /**\n   * Pings devices\n   *\n   * A user requests all devices (of all owners) on which he has authorizations to respond on channel 'pong'\n   * */\n  ping({ action }) {\n    return this.$publish('ping', { action });\n  }\n  /**Response to ping*/\n  pong({ user, resource, available, uid, owner, action }) {\n    return this.$publish('pong', {\n      user,\n      resource,\n      available,\n      uid,\n      owner,\n      action,\n    });\n  }\n  /**\n   * Removes a listener\n   *\n   * A user stops requesting notifications from a device owned by anyone who granted him the right authorizations\n   * */\n  removeListener({ resource, fromResource, cmd, from, data, owner }) {\n    return this.$publish('removeListener', {\n      resource,\n      fromResource,\n      cmd,\n      from,\n      data,\n      owner,\n    });\n  }\n}\n/**\n * User API for groups and rights.\n *\n * Groups are stored per user.\n * This means that two users can own a group with the same identifier. A couple (owner, group) is needed to uniquely identify a group inside a group management service.\n * The triplet (deploymentId, owner, group) is actually needed to fully qualify a group outside of the scope of this service.\n * @access public\n * */\nexport class GroupManagement extends Service {\n  /**\n   * Get default deployment id associated to GroupManagement service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'groups_0';\n  }\n  /**\n   * Adds me to a group\n   *\n   * Adds me (the caller) to a group.\n   * This verb exists so that group owners may grant the right to join their groups without granting the right to add other users to those groups.\n   * The 'user' field is implicitly set to the current user's key.\n   * */\n  addMe({ group, owner }) {\n    return this.$publish('addMe', { group, owner });\n  }\n  /**\n   * Adds a user to a group\n   *\n   * Adds the given user to the given group.\n   * Addition may fail if the given group does not already exist.\n   * */\n  addUser({ user, group, owner }) {\n    return this.$publish('addUser', { user, group, owner });\n  }\n  /**Adds users to a group*/\n  addUsers({ users, group, owner }) {\n    return this.$publish('addUsers', { users, group, owner });\n  }\n  /**\n   * Lists my owned groups, with details\n   *\n   * Returns the whole list of groups owned by the current user, with their members\n   * */\n  allGroups({ owner }) {\n    return this.$publish('allGroups', { owner });\n  }\n  /**\n   * Creates a group\n   *\n   * Creates a group owned by the current user.\n   * Group creation may fail if the group already exists.\n   * */\n  createGroup({ group, groupName, owner }) {\n    return this.$publish('createGroup', { group, groupName, owner });\n  }\n  /**\n   * Removes a group\n   *\n   * Removes the given group owned by the current user or the given owner.\n   * Also removes all grants to that group.\n   * */\n  delGroup({ group, owner }) {\n    return this.$publish('delGroup', { group, owner });\n  }\n  /**Removes a user from a group*/\n  delUser({ user, group, owner }) {\n    return this.$publish('delUser', { user, group, owner });\n  }\n  /**Removes users from a group*/\n  delUsers({ users, group, groupName, owner }) {\n    return this.$publish('delUsers', { users, group, groupName, owner });\n  }\n  /**\n   * Tests for a group's existence\n   *\n   * Returns whether a group exists or not.\n   * */\n  exists({ group, owner }) {\n    return this.$publish('exists', { group, owner });\n  }\n  /**\n   * Grants a right to a group\n   *\n   * The granting API does not do any check when storing permissions.\n   * In particular when granting rights on a verb and resource of another API, the existence of said verb and resource is not checked.\n   * */\n  grant({ resource, group, owner, action }) {\n    return this.$publish('grant', { resource, group, owner, action });\n  }\n  /**\n   * Lists the group users\n   *\n   * Returns the whole list of users configured inside the given group.\n   * */\n  groupUsers({ group, owner }) {\n    return this.$publish('groupUsers', { group, owner });\n  }\n  /**\n   * Lists my owned groups\n   *\n   * Returns the whole list of groups owned by the current user\n   * */\n  groups({ owner }) {\n    return this.$publish('groups', { owner });\n  }\n  /**\n   * Lists rights for a group\n   *\n   * This API lists explicitly configured rights.\n   * Effective rights include configured rights, implicit rights and inherited rights.\n   * */\n  listGrants({ group, owner }) {\n    return this.$publish('listGrants', { group, owner });\n  }\n  /**\n   * Lists presences for a group\n   *\n   * Returns the list of members of the given groups, along with their actual and current presence on the zetapush server.\n   * The current implementation does not include information about the particular devices users are connected with.\n   * If a user is connected twice with two different devices, two identical entries will be returned.\n   * */\n  listPresences({ group, owner }) {\n    return this.$publish('listPresences', { group, owner });\n  }\n  /**\n   * Tests membership\n   *\n   * Tests whether I (the caller) am a member of the given group.\n   * This verb exists so that users can determine if they are part of a group without being granted particular rights.\n   * The 'user' field is implicitly set to the current user's key.\n   * */\n  memberOf({ hardFail, group, owner }) {\n    return this.$publish('memberOf', { hardFail, group, owner });\n  }\n  /**\n   * Grants rights to a group\n   *\n   * Grant several rights at once.\n   * */\n  mgrant({ resource, actions, group, owner }) {\n    return this.$publish('mgrant', { resource, actions, group, owner });\n  }\n  /**Revokes rights for a group*/\n  mrevoke({ resource, actions, group, owner }) {\n    return this.$publish('mrevoke', { resource, actions, group, owner });\n  }\n  /**\n   * Lists the groups I am part of\n   *\n   * Returns the whole list of groups the current user is part of.\n   * Groups may be owned by anyone, including the current user.\n   * */\n  myGroups({ owner }) {\n    return this.$publish('myGroups', { owner });\n  }\n  /**Revokes a right for a group*/\n  revoke({ resource, group, owner, action }) {\n    return this.$publish('revoke', { resource, group, owner, action });\n  }\n}\n/**\n * HTTP client\n *\n * Web-service client\n *  An admin records URL templates that can be called by users\n *  Calls are not configurable by end-users\n *  However an admin may leverage the macro service to achieve URL, headers and body configurability\n * */\n/**\n * User API for http requests\n *\n * @access public\n * */\nexport class Httpclient extends Service {\n  /**\n   * Get default deployment id associated to Httpclient service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'httpclient_0';\n  }\n  /**\n   * Makes a predefined request\n   *\n   * Lookups a predefined request by name, and executes it.\n   * */\n  call({ name, requestId }) {\n    return this.$publish('call', { name, requestId });\n  }\n}\n/**\n * Macros\n *\n * Macro-command service\n *  An admin defines macro-commands that can sequentially call any number of other api verbs, loop on collections of data, make decisions, etc\n *\n *\n *  End-users play them, with contextual parameters\n * */\n/**\n * User API for macro debugging\n *\n * Debugger API for macro.\n * These API verbs are not intended for use by most developers.\n * @access public\n * */\nexport class MacroDebug extends Service {\n  /**\n   * Get default deployment id associated to MacroDebug service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'macro_0';\n  }\n  /**Enables or disables a breakpoint*/\n  breakpoint({ breakpoint, token, enabled }) {\n    return this.$publish('breakpoint', { breakpoint, token, enabled });\n  }\n  /**Requests some information*/\n  info({ token, path, exp, requestId, frame }) {\n    return this.$publish('info', { token, path, exp, requestId, frame });\n  }\n  /**\n   * Debugs a previously recorded macro\n   *\n   * The given breakpoints will be honored, causing a suspension of the execution, resumable via 'resume'.\n   * Only one debug session can be active at any given time.\n   * */\n  livedebug({\n    parameters,\n    token,\n    breakpoints,\n    hardFail,\n    name,\n    requestId,\n    debug,\n  }) {\n    return this.$publish('livedebug', {\n      parameters,\n      token,\n      breakpoints,\n      hardFail,\n      name,\n      requestId,\n      debug,\n    });\n  }\n  /**Resumes a paused macro*/\n  resume({ token, type }) {\n    return this.$publish('resume', { token, type });\n  }\n  /**Sets a variable value*/\n  variable({ token, name, frame, data }) {\n    return this.$publish('variable', { token, name, frame, data });\n  }\n}\n/**\n * User API for macro execution\n *\n * Simple errors are reported as usual.\n * However, the macro execution verbs treat most errors in a particular way : instead of reporting errors on the usual 'error' channel, errors are put in the returned 'MacroCompletion' result.\n * This behavior can be tuned on a per-call basis with the hardFail parameter.\n * Note that some particular errors will always behave as if hardFail were true, because they are related to programming errors, or prevent processing from ending gracefully : STACK_OVERFLOW, NO_SUCH_FUNCTION, RAM_EXCEEDED, CYCLES_EXCEEDED, TIME_EXCEEDED, QUOTA_EXCEEDED, RATE_EXCEEDED, BAD_COMPARATOR_VALUE\n * @access public\n * */\nexport class Macro extends Service {\n  /**\n   * Get default deployment id associated to Macro service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'macro_0';\n  }\n  /**\n   * Plays a previously recorded macro\n   *\n   * DO NOT use this verb from inside an enclosing macro when you need the result in order to proceed with the enclosing macro.\n   * You can override the default notification channel when defining the macro.\n   * */\n  call({ parameters, hardFail, name, requestId, debug }) {\n    return this.$publish('call', {\n      parameters,\n      hardFail,\n      name,\n      requestId,\n      debug,\n    });\n  }\n}\n/**\n * Mail sender\n *\n * Sends email through SMTP\n * */\n/**\n * Mail service user API\n *\n * This service is statically configured with an outgoing SMTP server.\n * Users call the API here to actually send emails.\n * @access public\n * */\nexport class Sendmail extends Service {\n  /**\n   * Get default deployment id associated to Sendmail service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'sendmail_0';\n  }\n}\n/**\n * Messaging service\n *\n * Messaging service\n * */\n/**\n * Messaging service\n *\n * Simple and flexible user-to-user or user-to-group messaging service.\n * @access public\n * */\nexport class Messaging extends Service {\n  /**\n   * Get default deployment id associated to Messaging service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'messaging_0';\n  }\n  /**\n   * Sends a message to a target\n   *\n   * Sends the given message to the specified target on the given (optional) channel.\n   * The administratively given default channel name is used when none is provided in the message itself.\n   * */\n  send({ target, channel, data }) {\n    return this.$publish('send', { target, channel, data });\n  }\n}\n/**\n * Producer consumer\n *\n * Producer consumer service\n *  Users can submit tasks and other users consume them\n * */\n/**\n * Producer / consumer real-time API\n *\n * Task producers submits their tasks.\n * The server dispatches the tasks.\n * Consumers process them and report completion back to the server.\n * Tasks are global to the service (i.e. NOT per user).\n * @access public\n * */\nexport class Queue extends Service {\n  /**\n   * Get default deployment id associated to Queue service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'queue_0';\n  }\n  /**\n   * Submits a task\n   *\n   * Producer API.\n   * A task producer submits the given task to the server.\n   * The server will find a tasker with processing capacity and dispatch the task.\n   * The task result will be returned to the caller.\n   * When called from inside a macro, the comsumer generated result is available for further use.\n   * */\n  call({ description, originBusinessId, originDeploymentId, data, owner }) {\n    return this.$publish('call', {\n      description,\n      originBusinessId,\n      originDeploymentId,\n      data,\n      owner,\n    });\n  }\n  /**\n   * Notifies completion of a task\n   *\n   * Consumer API.\n   * The tasker notifies completion of the given task to the server.\n   * The tasker can optionally include a result or an error code.\n   * */\n  done({ target, result, taskId, requestId, success }) {\n    return this.$publish('done', {\n      target,\n      result,\n      taskId,\n      requestId,\n      success,\n    });\n  }\n  /**\n   * Registers a consumer\n   *\n   * Consumer API.\n   * Registers the current user resource as an available task consumer.\n   * Tasks will be then dispatched to that consumer.\n   * */\n  register({ capacity }) {\n    return this.$publish('register', { capacity });\n  }\n  /**\n   * Submits a task\n   *\n   * Producer API.\n   * A task producer submits the given task to the server.\n   * The server will find a tasker with processing capacity and dispatch the task.\n   * The task result will be ignored : the producer will not receive any notification of any kind, even in case of errors (including capacity exceeded errors).\n   * This verb will return immediately : you can use this API to asynchronously submit a task.\n   * */\n  submit({ description, originBusinessId, originDeploymentId, data, owner }) {\n    return this.$publish('submit', {\n      description,\n      originBusinessId,\n      originDeploymentId,\n      data,\n      owner,\n    });\n  }\n  /**\n   * Unregisters a consumer\n   *\n   * Consumer API.\n   * Unregisters the current user resource as an available task consumer.\n   * All non finished tasks are returned to the server.\n   * */\n  unregister() {\n    return this.$publish('unregister', {});\n  }\n}\n/**\n * Push Notifications\n *\n * Native Push Notifications for Android, iOS\n *\n *\n *\n * */\n/**\n * Notification User API\n *\n * User API for notifications.\n * For notifications to work properly, it is imperative that the resource name of a device remain constant over time.\n * @access public\n * */\nexport class Notif extends Service {\n  /**\n   * Get default deployment id associated to Notif service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'notif_0';\n  }\n}\n/**\n * RDBMS\n *\n * Relational Database : SQL storage\n * */\n/**\n * RDBMS User API\n *\n * User API for SQL queries.\n * Contrary to GDA or Stacks, the data are not stored on a per-user basis.\n * Users can store, get, list their data.\n * @access public\n * */\nexport class Rdbms extends Service {\n  /**\n   * Get default deployment id associated to Rdbms service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'rdbms_0';\n  }\n}\n/**\n * SMS via OVH\n *\n * SMS sender, to send text messages to mobile phones\n * This SMS sending service uses the OVH API\n *\n * */\n/**\n * SMS service\n *\n * User API for SMS.\n * @access public\n * */\nexport class Sms_ovh extends Service {\n  /**\n   * Get default deployment id associated to Sms_ovh service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'sms_ovh_0';\n  }\n}\n/**\n * Scheduler\n *\n * Scheduler service\n *  End-users can schedule one-time or repetitive tasks using a classical cron syntax (with the year field) or a timestamp (milliseconds from the epoch)\n * */\n/**\n * User API for the Scheduler\n *\n * User endpoints for scheduling : users can schedule, list and delete tasks.\n * Tasks are stored on a per-user basis: a task will run with the priviledges of the user who stored it.\n * Tasks are run on the server and thus can call api verbs marked as server-only.\n * @access public\n * */\nexport class Cron extends Service {\n  /**\n   * Get default deployment id associated to Cron service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'cron_0';\n  }\n  /**\n   * List the configured tasks\n   *\n   * Returns a paginated list of the asking user's tasks.\n   * */\n  list({ start, stop, owner, page }) {\n    return this.$publish('list', { start, stop, owner, page });\n  }\n}\n/**\n * Search engine\n *\n * ElasticSearch engine, to index and search data\n *  An admin creates indices\n *  Users index and search documents\n *\n * */\n/**\n * ElasticSearch Service\n *\n * This API is a very thin wrapper around ElasticSearch's API.\n * @access public\n * */\nexport class Search extends Service {\n  /**\n   * Get default deployment id associated to Search service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'search_0';\n  }\n  /**\n   * Deletes data\n   *\n   * Deletes a document from the elasticsearch engine by id.\n   * */\n  delete({ type, id, index }) {\n    return this.$publish('delete', { type, id, index });\n  }\n  /**\n   * Gets data\n   *\n   * Retrieves a document from the elasticsearch engine by id.\n   * */\n  get({ type, id, index }) {\n    return this.$publish('get', { type, id, index });\n  }\n  /**\n   * Indexes data\n   *\n   * Inserts or updates a document into the elasticsearch engine.\n   * */\n  index({ type, id, index, data }) {\n    return this.$publish('index', { type, id, index, data });\n  }\n  /**Searches for data*/\n  search({ indices, query, sort, page, types }) {\n    return this.$publish('search', { indices, query, sort, page, types });\n  }\n}\n/**\n * Template engine\n *\n * Template engine to produce documents from parameterized templates\n * <br>An admin creates templates\n * <br> Users produce documents\n * <br>The implementation uses the <a href='http://freemarker\n * org/'>freemarker</a> engine\n *\n * */\n/**\n * User API for templates\n *\n * Users use this API to evaluate pre-configured templates.\n * @access public\n * */\nexport class Template extends Service {\n  /**\n   * Get default deployment id associated to Template service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'template_0';\n  }\n  /**\n   * Evaluates a template\n   *\n   * Evaluates the given template and returns the result as a string.\n   * Templates are parsed the first time they are evaluated. Evaluation may fail early due to a parsing error.\n   * */\n  evaluate({ languageTag, name, requestId, data }) {\n    return this.$publish('evaluate', { languageTag, name, requestId, data });\n  }\n}\n/**\n * Triggers\n *\n * Register callbacks for events and trigger them when needed\n *\n * */\n/**\n * Trigger service\n *\n * Register listeners and trigger events.\n * @access public\n * */\nexport class Trigger extends Service {\n  /**\n   * Get default deployment id associated to Trigger service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'trigger_0';\n  }\n}\n/**\n * Upload: S3\n *\n * Upload service with S3 storage\n * */\n/**\n * User API for file management\n *\n * User API for virtual file management and http file upload\n * This API contains all the verbs needed to browse, upload and remove files.\n * Files are stored on a per-user basis: each user has his or her own whole virtual filesystem.\n * Uploading a file is a 3-step process : request an upload URL, upload via HTTP, notify this service of completion.\n * @access public\n * */\nexport class Zpfs_s3 extends Service {\n  /**\n   * Get default deployment id associated to Zpfs_s3 service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'zpfs_s3_0';\n  }\n  /**\n   * Copies a file\n   *\n   * Copies a file or folder (recursively) to a new location.\n   * May fail if the target location is not empty.\n   * */\n  cp({ oldPath, path, owner }) {\n    return this.$publish('cp', { oldPath, path, owner });\n  }\n  /**\n   * Returns disk usage\n   *\n   * Returns an recursively aggregated number of used bytes, starting at the given path.\n   * */\n  du({ path, owner }) {\n    return this.$publish('du', { path, owner });\n  }\n  /**\n   * Links a file\n   *\n   * Links a file or folder to another location.\n   * May fail if the target location is not empty.\n   * */\n  link({ oldPath, path, owner }) {\n    return this.$publish('link', { oldPath, path, owner });\n  }\n  /**\n   * Lists a folder content\n   *\n   * Returns a paginated list of the folder's content.\n   * */\n  ls({ folder, owner, page }) {\n    return this.$publish('ls', { folder, owner, page });\n  }\n  /**\n   * Creates a folder\n   *\n   * Creates a new folder.\n   * May fail if the target location is not empty.\n   * */\n  mkdir({ parents, folder, owner }) {\n    return this.$publish('mkdir', { parents, folder, owner });\n  }\n  /**\n   * Moves a file\n   *\n   * Moves a file or folder (recursively) to a new location.\n   * May fail if the target location is not empty.\n   * */\n  mv({ oldPath, path, owner }) {\n    return this.$publish('mv', { oldPath, path, owner });\n  }\n  /**\n   * Notifies of upload completion\n   *\n   * The client application calls this verb to notify that it's done uploading to the cloud.\n   * Calling that verb MAY trigger additional events such as thumbnail/metadata creation.\n   * */\n  newFile({ tags, guid, metadata, owner }) {\n    return this.$publish('newFile', { tags, guid, metadata, owner });\n  }\n  /**\n   * Requests an upload URL\n   *\n   * Requests an HTTP upload URL.\n   * The URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.\n   * */\n  newUploadUrl({ contentType, path, owner }) {\n    return this.$publish('newUploadUrl', { contentType, path, owner });\n  }\n  /**\n   * Removes a file\n   *\n   * Removes a file or folder (recursively).\n   * */\n  rm({ path, owner }) {\n    return this.$publish('rm', { path, owner });\n  }\n  /**\n   * Creates a snapshot in a new folder\n   *\n   * Creates a new folder and then copies the given files inside\n   * */\n  snapshot({ parents, folder, items, flatten, owner }) {\n    return this.$publish('snapshot', {\n      parents,\n      folder,\n      items,\n      flatten,\n      owner,\n    });\n  }\n  /**\n   * Returns information about a file\n   *\n   * Returns information about a single file.\n   * The entry field will be null if the path does not exist\n   * */\n  stat({ path, owner }) {\n    return this.$publish('stat', { path, owner });\n  }\n  /**Updates a file's metadata*/\n  updateMeta({ path, metadataFiles, metadata, owner }) {\n    return this.$publish('updateMeta', {\n      path,\n      metadataFiles,\n      metadata,\n      owner,\n    });\n  }\n}\n/**\n * Upload: local\n *\n * Upload service with local HDFS storage\n * */\n/**\n * User API for local file management\n *\n * User API for file content manipulation\n * @access public\n * */\nexport class Zpfs_hdfs extends Service {\n  /**\n   * Get default deployment id associated to Zpfs_hdfs service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'zpfs_hdfs_0';\n  }\n  /**\n   * Copies a file\n   *\n   * Copies a file or folder (recursively) to a new location.\n   * May fail if the target location is not empty.\n   * */\n  cp({ oldPath, path, owner }) {\n    return this.$publish('cp', { oldPath, path, owner });\n  }\n  /**\n   * Returns disk usage\n   *\n   * Returns an recursively aggregated number of used bytes, starting at the given path.\n   * */\n  du({ path, owner }) {\n    return this.$publish('du', { path, owner });\n  }\n  /**\n   * Links a file\n   *\n   * Links a file or folder to another location.\n   * May fail if the target location is not empty.\n   * */\n  link({ oldPath, path, owner }) {\n    return this.$publish('link', { oldPath, path, owner });\n  }\n  /**\n   * Lists a folder content\n   *\n   * Returns a paginated list of the folder's content.\n   * */\n  ls({ folder, owner, page }) {\n    return this.$publish('ls', { folder, owner, page });\n  }\n  /**\n   * Creates a folder\n   *\n   * Creates a new folder.\n   * May fail if the target location is not empty.\n   * */\n  mkdir({ parents, folder, owner }) {\n    return this.$publish('mkdir', { parents, folder, owner });\n  }\n  /**\n   * Moves a file\n   *\n   * Moves a file or folder (recursively) to a new location.\n   * May fail if the target location is not empty.\n   * */\n  mv({ oldPath, path, owner }) {\n    return this.$publish('mv', { oldPath, path, owner });\n  }\n  /**\n   * Notifies of upload completion\n   *\n   * The client application calls this verb to notify that it's done uploading to the cloud.\n   * Calling that verb MAY trigger additional events such as thumbnail/metadata creation.\n   * */\n  newFile({ tags, guid, metadata, owner }) {\n    return this.$publish('newFile', { tags, guid, metadata, owner });\n  }\n  /**\n   * Requests an upload URL\n   *\n   * Requests an HTTP upload URL.\n   * The URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.\n   * */\n  newUploadUrl({ contentType, path, owner }) {\n    return this.$publish('newUploadUrl', { contentType, path, owner });\n  }\n  /**\n   * Removes a file\n   *\n   * Removes a file or folder (recursively).\n   * */\n  rm({ path, owner }) {\n    return this.$publish('rm', { path, owner });\n  }\n  /**\n   * Creates a snapshot in a new folder\n   *\n   * Creates a new folder and then copies the given files inside\n   * */\n  snapshot({ parents, folder, items, flatten, owner }) {\n    return this.$publish('snapshot', {\n      parents,\n      folder,\n      items,\n      flatten,\n      owner,\n    });\n  }\n  /**\n   * Returns information about a file\n   *\n   * Returns information about a single file.\n   * The entry field will be null if the path does not exist\n   * */\n  stat({ path, owner }) {\n    return this.$publish('stat', { path, owner });\n  }\n  /**Updates a file's metadata*/\n  updateMeta({ path, metadataFiles, metadata, owner }) {\n    return this.$publish('updateMeta', {\n      path,\n      metadataFiles,\n      metadata,\n      owner,\n    });\n  }\n}\n/**\n * Upload: pseudo-S3\n *\n * Upload service with pseudo-S3compatible storage\n * */\n/**\n * User API for file management\n *\n * User API for virtual file management and http file upload\n * This API contains all the verbs needed to browse, upload and remove files.\n * Files are stored on a per-user basis: each user has his or her own whole virtual filesystem.\n * Uploading a file is a 3-step process : request an upload URL, upload via HTTP, notify this service of completion.\n * @access public\n * */\nexport class Zpfs_s3compat extends Service {\n  /**\n   * Get default deployment id associated to Zpfs_s3compat service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'zpfs_s3compat_0';\n  }\n  /**\n   * Copies a file\n   *\n   * Copies a file or folder (recursively) to a new location.\n   * May fail if the target location is not empty.\n   * */\n  cp({ oldPath, path, owner }) {\n    return this.$publish('cp', { oldPath, path, owner });\n  }\n  /**\n   * Returns disk usage\n   *\n   * Returns an recursively aggregated number of used bytes, starting at the given path.\n   * */\n  du({ path, owner }) {\n    return this.$publish('du', { path, owner });\n  }\n  /**\n   * Links a file\n   *\n   * Links a file or folder to another location.\n   * May fail if the target location is not empty.\n   * */\n  link({ oldPath, path, owner }) {\n    return this.$publish('link', { oldPath, path, owner });\n  }\n  /**\n   * Lists a folder content\n   *\n   * Returns a paginated list of the folder's content.\n   * */\n  ls({ folder, owner, page }) {\n    return this.$publish('ls', { folder, owner, page });\n  }\n  /**\n   * Creates a folder\n   *\n   * Creates a new folder.\n   * May fail if the target location is not empty.\n   * */\n  mkdir({ parents, folder, owner }) {\n    return this.$publish('mkdir', { parents, folder, owner });\n  }\n  /**\n   * Moves a file\n   *\n   * Moves a file or folder (recursively) to a new location.\n   * May fail if the target location is not empty.\n   * */\n  mv({ oldPath, path, owner }) {\n    return this.$publish('mv', { oldPath, path, owner });\n  }\n  /**\n   * Notifies of upload completion\n   *\n   * The client application calls this verb to notify that it's done uploading to the cloud.\n   * Calling that verb MAY trigger additional events such as thumbnail/metadata creation.\n   * */\n  newFile({ tags, guid, metadata, owner }) {\n    return this.$publish('newFile', { tags, guid, metadata, owner });\n  }\n  /**\n   * Requests an upload URL\n   *\n   * Requests an HTTP upload URL.\n   * The URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.\n   * */\n  newUploadUrl({ contentType, path, owner }) {\n    return this.$publish('newUploadUrl', { contentType, path, owner });\n  }\n  /**\n   * Removes a file\n   *\n   * Removes a file or folder (recursively).\n   * */\n  rm({ path, owner }) {\n    return this.$publish('rm', { path, owner });\n  }\n  /**\n   * Creates a snapshot in a new folder\n   *\n   * Creates a new folder and then copies the given files inside\n   * */\n  snapshot({ parents, folder, items, flatten, owner }) {\n    return this.$publish('snapshot', {\n      parents,\n      folder,\n      items,\n      flatten,\n      owner,\n    });\n  }\n  /**\n   * Returns information about a file\n   *\n   * Returns information about a single file.\n   * The entry field will be null if the path does not exist\n   * */\n  stat({ path, owner }) {\n    return this.$publish('stat', { path, owner });\n  }\n  /**Updates a file's metadata*/\n  updateMeta({ path, metadataFiles, metadata, owner }) {\n    return this.$publish('updateMeta', {\n      path,\n      metadataFiles,\n      metadata,\n      owner,\n    });\n  }\n}\n/**\n * User directory service\n *\n * User directory service\n * */\n/**\n * User API for user information\n *\n * @access public\n * */\nexport class Userdir extends Service {\n  /**\n   * Get default deployment id associated to Userdir service\n   * @return {string}\n   */\n  static get DEFAULT_DEPLOYMENT_ID() {\n    return 'userdir_0';\n  }\n  /**Searches for users matching the request*/\n  search({ requestId, query, page }) {\n    return this.$publish('search', { requestId, query, page });\n  }\n  /**Requests public data for the specified users*/\n  userInfo({ userKeys }) {\n    return this.$publish('userInfo', { userKeys });\n  }\n}\n","/**\n * Match unsecure pattern web\n * @type {RegExp}\n */\nconst HTTP_PATTERN = /^http:\\/\\/|^\\/\\//;\n\n/**\n * Http protocol\n * @type {string}\n */\nconst HTTP_PROTOCOL = 'http:';\n\n/**\n * Https protocol\n * @type {string}\n */\nconst HTTPS_PROTOCOL = 'https:';\n\n/**\n * Alpha numeric dictionary\n */\nconst DICTIONARY = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\n/**\n * Default ZetaPush API URL\n * @access private\n */\nexport const API_URL = 'https://api.zpush.io/';\n\n/**\n * Force ssl based protocol for network echange\n * Cross Env (Browser/Node) test\n * @access private\n * @type boolean\n */\nexport const FORCE_HTTPS =\n  typeof location === 'undefined'\n    ? false\n    : location.protocol === HTTPS_PROTOCOL;\n\n/**\n * @access private\n * @param {string} apiUrl\n * @return {string}\n */\nconst normalizeApiUrl = (apiUrl) => {\n  const last = apiUrl.charAt(apiUrl.length - 1);\n  const SLASH = '/';\n  return last === SLASH ? apiUrl : apiUrl + SLASH;\n};\n\n/**\n * @access private\n * @param {Array<Object>} list\n * @return {Object}\n */\nexport const shuffle = (list) => {\n  const index = Math.floor(Math.random() * list.length);\n  return list[index];\n};\n\n/**\n * @access private\n * @param {string} url\n * @param {boolean} forceHttps\n * @return {string}\n */\nexport const getSecureUrl = (url, forceHttps) => {\n  return forceHttps ? url.replace(HTTP_PATTERN, `${HTTPS_PROTOCOL}//`) : url;\n};\n\n/**\n * @access private\n * @param {{apiUrl: string, sandboxId: string, forceHttps: boolean, transports: Transports}} parameters\n * @return {Promise}\n */\nexport const getServers = ({ apiUrl, sandboxId, forceHttps, transports }) => {\n  const normalizedSecuresApiUrl = normalizeApiUrl(\n    getSecureUrl(apiUrl, forceHttps),\n  );\n  const url = `${normalizedSecuresApiUrl}${sandboxId}`;\n  const options = { protocol: forceHttps ? HTTPS_PROTOCOL : HTTP_PROTOCOL };\n  return (\n    transports\n      .fetch(url, options)\n      .then((response) => response.json())\n      // TODO: Replace by a server side implementation when available\n      .then(({ servers }) =>\n        servers.map((server) => getSecureUrl(server, forceHttps)),\n      )\n  );\n};\n\n/**\n * @access private\n * @param Class Derived\n * @param Class Parent\n * @return {boolean}\n */\nexport const isDerivedOf = (Derived, Parent) => {\n  let prototype = Object.getPrototypeOf(Derived);\n  let is = false;\n  while (!(is || prototype === null)) {\n    is = prototype === Parent;\n    prototype = Object.getPrototypeOf(prototype);\n  }\n  return is;\n};\n\n/**\n * Get random id\n * @return {string}\n */\nexport const uuid = (entropy = 7, dictionary = DICTIONARY) =>\n  Array.from(Array(entropy)).reduce((previous) => {\n    const next = dictionary.charAt(\n      Math.floor(Math.random() * dictionary.length),\n    );\n    return `${previous}${next}`;\n  }, '');\n","import { CometD, Transports } from 'zetapush-cometd';\nimport { ConnectionStatusListener } from '../connection/connection-status';\nimport { Macro } from '../mapping/services';\nimport { getServers, isDerivedOf, shuffle, uuid } from '../utils/index';\n\n/**\n * CometD Messages enumeration\n * @type {Object}\n */\nconst Message = {\n  RECONNECT_HANDSHAKE_VALUE: 'handshake',\n  RECONNECT_NONE_VALUE: 'none',\n  RECONNECT_RETRY_VALUE: 'retry',\n};\n\n/**\n * Delay to update server url\n * @type {integer}\n */\nconst UPDATE_SERVER_URL_DELAY = 250;\n\n/**\n * Default macro channel\n * @type {string}\n */\nconst DEFAULT_MACRO_CHANNEL = 'completed';\n\n/**\n * Provide utilities and abstraction on CometD Transport layer\n * @access private\n */\nexport class ClientHelper {\n  /**\n   * Create a new ZetaPush client helper\n   */\n  constructor({\n    apiUrl,\n    sandboxId,\n    forceHttps = false,\n    authentication,\n    resource = null,\n    transports = Transports,\n  }) {\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.sandboxId = sandboxId;\n    /**\n     * @access private\n     * @type {function():AbstractHandshake}\n     */\n    this.authentication = authentication;\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.resource = resource;\n    /**\n     * @access private\n     * @type {number}\n     */\n    this.requestId = 0;\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.userId = null;\n    /**\n     * @access private\n     * @type {Object}\n     */\n    this.userInfo = null;\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.uniqId = uuid();\n    /**\n     * @access private\n     * @type {Promise}\n     */\n    this.servers = getServers({\n      apiUrl,\n      sandboxId,\n      forceHttps,\n      transports,\n    }).catch((error) => {\n      // Notify error in connection to server step\n      this.connectionToServerFail(error);\n      // Return empty list\n      return [];\n    });\n    /**\n     * @access private\n     * @type {Array<Object>}\n     */\n    this.connectionListeners = [];\n    /**\n     * @access private\n     * @type {boolean}\n     */\n    this.connected = false;\n    /**\n     * @access private\n     * @type {boolean}\n     */\n    this.wasConnected = false;\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.serverUrl = null;\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.sessionId = null;\n    /**\n     * @access private\n     * @type {Array<Object>}\n     */\n    this.subscribeQueue = [];\n    /**\n     * @access private\n     * @type {CometD}\n     */\n    this.cometd = new CometD();\n\n    // Register transports layers\n    transports.ALL.forEach(({ type, Transport }) => {\n      this.cometd.registerTransport(type, new Transport());\n    });\n\n    // Handle transport exception\n    this.cometd.onTransportException = (cometd, transport) => {\n      // Try to find an other available server\n      // Remove the current one from the _serverList array\n      this.updateServerUrl();\n    };\n\n    this.cometd.addListener(\n      '/meta/handshake',\n      ({ ext, successful, advice, error }) => {\n        this.cometd._debug('ClientHelper::/meta/handshake', {\n          ext,\n          successful,\n          advice,\n          error,\n        });\n        if (successful) {\n          const { authentication = null } = ext;\n          this.initialized(authentication);\n        } else {\n          this.handshakeFailure(error);\n        }\n      },\n    );\n\n    this.cometd.addListener(\n      '/meta/handshake',\n      ({ advice, error, ext, successful }) => {\n        this.cometd._debug('ClientHelper::/meta/handshake', {\n          ext,\n          successful,\n          advice,\n          error,\n        });\n        // AuthNegotiation\n        if (!successful) {\n          if (typeof advice === 'undefined') {\n            return;\n          }\n          if (Message.RECONNECT_NONE_VALUE === advice.reconnect) {\n            this.authenticationFailed(error);\n          } else if (Message.RECONNECT_HANDSHAKE_VALUE === advice.reconnect) {\n            this.negotiationFailed(error);\n          }\n        }\n      },\n    );\n\n    this.cometd.addListener(\n      '/meta/connect',\n      ({ advice, channel, successful }) => {\n        this.cometd._debug('ClientHelper::/meta/connect', {\n          advice,\n          channel,\n          successful,\n        });\n        // ConnectionListener\n        if (this.cometd.isDisconnected()) {\n          this.connected = false;\n          // Notify connection will close\n          this.connectionWillClose();\n        } else {\n          this.wasConnected = this.connected;\n          this.connected = successful;\n          if (!this.wasConnected && this.connected) {\n            this.cometd.batch(this, () => {\n              // Unqueue subscriptions\n              this.subscribeQueue.forEach(\n                ({ prefix, listener, subscriptions }) => {\n                  this.subscribe(prefix, listener, subscriptions);\n                },\n              );\n            });\n            // Notify connection is established\n            this.connectionEstablished();\n          } else if (this.wasConnected && !this.connected) {\n            // Notify connection is broken\n            this.connectionBroken();\n          }\n        }\n      },\n    );\n\n    this.cometd.addListener('/meta/disconnect', ({ channel, successful }) => {\n      this.cometd._debug('ClientHelper::/meta/disconnect', {\n        channel,\n        successful,\n      });\n      if (this.cometd.isDisconnected()) {\n        this.connected = false;\n        // Notify connection is closed\n        this.connectionClosed();\n      }\n    });\n  }\n  /**\n   * Add a connection listener to handle life cycle connection events\n   * @param {ConnectionStatusListener} listener\n   * @return {number} handler\n   */\n  addConnectionStatusListener(listener) {\n    this.connectionListeners.push({\n      enabled: true,\n      listener: Object.assign(new ConnectionStatusListener(), listener),\n    });\n    return this.connectionListeners.length - 1;\n  }\n  /**\n   * Notify listeners when handshake step succeed\n   */\n  authenticationFailed(error) {\n    this.userId = null;\n    this.userInfo = null;\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onFailedHandshake(error);\n      });\n  }\n  /**\n   * Connect client using CometD Transport\n   */\n  connect() {\n    this.servers.then((servers) => {\n      if (servers.length > 0) {\n        // Get a random server url\n        this.serverUrl = shuffle(servers);\n        // Configure CometD\n        this.cometd.configure({\n          url: `${this.serverUrl}/strd`,\n          backoffIncrement: 1000,\n          maxBackoff: 60000,\n          appendMessageTypeToURL: false,\n        });\n        // Send handshake fields\n        this.cometd.handshake(this.getHandshakeFields());\n      } else {\n        // No servers available\n        this.noServerUrlAvailable();\n      }\n    });\n  }\n  /**\n   * Notify listeners when connection is broken\n   */\n  connectionBroken() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionBroken();\n      });\n  }\n  /**\n   * Notify listeners when connection is closed\n   */\n  connectionClosed() {\n    this.userId = null;\n    this.userInfo = null;\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionClosed();\n      });\n  }\n  /**\n   * Notify listeners when connection is established\n   */\n  connectionEstablished() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionEstablished();\n      });\n  }\n  /**\n   * Notify listeners when connection to server fail\n   */\n  connectionToServerFail(failure) {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionToServerFail(failure);\n      });\n  }\n  /**\n   * Notify listeners when connection will close\n   */\n  connectionWillClose() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionWillClose();\n      });\n  }\n  /**\n   * Create a promise based macro service\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   */\n  createAsyncMacroService({\n    listener,\n    Type,\n    deploymentId = Type.DEFAULT_DEPLOYMENT_ID,\n  }) {\n    const prefix = `/service/${this.getSandboxId()}/${deploymentId}`;\n    const $publish = this.getAsyncMacroPublisher(prefix);\n    // Create service by publisher\n    return this.createServiceByPublisher({\n      listener,\n      prefix,\n      Type,\n      $publish,\n    });\n  }\n\n  /**\n   * Create a promise based task service\n   * @experimental\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   */\n  createAsyncTaskService({ Type, deploymentId = Type.DEFAULT_DEPLOYMENT_ID }) {\n    const prefix = `/service/${this.getSandboxId()}/${deploymentId}`;\n    const $publish = this.getAsyncTaskPublisher(prefix);\n    // Create service by publisher\n    return this.createServiceByPublisher({\n      listener: {},\n      prefix,\n      Type,\n      $publish,\n    });\n  }\n  /**\n   * Create a publish/subscribe service\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   */\n  createService({ listener, Type, deploymentId = Type.DEFAULT_DEPLOYMENT_ID }) {\n    const isMacroType = isDerivedOf(Type, Macro);\n    const prefix = `/service/${this.getSandboxId()}/${deploymentId}`;\n    const $publish = isMacroType\n      ? this.getMacroPublisher(prefix)\n      : this.getServicePublisher(prefix);\n    // Create service by publisher\n    return this.createServiceByPublisher({\n      listener,\n      prefix,\n      Type,\n      $publish,\n    });\n  }\n  /**\n   * @param {{listener: Object, prefix: string, Type: class, $publish: Function}} parameters\n   * @return {Object} service\n   */\n  createServiceByPublisher({ listener, prefix, Type, $publish }) {\n    const service = new Type({\n      $publish,\n    });\n    // Store subscription in service instance\n    service.$subscriptions = this.subscribe(prefix, listener);\n    return service;\n  }\n  /**\n   * Disconnect CometD client\n   */\n  disconnect() {\n    this.cometd.disconnect(true);\n  }\n  /**\n   * Get a publisher for a macro service that return a promise\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getAsyncMacroPublisher(prefix) {\n    return (name, parameters, hardFail = false, debug = 1) => {\n      const channel = `${prefix}/call`;\n      const uniqRequestId = this.getUniqRequestId();\n      const subscriptions = {};\n      return new Promise((resolve, reject) => {\n        const handler = ({ data = {} }) => {\n          const { result = {}, errors = [], requestId } = data;\n          if (requestId === uniqRequestId) {\n            // Handle errors\n            if (errors.length > 0) {\n              reject(errors);\n            } else {\n              resolve(result);\n            }\n            this.unsubscribe(subscriptions);\n          }\n        };\n        // Create dynamic listener method\n        const listener = {\n          [name]: handler,\n          [DEFAULT_MACRO_CHANNEL]: handler,\n        };\n        // Ad-Hoc subscription\n        this.subscribe(prefix, listener, subscriptions);\n        // Publish message on channel\n        this.publish(channel, {\n          debug,\n          hardFail,\n          name,\n          parameters,\n          requestId: uniqRequestId,\n        });\n      });\n    };\n  }\n\n  /**\n   * Get a publisher for a task service that return a promise\n   * @experimental\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getAsyncTaskPublisher(prefix) {\n    const DEFAULT_TASK_CHANNEL = 'call';\n    return (name, namespace = '', parameters = null) => {\n      const channel = `${prefix}/${DEFAULT_TASK_CHANNEL}`;\n      const uniqRequestId = this.getUniqRequestId();\n      const subscriptions = {};\n      return new Promise((resolve, reject) => {\n        const handler = ({ data = {} }) => {\n          const { result = {}, success, requestId } = data;\n          if (requestId === uniqRequestId) {\n            // Handle errors\n            if (success) {\n              resolve(result);\n            } else {\n              reject(result);\n            }\n            this.unsubscribe(subscriptions);\n          }\n        };\n        // Create dynamic listener method\n        const listener = {\n          [DEFAULT_TASK_CHANNEL]: handler,\n        };\n        // Ad-Hoc subscription\n        this.subscribe(prefix, listener, subscriptions);\n        // Publish message on channel\n        this.publish(channel, {\n          data: {\n            name,\n            namespace,\n            parameters,\n          },\n          requestId: uniqRequestId,\n        });\n      });\n    };\n  }\n  /**\n   * Get client id\n   * @return {string} clientId\n   */\n  getClientId() {\n    return this.cometd.getClientId();\n  }\n  /**\n   * Get CometD handshake parameters\n   * @return {Object}\n   */\n  getHandshakeFields() {\n    const handshake = this.authentication();\n    return handshake.getHandshakeFields(this);\n  }\n  /**\n   * Get a publisher for a macro service\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getMacroPublisher(prefix) {\n    return (name, parameters, hardFail = false, debug = 1) => {\n      const channel = `${prefix}/call`;\n      const requestId = this.getUniqRequestId();\n      return this.publish(channel, {\n        debug,\n        hardFail,\n        name,\n        parameters,\n        requestId,\n      });\n    };\n  }\n  /**\n   * Get queued subscription index\n   * @return {Object} index\n   */\n  getQueuedSubscription(subscriptions = {}) {\n    const index = this.subscribeQueue.findIndex(\n      (element) => subscriptions === element.subscriptions,\n    );\n    return {\n      index,\n      queued: index > -1,\n    };\n  }\n  /**\n   * Get resource\n   * @return {string}\n   */\n  getResource() {\n    return this.resource;\n  }\n  /**\n   * Get sandbox id\n   * @return {string}\n   */\n  getSandboxId() {\n    return this.sandboxId;\n  }\n  /**\n   * Get server urls list\n   * @return {Promise} servers\n   */\n  getServers() {\n    return this.servers;\n  }\n  /**\n   * Get a publisher for a service\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getServicePublisher(prefix) {\n    return (method, parameters) => {\n      const channel = `${prefix}/${method}`;\n      return this.publish(channel, parameters);\n    };\n  }\n  /**\n   * Get uniq request id\n   * @return {string}\n   */\n  getUniqRequestId() {\n    return `${this.getClientId()}:${this.uniqId}:${++this.requestId}`;\n  }\n  /**\n   * Get user id\n   * @return {string}\n   */\n  getUserId() {\n    return this.userId;\n  }\n  /**\n   * Get user info\n   * @return {Objet}\n   */\n  getUserInfo() {\n    return this.userInfo;\n  }\n  /**\n   * Manage handshake failure case\n   */\n  handshakeFailure() {\n    this.userId = null;\n    this.userInfo = null;\n  }\n  /**\n   * Notify listeners when connection is established\n   */\n  initialized(authentication) {\n    if (authentication) {\n      this.userId = authentication.userId;\n      this.userInfo = authentication.userInfo;\n    }\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onSuccessfulHandshake(authentication);\n      });\n  }\n  /**\n   * Is client connected to ZetaPush\n   * @return {boolean}\n   */\n  isConnected() {\n    return !this.cometd.isDisconnected();\n  }\n  /**\n   * Notify listeners when a message is lost\n   */\n  messageLost(channel, data) {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onMessageLost(channel, data);\n      });\n  }\n  /**\n   * Negociate authentication\n   * @param {error} error\n   */\n  negotiationFailed(error) {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onNegotiationFailed(error);\n      });\n  }\n  /**\n   * Notify listeners when no server url available\n   */\n  noServerUrlAvailable() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onNoServerUrlAvailable();\n      });\n  }\n  /**\n   * Wrap CometdD publish method\n   * @param {String} channel\n   * @param {Object} parameters\n   * @return {Object}\n   */\n  publish(channel, parameters = {}) {\n    this.cometd.publish(channel, parameters);\n    return {\n      channel,\n      parameters,\n    };\n  }\n  /**\n   * Remove a connection status listener\n   */\n  removeConnectionStatusListener(handler) {\n    const listener = this.connectionListeners[handler];\n    if (listener) {\n      listener.enabled = false;\n    }\n  }\n  /**\n   * Set a new authentication methods\n   * @param {function():AbstractHandshake} authentication\n   */\n  setAuthentication(authentication) {\n    this.authentication = authentication;\n  }\n  /**\n   * Set logging level for CometD client\n   * Valid values are the strings 'error', 'warn', 'info' and 'debug', from\n   * less verbose to more verbose.\n   * @param {string} level\n   */\n  setLogLevel(level) {\n    this.cometd.setLogLevel(level);\n  }\n  /**\n   * Subsribe all methods defined in the listener for the given prefixed channel\n   * @param {string} prefix - Channel prefix\n   * @param {Object} listener\n   * @param {Object} subscriptions\n   * @return {Object} subscriptions\n   */\n  subscribe(prefix, listener = {}, subscriptions = {}) {\n    const { queued } = this.getQueuedSubscription(subscriptions);\n    if (!queued) {\n      // Store arguments to renew subscriptions on connection\n      this.subscribeQueue.push({\n        prefix,\n        listener,\n        subscriptions,\n      });\n    }\n    // Subscribe if user is connected\n    if (!this.cometd.isDisconnected()) {\n      for (let method in listener) {\n        if (listener.hasOwnProperty(method)) {\n          if (subscriptions[method] === void 0) {\n            const channel = `${prefix}/${method}`;\n            subscriptions[method] = this.cometd.subscribe(\n              channel,\n              listener[method],\n            );\n          }\n        }\n      }\n    }\n    return subscriptions;\n  }\n  /**\n   * Remove current server url from the server list and shuffle for another one\n   */\n  updateServerUrl() {\n    this.servers.then((servers) => {\n      const index = servers.indexOf(this.serverUrl);\n      if (index > -1) {\n        servers.splice(index, 1);\n      }\n      if (servers.length === 0) {\n        // No more server available\n        this.noServerUrlAvailable();\n      } else {\n        this.serverUrl = shuffle(servers);\n        this.cometd.configure({\n          url: `${this.serverUrl}/strd`,\n        });\n        setTimeout(() => {\n          this.cometd.handshake(this.getHandshakeFields());\n        }, UPDATE_SERVER_URL_DELAY);\n      }\n    });\n  }\n  /**\n   * Remove all subscriptions\n   * @param {Object} subscriptions\n   */\n  unsubscribe(subscriptions = {}) {\n    // Unsubscribe\n    for (let method in subscriptions) {\n      if (subscriptions.hasOwnProperty(method)) {\n        const subscription = subscriptions[method];\n        this.cometd.unsubscribe(subscription);\n      }\n    }\n    // Remove subscription from queue\n    const { index, queued } = this.getQueuedSubscription(subscriptions);\n    if (queued) {\n      this.subscribeQueue.splice(index, 1);\n    }\n  }\n}\n","import { ClientHelper } from './helper';\nimport { API_URL, FORCE_HTTPS } from '../utils/index';\nimport { ConnectionStatusListener } from '../connection/connection-status';\n\n/**\n * Client config object.\n * @typedef {Object} ClientConfig\n * @property {string} apiUrl - Api Url\n * @property {string} sandboxId - Sandbox id\n * @property {boolean} forceHttps - Force end to end HTTPS connection\n * @property {function():AbstractHandshake} authentication - Return authentication properties\n * @property {string} resource - Client resource id\n * @property {Transports} transports - Client transports implementation\n */\n\n/**\n * ZetaPush Client to connect\n * @access public\n * @example\n * // Securized client with token based connection\n * const client = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.weak({\n *       token: null\n *    })\n *   }\n * })\n * @example\n * // Client with authentication based connection\n * const client = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.simple({\n *       login: '<USER-LOGIN>',\n *       password: '<USER-PASSWORD>'\n *    })\n *   }\n * })\n * @example\n * // Explicit deploymentId\n * const clientSimple = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.simple({\n *       deploymentId: '<YOUR-SIMPLE-AUTHENTICATION-DEPLOYMENT-ID>',\n *       login: '<USER-LOGIN>',\n *       password: '<USER-PASSWORD>'\n *    })\n *   }\n * })\n * const clientWeak = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.weak({\n *       deploymentId: '<YOUR-WEAK-AUTHENTICATION-DEPLOYMENT-ID>',\n *       token: '<SESSION-TOKEN>'\n *    })\n *   }\n * })\n */\nexport class Client {\n  /**\n   * Create a new ZetaPush Client\n   * @param {ClientConfig} config\n   */\n  constructor({\n    apiUrl = API_URL,\n    sandboxId,\n    forceHttps = FORCE_HTTPS,\n    authentication,\n    resource,\n    transports,\n  }) {\n    /**\n     * @access private\n     * @type {ClientHelper}\n     */\n    this.helper = new ClientHelper({\n      apiUrl,\n      sandboxId,\n      forceHttps,\n      authentication,\n      resource,\n      transports,\n    });\n  }\n  /**\n   * Add a connection listener to handle life cycle connection events\n   * @param {ConnectionStatusListener} listener\n   * @return {number} handler\n   */\n  addConnectionStatusListener(listener) {\n    return this.helper.addConnectionStatusListener(listener);\n  }\n  /**\n   * Safely connect client to ZetaPush\n   */\n  connect() {\n    if (this.isConnected()) {\n      const handler = this.addConnectionStatusListener({\n        onConnectionClosed: () => {\n          this.removeConnectionStatusListener(handler);\n          this.helper.connect();\n        },\n      });\n      this.disconnect();\n    } else {\n      this.helper.connect();\n    }\n  }\n  /**\n   * Create a promise based macro service instance\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   * @example\n   * const api = client.createAsyncMacroService({\n   *   Type: WelcomeMacro\n   * })\n   * api.welcome({\n   *   message: Hello'\n   * }).then(({ message }) => {\n   *   console.log(message)\n   * })\n   */\n  createAsyncMacroService({ deploymentId, listener, Type }) {\n    return this.helper.createAsyncMacroService({\n      deploymentId,\n      listener,\n      Type,\n    });\n  }\n  /**\n   * Create a promise based task service instance\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   * @example\n   * const api = client.createAsyncMacroService({\n   *   Type: WelcomeMacro\n   * })\n   * api.welcome({\n   *   message: Hello'\n   * }).then(({ message }) => {\n   *   console.log(message)\n   * })\n   */\n  createAsyncTaskService({ deploymentId, Type }) {\n    return this.helper.createAsyncTaskService({\n      deploymentId,\n      Type,\n    });\n  }\n  /**\n   * Create a publish/subscribe for a service type\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   * @example\n   * const service = client.createService({\n   *   listener: {\n   *     list(message) {\n   *       console.log('Stack list callback', message)\n   *     },\n   *     push(message) {\n   *       console.log('Stack push callback', message)\n   *     }\n   *   },\n   *   Type: ZetaPush.services.Stack\n   * })\n   * service.list({\n   *   stack: '<STACK-ID>'\n   * })\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * const service = client.createService({\n   *   deploymentId: 'stack_0'\n   *   listener: {\n   *     list(message) {\n   *       console.log('Stack list callback', message)\n   *     },\n   *     push(message) {\n   *       console.log('Stack push callback', message)\n   *     }\n   *   },\n   *   Type: ZetaPush.services.Stack\n   * })\n   * service.list({\n   *   stack: '<STACK-ID>'\n   * })\n   */\n  createService({ deploymentId, listener, Type }) {\n    return this.helper.createService({\n      deploymentId,\n      listener,\n      Type,\n    });\n  }\n  /**\n   * Disonnect client from ZetaPush\n   */\n  disconnect() {\n    if (this.isConnected()) {\n      this.helper.disconnect();\n    }\n  }\n  /**\n   * Is client connected to ZetaPush\n   * @return {boolean}\n   */\n  isConnected() {\n    return this.helper.isConnected();\n  }\n  /**\n   * Get the client sandbox id\n   * @return {string}\n   */\n  getSandboxId() {\n    return this.helper.getSandboxId();\n  }\n  /**\n   * Get the client resource\n   * @return {string}\n   */\n  getResource() {\n    return this.helper.getResource();\n  }\n  /**\n   * Get server urls list\n   * @return {Promise} servers\n   */\n  getServers() {\n    return this.helper.getServers();\n  }\n  /**\n   * Get the client user id\n   * @return {string}\n   */\n  getUserId() {\n    return this.helper.getUserId();\n  }\n  /*\n   * Get the client user info\n   * @return {Object}\n   * @example\n   * // Create new ZetaPush Client\n   * const client = new Client({\n   *   sandboxId: '<YOUR-SANDBOX-ID>',\n   *   authentication: () => Authentication.simple({\n   *     login: '<YOUR-USER-LOGIN>',\n   *     password: '<YOUR-USER-PASSWORD>'\n   *   })\n   * })\n   * // Add connection establised listener\n   * client.onConnectionEstablished(() => {\n   *   console.log('onConnectionEstablished')\n   *   const profile = client.getUserInfo()\n   *   console.log('Your profile', profile)\n   * })\n   * client.connect()\n   */\n  getUserInfo() {\n    return this.helper.getUserInfo();\n  }\n  /**\n   * Remove a connection status listener\n   * @param {number} handler\n   */\n  removeConnectionStatusListener(handler) {\n    return this.helper.removeConnectionStatusListener(handler);\n  }\n  /**\n   * Set a new authentication methods\n   * @param {function():AbstractHandshake} authentication\n   */\n  setAuthentication(authentication) {\n    this.helper.setAuthentication(authentication);\n  }\n  /**\n   * Set logging level\n   * Valid values are the strings 'error', 'warn', 'info' and 'debug', from\n   * less verbose to more verbose.\n   * @param {string} level\n   */\n  setLogLevel(level) {\n    this.helper.setLogLevel(level);\n  }\n  /**\n   * Set new client resource value\n   * @param {string} resource\n   */\n  setResource(resource) {\n    this.helper.setResource(resource);\n  }\n  /**\n   * Remove all subscriptions\n   * @param {Object} service\n   */\n  unsubscribe(service) {\n    if (!service.$subscriptions) {\n      throw new TypeError('Missing $subscriptions property in service');\n    }\n    return this.helper.unsubscribe(service.$subscriptions);\n  }\n}\n\n/**\n * Add shorthand connection status method\n */\nObject.getOwnPropertyNames(ConnectionStatusListener.prototype).forEach(\n  (method) => {\n    // Only implements unsupported methods\n    if (!Client.prototype.hasOwnProperty(method)) {\n      Client.prototype[method] = function addListener(listener) {\n        return this.addConnectionStatusListener({\n          [method]: listener,\n        });\n      };\n    }\n  },\n);\n","/**\n * Provide fallback for DOMStorage\n * @access protected\n */\nclass MemoryStorage {\n  constructor() {\n    this._map = new Map();\n  }\n  getItem(key) {\n    return this._map.get(key);\n  }\n  setItem(key, value) {\n    return this._map.get(key);\n  }\n  removeItem(key) {\n    this._map.delete(key);\n  }\n  clear() {\n    this._map = new Map();\n  }\n  key(n) {\n    return Array.from(this._map.keys())[n];\n  }\n  get length() {\n    return this._map.size;\n  }\n}\n\n/**\n * @type {Storage}\n * @access protected\n */\nexport const platformStorage =\n  typeof localStorage === 'undefined' ? new MemoryStorage() : localStorage;\n","import { platformStorage } from './storage';\n\n/**\n * @type {string}\n */\nexport const ZETAPUSH_SESSION_KEY = 'zetapush.token';\n\n/**\n * Provide abstraction for token persistence\n * @access protected\n */\nexport class SessionPersistenceStrategy {\n  /**\n   * @param {{sandboxId: string, storage: DOMStorage}} parameters\n   */\n  constructor({ sandboxId, storage = platformStorage } = {}) {\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.key = `${ZETAPUSH_SESSION_KEY}.${sandboxId}`;\n    /**\n     * @access private\n     * @type {DOMStorage}\n     */\n    this.storage = storage;\n  }\n  /**\n   * @return {string} session The stored session\n   */\n  get() {\n    const { key, storage } = this;\n    const json = storage.getItem(key) || '{}';\n    let session = {};\n    try {\n      session = JSON.parse(json);\n    } catch (e) {}\n    return session;\n  }\n  /**\n   * @param {Object} session The session to store\n   */\n  set(session = {}) {\n    const { key, storage } = this;\n    const json = JSON.stringify(session);\n    try {\n      storage.setItem(key, json);\n    } catch (e) {}\n    return session;\n  }\n}\n","import { Client } from './basic';\nimport { Authentication } from '../authentication/handshake';\nimport { SessionPersistenceStrategy } from '../utils/session-persistence';\n\n/**\n * SmartClient deployment infos.\n * @typedef {Object} SmartClientDeployment\n * @property {string} simple - Simple deployment id\n * @property {string} weak - Weak deployment id\n */\n\n/**\n * SmartClient config object.\n * @typedef {Object} SmartClientConfig\n * @property {string} apiUrl - Api Url\n * @property {SmartClientDeployment} deployment - Deployment infos\n * @property {string} sandboxId - Sandbox id\n * @property {boolean} forceHttps - Force end to end HTTPS connection\n * @property {string} resource - Client resource id\n * @property {Array} transports - Client transports list\n */\n\n/**\n * @access public\n * @extends {Client}\n * @example\n * // Create a new WeakClient\n * const client = new ZetaPush.SmartClient({\n *   sandboxId: '<YOUR-SANDBOX-ID>'\n * })\n */\nexport class SmartClient extends Client {\n  /**\n   * Create a new ZetaPush SmartClient\n   * @param {SmartClientConfig} config\n   */\n  constructor({\n    apiUrl,\n    deployment,\n    sandboxId,\n    forceHttps,\n    resource,\n    transports,\n  }) {\n    const persistence = new SessionPersistenceStrategy({ sandboxId });\n\n    /**\n     * @return {AbstractHandshakeManager}\n     */\n    const authentication = () => {\n      const session = persistence.get();\n      const { token } = session;\n\n      if (this.hasCredentials()) {\n        const { login, password } = this.getCredentials();\n        this.setCredentials({});\n        return Authentication.simple({\n          login,\n          password,\n          deploymentId: deployment && deployment.simple,\n        });\n      } else {\n        if (this.isStronglyAuthenticated(session)) {\n          return Authentication.simple({\n            login: token,\n            password: null,\n            deploymentId: deployment && deployment.simple,\n          });\n        } else {\n          return Authentication.weak({\n            token,\n            deploymentId: deployment && deployment.weak,\n          });\n        }\n      }\n    };\n    // Initialize base client\n    super({\n      apiUrl,\n      sandboxId,\n      authentication,\n      forceHttps,\n      resource,\n      transports,\n    });\n    /**\n     * @access protected\n     * @type {SessionPersistenceStrategy}\n     */\n    this.persistence = persistence;\n    /**\n     * @access protected\n     * @type {Object}\n     */\n    this.credentials = {};\n    /**\n     * Handle connection lifecycle events\n     * @access protected\n     * @type {Object}\n     */\n    this.lifeCycleConnectionHandler = this.addConnectionStatusListener({\n      onConnectionClosed() {\n        persistence.set({});\n      },\n      onSuccessfulHandshake(session) {\n        if (session.token) {\n          persistence.set(session);\n        }\n      },\n    });\n    // Properly disconnect client to avoir ghost connections\n    /*\n    window.addEventListener('beforeunload', () => {\n      this.removeConnectionStatusListener(this.lifeCycleConnectionHandler)\n      super.disconnect()\n    })\n    */\n  }\n  /**\n   * Disconnect client from ZetaPush backend\n   */\n  disconnect() {\n    super.disconnect();\n  }\n  /**\n   * @return {Object}\n   */\n  getCredentials() {\n    return this.credentials;\n  }\n  /**\n   * @return {Object}\n   */\n  getSession() {\n    return this.persistence.get();\n  }\n  /**\n   * @return {boolean}\n   */\n  hasCredentials() {\n    const { login, password } = this.getCredentials();\n    return login && password;\n  }\n  /**\n   * @return {boolean}\n   */\n  isStronglyAuthenticated(session = this.persistence.get()) {\n    return (\n      !this.isWeaklyAuthenticated(session) && typeof session.token === 'string'\n    );\n  }\n  /**\n   * @return {boolean}\n   */\n  isWeaklyAuthenticated(session = this.persistence.get()) {\n    return typeof session.publicToken === 'string';\n  }\n  /**\n   * @param {{login: string, password: string}} parameters\n   */\n  setCredentials({ login, password }) {\n    this.credentials = { login, password };\n  }\n}\n","import { Client } from './basic';\nimport { Authentication } from '../authentication/handshake';\nimport { SessionPersistenceStrategy } from '../utils/session-persistence';\n\n/**\n * WeakClient config object.\n * @typedef {Object} WeakClientConfig\n * @property {string} apiUrl - Api Url\n * @property {string} deploymentId - Authentication deployment id, default value is 'weak_0'\n * @property {string} sandboxId - Sandbox id\n * @property {boolean} forceHttps - Force end to end HTTPS connection\n * @property {string} resource - Client resource id\n * @property {Array} transports - Client transports list\n */\n\n/**\n * @access public\n * @extends {Client}\n * @example\n * // Create a new WeakClient\n * const client = new ZetaPush.WeakClient({\n *   sandboxId: '<YOUR-SANDBOX-ID>'\n * })\n * @example\n * // Explicit deploymentId\n * // WeakClient provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n * // deploymentId default value is weak_0\n * const client = new ZetaPush.WeakClient({\n *   deploymentId: 'weak_0',\n *   sandboxId: '<YOUR-SANDBOX-ID>'\n * })\n */\nexport class WeakClient extends Client {\n  /**\n   * Create a new ZetaPush WeakClient\n   * @param {WeakClientConfig} config\n   */\n  constructor({\n    apiUrl,\n    sandboxId,\n    deploymentId,\n    forceHttps,\n    resource,\n    transports,\n  }) {\n    const authentication = () => {\n      const token = this.getToken();\n      const handshake = Authentication.weak({\n        deploymentId,\n        token,\n      });\n      return handshake;\n    };\n    /**\n     * Call Client constructor with specific parameters\n     */\n    super({\n      apiUrl,\n      sandboxId,\n      forceHttps,\n      authentication,\n      resource,\n      transports,\n    });\n    // Handle successful handshake\n    const onSuccessfulHandshake = ({ publicToken, userId, token }) => {\n      if (token) {\n        this.strategy.set({ publicToken, userId, token });\n      }\n    };\n    this.addConnectionStatusListener({ onSuccessfulHandshake });\n    /**\n     * @access private\n     * @type {SessionPersistenceStrategy}\n     */\n    this.strategy = new SessionPersistenceStrategy({ sandboxId });\n  }\n  /**\n   * @return {string} The stored token\n   */\n  getToken() {\n    const { token } = this.strategy.get();\n    return token;\n  }\n}\n","import { Client } from './basic';\nimport { Authentication } from '../authentication/handshake';\nimport { uuid } from '../utils';\nimport { Queue } from '../mapping/services';\n\nexport class ServerClient extends Client {\n  constructor({ apiUrl, sandboxId, forceHttps, transports, login, password }) {\n    const authentication = () =>\n      Authentication.developer({\n        login,\n        password,\n      });\n    const resource = uuid();\n    /**\n     * Call Client constructor with specific parameters\n     */\n    super({\n      apiUrl,\n      sandboxId,\n      forceHttps,\n      authentication,\n      resource,\n      transports,\n    });\n  }\n  disconnect() {\n    return new Promise((resolve, reject) => {\n      const handlers = [];\n      if (this.isConnected()) {\n        const onConnectionClosed = () => {\n          // Remove connection status listener\n          handlers.forEach((handler) => {\n            this.removeConnectionStatusListener(handler);\n          });\n          // Resolve disconnection\n          resolve();\n        };\n        handlers.push(this.onConnectionClosed(onConnectionClosed));\n        // Disconnect client\n        super.disconnect();\n      } else {\n        // Resolve disconnection\n        resolve();\n      }\n    });\n  }\n  connect() {\n    return new Promise((resolve, reject) => {\n      const handlers = [];\n      this.disconnect().then(() => {\n        const onFailedHandshake = (error) => {\n          // Remove connection status listener\n          handlers.forEach((handler) => {\n            this.removeConnectionStatusListener(handler);\n          });\n          // Reconnect client via weak auth\n          super.connect();\n          // Reject connection\n          reject(error);\n        };\n        const onConnectionEstablished = () => {\n          // Remove connection status listener\n          handlers.forEach((handler) => {\n            this.removeConnectionStatusListener(handler);\n          });\n          // Resolve connection success\n          resolve();\n        };\n        // Handle connection success and fail\n        handlers.push(this.onConnectionEstablished(onConnectionEstablished));\n        handlers.push(this.onFailedHandshake(onFailedHandshake));\n        // Connect client to ZetaPush backend\n        super.connect();\n      });\n    });\n  }\n  subscribeTaskServer(Worker, deploymentId = Queue.DEFAULT_DEPLOYMENT_ID) {\n    console.log('subscribeTaskServer', Worker, deploymentId);\n    const queue = this.createService({\n      deploymentId,\n      listener: {\n        async dispatch({ data: { request, taskId } }) {\n          console.log('dispatch', { request, taskId });\n          const { data, requestId } = request;\n          const { name, namespace, parameters } = data;\n          console.log('Queue::dispatch', {\n            name,\n            namespace,\n            parameters,\n            requestId,\n            taskId,\n          });\n          try {\n            const result = await Worker[name](parameters);\n            console.log('result', result);\n            queue.done({\n              result,\n              taskId,\n              requestId,\n              success: true,\n            });\n          } catch (error) {\n            console.log('error', error);\n            queue.done({\n              result: { code: '', message: '' },\n              taskId,\n              requestId,\n              success: false,\n            });\n          }\n        },\n      },\n      Type: Queue,\n    });\n    queue.register({\n      capacity: 100,\n    });\n  }\n}\n","export { Authentication } from './authentication/handshake';\nexport { ConnectionStatusListener } from './connection/connection-status';\n\nexport { Client } from './client/basic';\nexport { SmartClient } from './client/smart';\nexport { WeakClient } from './client/weak';\nexport { ServerClient } from './client/server';\n\nexport { services } from './mapping';\n\n/**\n * SDK Version\n * @type {string}\n */\nexport const VERSION = '3.4.0-alpha.2';\n"],"names":["Service","$publish","Delegating","Simple","Weak","publicToken","fullRights","DeployableNames","AbstractHandshake","authType","sandboxId","deploymentId","client","authentication","authData","getSandboxId","authVersion","getResource","resource","TokenHandshake","token","CredentialsHandshake","login","password","Authentication","DEFAULT_DEPLOYMENT_ID","create","AUTH_SIMPLE","AUTH_WEAK","AUTH_DELEGATING","AUTH_DEVELOPER","ConnectionStatusListener","failure","FetchLongPollingTransport","WebSocketTransport","TRANSPORT_TYPES","require$$0","require$$1","Aggreg","items","owner","Stack","stack","page","data","guids","listeners","guid","Echo","parameter","Game","role","gameId","userId","userName","type","options","GameEngine","msgId","payload","error","callerId","maxGames","gameInfo","location","status","Gda","table","key","key2","column","columns","rows","start","stop","Remoting","fromResource","cmd","from","askingResource","capabilities","answeringResource","action","user","available","uid","GroupManagement","group","users","groupName","hardFail","actions","Httpclient","name","requestId","MacroDebug","breakpoint","enabled","path","exp","frame","parameters","breakpoints","debug","Macro","Sendmail","Messaging","target","channel","Queue","description","originBusinessId","originDeploymentId","result","taskId","success","capacity","Notif","Rdbms","Sms_ovh","Cron","Search","id","index","indices","query","sort","types","Template","languageTag","Trigger","Zpfs_s3","oldPath","folder","parents","tags","metadata","contentType","flatten","metadataFiles","Zpfs_hdfs","Zpfs_s3compat","Userdir","userKeys","HTTP_PATTERN","HTTP_PROTOCOL","HTTPS_PROTOCOL","DICTIONARY","API_URL","FORCE_HTTPS","protocol","normalizeApiUrl","apiUrl","last","charAt","length","SLASH","shuffle","list","Math","floor","random","getSecureUrl","url","forceHttps","replace","getServers","transports","normalizedSecuresApiUrl","fetch","then","response","json","servers","map","server","isDerivedOf","Derived","Parent","prototype","Object","getPrototypeOf","is","uuid","entropy","dictionary","Array","reduce","previous","next","Message","UPDATE_SERVER_URL_DELAY","DEFAULT_MACRO_CHANNEL","ClientHelper","Transports","userInfo","uniqId","catch","connectionToServerFail","connectionListeners","connected","wasConnected","serverUrl","sessionId","subscribeQueue","cometd","CometD","ALL","forEach","Transport","registerTransport","onTransportException","transport","updateServerUrl","addListener","ext","successful","advice","_debug","initialized","handshakeFailure","RECONNECT_NONE_VALUE","reconnect","authenticationFailed","RECONNECT_HANDSHAKE_VALUE","negotiationFailed","isDisconnected","connectionWillClose","batch","prefix","listener","subscriptions","subscribe","connectionEstablished","connectionBroken","connectionClosed","push","assign","filter","onFailedHandshake","configure","handshake","getHandshakeFields","noServerUrlAvailable","onConnectionBroken","onConnectionClosed","onConnectionEstablished","onConnectionToServerFail","onConnectionWillClose","Type","getAsyncMacroPublisher","createServiceByPublisher","getAsyncTaskPublisher","isMacroType","getMacroPublisher","getServicePublisher","service","$subscriptions","disconnect","uniqRequestId","getUniqRequestId","Promise","resolve","reject","handler","errors","unsubscribe","publish","DEFAULT_TASK_CHANNEL","namespace","getClientId","findIndex","element","method","onSuccessfulHandshake","onMessageLost","onNegotiationFailed","onNoServerUrlAvailable","level","setLogLevel","getQueuedSubscription","queued","hasOwnProperty","indexOf","splice","subscription","Client","helper","addConnectionStatusListener","isConnected","removeConnectionStatusListener","connect","createAsyncMacroService","createAsyncTaskService","createService","getUserId","getUserInfo","setAuthentication","setResource","TypeError","getOwnPropertyNames","MemoryStorage","_map","Map","get","value","delete","n","keys","size","platformStorage","localStorage","ZETAPUSH_SESSION_KEY","SessionPersistenceStrategy","storage","getItem","session","JSON","parse","e","stringify","setItem","SmartClient","deployment","persistence","hasCredentials","getCredentials","setCredentials","simple","isStronglyAuthenticated","weak","credentials","lifeCycleConnectionHandler","set","isWeaklyAuthenticated","WeakClient","getToken","strategy","ServerClient","developer","handlers","Worker","log","queue","request","done","code","message","register","VERSION"],"mappings":"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"}