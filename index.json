[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/authentication/handshake.js",
    "content": "import { Delegating, Simple, Weak } from '../mapping/authentications'\n\n/**\n * ZetaPush deployables names\n */\nconst DeployableNames = {\n  AUTH_SIMPLE: 'simple',\n  AUTH_WEAK: 'weak',\n  AUTH_DELEGATING: 'delegating'\n}\n\n/**\n * Provide abstraction over CometD handshake data structure\n * @access protected\n */\nclass AbstractHandshake {\n  /**\n   * Create a new handshake manager\n   * @param {{authType: string, sandboxId: string, deploymentId: string}} parameters\n   */\n  constructor({ authType, sandboxId, deploymentId }) {\n    /**\n     * @access protected\n     * @type {string}\n     */\n    this.authType = authType\n    /**\n     * @access protected\n     * @type {string}\n     */\n    this.sandboxId = sandboxId\n    /**\n     * @access protected\n     * @type {string}\n     */\n    this.deploymentId = deploymentId\n  }\n  /**\n   * @param {ClientHelper} client\n   * @return {Object}\n   */\n  getHandshakeFields(client) {\n    const authentication = {\n      data: this.authData,\n      type: `${client.getSandboxId()}.${this.deploymentId}.${this.authType}`,\n      version: this.authVersion\n    }\n    if (client.getResource()) {\n      authentication.resource = client.getResource()\n    }\n    return {\n      ext: {\n        authentication\n      }\n    }\n  }\n  /**\n   * Get auth version\n   * @return {string}\n   */\n  get authVersion() {\n    return 'none'\n  }\n}\n\n/**\n * Provide abstraction over CometD token base handshake data structure\n * @access protected\n * @extends {AbstractHandshake}\n */\nclass TokenHandshake extends AbstractHandshake {\n  /**\n   * @param {{authType: string, deploymentId: string, token: string}} parameters\n   */\n  constructor({ authType, deploymentId, token }) {\n    super({ deploymentId, authType })\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.token = token\n  }\n  /**\n   * @return {token: string}\n   */\n  get authData() {\n    const { token } = this\n    return {\n      token\n    }\n  }\n}\n\n/**\n * Provide abstraction over CometD credentials based handshake data structure\n * @access protected\n * @extends {AbstractHandshake}\n */\nclass CredentialsHandshake extends AbstractHandshake {\n  /**\n   * @param {{authType: string, deploymentId: string, login: string, password: string}} parameters\n   */\n  constructor({ authType, deploymentId, login, password }) {\n    super({ authType, deploymentId })\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.login = login\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.password = password\n  }\n  /**\n   * Get auth data\n   * @return {login: string, password: string}\n   */\n  get authData() {\n    const { login, password } = this\n    return {\n      login, password\n    }\n  }\n}\n\n/**\n * Factory to create handshake\n * @access public\n */\nexport class Authentication {\n  /**\n   * @param {{deploymentId: string, login: string, password: string}} parameters\n   * @return {CredentialsHandshake}\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * Authentication.delegating({\n   *   deploymentId: '<YOUR-SIMPLE-AUTHENTICATION-DEPLOYMENT-ID>',\n   *   login: <USER-LOGIN>,\n   *   password: '<USER-PASSWORD>'\n   * })\n   */\n  static simple({ deploymentId = Simple.DEFAULT_DEPLOYMENT_ID, login, password }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_SIMPLE,\n      deploymentId,\n      login,\n      password\n    })\n  }\n  /**\n   * @param {{deploymentId: string, token: string}} parameters\n   * @return {TokenHandshake}\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * Authentication.delegating({\n   *   deploymentId: '<YOUR-WEAK-AUTHENTICATION-DEPLOYMENT-ID>',\n   *   token: null\n   * })\n   */\n  static weak({ deploymentId = Weak.DEFAULT_DEPLOYMENT_ID, token }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_WEAK,\n      deploymentId,\n      login: token,\n      password: null\n    })\n  }\n  /**\n   * @param {{deploymentId: string, token: string}} parameters\n   * @return {TokenHandshake}\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * Authentication.delegating({\n   *   deploymentId: '<YOUR-DELEGATING-AUTHENTICATION-DEPLOYMENT-ID>',\n   *   token: null\n   * })\n   */\n  static delegating({ deploymentId = Delegating.DEFAULT_DEPLOYMENT_ID, token }) {\n    return Authentication.create({\n      authType: DeployableNames.AUTH_DELEGATING,\n      deploymentId,\n      login: token,\n      password: null\n    })\n  }\n  /**\n   * @param {{authType: string, deploymentId: string, login: string, password: string}} parameters\n   * @return {TokenHandshake|CredentialsHandshake}\n   */\n  static create({ authType, deploymentId, login, password }) {\n    if (password === null) {\n      return new TokenHandshake({ authType, deploymentId, token: login })\n    }\n    return new CredentialsHandshake({ authType, deploymentId, login, password })\n  }\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/authentication/handshake.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "DeployableNames",
    "memberof": "src/authentication/handshake.js",
    "static": true,
    "longname": "src/authentication/handshake.js~DeployableNames",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/authentication/handshake.js",
    "importStyle": null,
    "description": "ZetaPush deployables names",
    "lineNumber": 6,
    "type": {
      "types": [
        "{\"AUTH_SIMPLE\": string, \"AUTH_WEAK\": string, \"AUTH_DELEGATING\": string}"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "AbstractHandshake",
    "memberof": "src/authentication/handshake.js",
    "static": true,
    "longname": "src/authentication/handshake.js~AbstractHandshake",
    "access": "protected",
    "export": false,
    "importPath": "zetapush-js/src/authentication/handshake.js",
    "importStyle": null,
    "description": "Provide abstraction over CometD handshake data structure",
    "lineNumber": 16,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/authentication/handshake.js~AbstractHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~AbstractHandshake#constructor",
    "access": "public",
    "description": "Create a new handshake manager",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "{authType: string, sandboxId: string, deploymentId: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "authType",
    "memberof": "src/authentication/handshake.js~AbstractHandshake",
    "static": false,
    "longname": "src/authentication/handshake.js~AbstractHandshake#authType",
    "access": "protected",
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "sandboxId",
    "memberof": "src/authentication/handshake.js~AbstractHandshake",
    "static": false,
    "longname": "src/authentication/handshake.js~AbstractHandshake#sandboxId",
    "access": "protected",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "deploymentId",
    "memberof": "src/authentication/handshake.js~AbstractHandshake",
    "static": false,
    "longname": "src/authentication/handshake.js~AbstractHandshake#deploymentId",
    "access": "protected",
    "description": "",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "getHandshakeFields",
    "memberof": "src/authentication/handshake.js~AbstractHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~AbstractHandshake#getHandshakeFields",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "ClientHelper"
        ],
        "spread": false,
        "optional": false,
        "name": "client",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "authVersion",
    "memberof": "src/authentication/handshake.js~AbstractHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~AbstractHandshake#authVersion",
    "access": "public",
    "description": "Get auth version",
    "lineNumber": 61,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "TokenHandshake",
    "memberof": "src/authentication/handshake.js",
    "static": true,
    "longname": "src/authentication/handshake.js~TokenHandshake",
    "access": "protected",
    "export": false,
    "importPath": "zetapush-js/src/authentication/handshake.js",
    "importStyle": null,
    "description": "Provide abstraction over CometD token base handshake data structure",
    "lineNumber": 71,
    "interface": false,
    "extends": [
      "AbstractHandshake"
    ],
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/authentication/handshake.js~TokenHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~TokenHandshake#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "{authType: string, deploymentId: string, token: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "token",
    "memberof": "src/authentication/handshake.js~TokenHandshake",
    "static": false,
    "longname": "src/authentication/handshake.js~TokenHandshake#token",
    "access": "private",
    "description": "",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "authData",
    "memberof": "src/authentication/handshake.js~TokenHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~TokenHandshake#authData",
    "access": "public",
    "description": "",
    "lineNumber": 86,
    "return": {
      "nullable": null,
      "types": [
        "token: string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"token\": *}"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "CredentialsHandshake",
    "memberof": "src/authentication/handshake.js",
    "static": true,
    "longname": "src/authentication/handshake.js~CredentialsHandshake",
    "access": "protected",
    "export": false,
    "importPath": "zetapush-js/src/authentication/handshake.js",
    "importStyle": null,
    "description": "Provide abstraction over CometD credentials based handshake data structure",
    "lineNumber": 99,
    "interface": false,
    "extends": [
      "AbstractHandshake"
    ],
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/authentication/handshake.js~CredentialsHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~CredentialsHandshake#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "{authType: string, deploymentId: string, login: string, password: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "login",
    "memberof": "src/authentication/handshake.js~CredentialsHandshake",
    "static": false,
    "longname": "src/authentication/handshake.js~CredentialsHandshake#login",
    "access": "private",
    "description": "",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "password",
    "memberof": "src/authentication/handshake.js~CredentialsHandshake",
    "static": false,
    "longname": "src/authentication/handshake.js~CredentialsHandshake#password",
    "access": "private",
    "description": "",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "get",
    "name": "authData",
    "memberof": "src/authentication/handshake.js~CredentialsHandshake",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/authentication/handshake.js~CredentialsHandshake#authData",
    "access": "public",
    "description": "Get auth data",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "login: string, password: string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"login\": *, \"password\": *}"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "Authentication",
    "memberof": "src/authentication/handshake.js",
    "static": true,
    "longname": "src/authentication/handshake.js~Authentication",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/authentication/handshake.js",
    "importStyle": "{Authentication}",
    "description": "Factory to create handshake",
    "lineNumber": 132,
    "interface": false
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "simple",
    "memberof": "src/authentication/handshake.js~Authentication",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/authentication/handshake.js~Authentication.simple",
    "access": "public",
    "description": "",
    "examples": [
      "// Explicit deploymentId\n// Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\nAuthentication.delegating({\n  deploymentId: '<YOUR-SIMPLE-AUTHENTICATION-DEPLOYMENT-ID>',\n  login: <USER-LOGIN>,\n  password: '<USER-PASSWORD>'\n})"
    ],
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "{deploymentId: string, login: string, password: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CredentialsHandshake"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "weak",
    "memberof": "src/authentication/handshake.js~Authentication",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/authentication/handshake.js~Authentication.weak",
    "access": "public",
    "description": "",
    "examples": [
      "// Explicit deploymentId\n// Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\nAuthentication.delegating({\n  deploymentId: '<YOUR-WEAK-AUTHENTICATION-DEPLOYMENT-ID>',\n  token: null\n})"
    ],
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "{deploymentId: string, token: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TokenHandshake"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "delegating",
    "memberof": "src/authentication/handshake.js~Authentication",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/authentication/handshake.js~Authentication.delegating",
    "access": "public",
    "description": "",
    "examples": [
      "// Explicit deploymentId\n// Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\nAuthentication.delegating({\n  deploymentId: '<YOUR-DELEGATING-AUTHENTICATION-DEPLOYMENT-ID>',\n  token: null\n})"
    ],
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "{deploymentId: string, token: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TokenHandshake"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "create",
    "memberof": "src/authentication/handshake.js~Authentication",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/authentication/handshake.js~Authentication.create",
    "access": "public",
    "description": "",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "{authType: string, deploymentId: string, login: string, password: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TokenHandshake",
        "CredentialsHandshake"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/client/basic.js",
    "content": "import { ClientHelper } from './helper'\nimport { API_URL, FORCE_HTTPS } from '../utils/index'\nimport { ConnectionStatusListener } from '../connection/connection-status'\n\n/**\n * Client config object.\n * @typedef {Object} ClientConfig\n * @property {string} apiUrl - Api Url\n * @property {string} sandboxId - Sandbox id\n * @property {boolean} forceHttps - Force end to end HTTPS connection\n * @property {function():AbstractHandshake} authentication - Return authentication properties\n * @property {string} resource - Client resource id\n * @property {Transports} transports - Client transports implementation\n */\n\n/**\n * ZetaPush Client to connect\n * @access public\n * @example\n * // Securized client with token based connection\n * const client = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.weak({\n *       token: null\n *    })\n *   }\n * })\n * @example\n * // Client with authentication based connection\n * const client = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.simple({\n *       login: '<USER-LOGIN>',\n *       password: '<USER-PASSWORD>'\n *    })\n *   }\n * })\n * @example\n * // Explicit deploymentId\n * const clientSimple = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.simple({\n *       deploymentId: '<YOUR-SIMPLE-AUTHENTICATION-DEPLOYMENT-ID>',\n *       login: '<USER-LOGIN>',\n *       password: '<USER-PASSWORD>'\n *    })\n *   }\n * })\n * const clientWeak = new ZetaPush.Client({\n *   sandboxId: '<YOUR-SANDBOX-ID>',\n *   authentication() {\n *     return ZetaPush.Authentication.weak({\n *       deploymentId: '<YOUR-WEAK-AUTHENTICATION-DEPLOYMENT-ID>',\n *       token: '<SESSION-TOKEN>'\n *    })\n *   }\n * })\n */\nexport class Client {\n  /**\n   * Create a new ZetaPush Client\n   * @param {ClientConfig} config\n   */\n  constructor({ apiUrl = API_URL, sandboxId, forceHttps = FORCE_HTTPS, authentication, resource, transports }) {\n    /**\n     * @access private\n     * @type {ClientHelper}\n     */\n    this.helper = new ClientHelper({\n      apiUrl,\n      sandboxId,\n      forceHttps,\n      authentication,\n      resource,\n      transports\n    })\n  }\n  /**\n   * Add a connection listener to handle life cycle connection events\n   * @param {ConnectionStatusListener} listener\n   * @return {number} handler\n   */\n  addConnectionStatusListener(listener) {\n    return this.helper.addConnectionStatusListener(listener)\n  }\n  /**\n   * Safely connect client to ZetaPush\n   */\n  connect() {\n    if (this.isConnected()) {\n      const handler = this.addConnectionStatusListener({\n        onConnectionClosed: () => {\n          this.removeConnectionStatusListener(handler)\n          this.helper.connect()\n        }\n      })\n      this.disconnect()\n    } else {\n      this.helper.connect()\n    }\n  }\n  /**\n   * Create a promise based service instance\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   * @example\n   * const api = client.createAsyncMacroService({\n   *   Type: WelcomeMacro\n   * })\n   * api.welcome({\n   *   message: Hello'\n   * }).then(({ message }) => {\n   *   console.log(message)\n   * })\n   */\n  createAsyncMacroService({ deploymentId, listener, Type }) {\n    return this.helper.createAsyncMacroService({ deploymentId, listener, Type })\n  }\n  /**\n   * Create a publish/subscribe for a service type\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   * @example\n   * const service = client.createService({\n   *   listener: {\n   *     list(message) {\n   *       console.log('Stack list callback', message)\n   *     },\n   *     push(message) {\n   *       console.log('Stack push callback', message)\n   *     }\n   *   },\n   *   Type: ZetaPush.services.Stack\n   * })\n   * service.list({\n   *   stack: '<STACK-ID>'\n   * })\n   * @example\n   * // Explicit deploymentId\n   * // Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n   * const service = client.createService({\n   *   deploymentId: 'stack_0'\n   *   listener: {\n   *     list(message) {\n   *       console.log('Stack list callback', message)\n   *     },\n   *     push(message) {\n   *       console.log('Stack push callback', message)\n   *     }\n   *   },\n   *   Type: ZetaPush.services.Stack\n   * })\n   * service.list({\n   *   stack: '<STACK-ID>'\n   * })\n   */\n  createService({ deploymentId, listener, Type }) {\n    return this.helper.createService({ deploymentId, listener, Type })\n  }\n  /**\n   * Disonnect client from ZetaPush\n   */\n  disconnect() {\n    if (this.isConnected()) {\n      this.helper.disconnect()\n    }\n  }\n  /**\n   * Is client connected to ZetaPush\n   * @return {boolean}\n   */\n  isConnected() {\n    return this.helper.isConnected()\n  }\n  /**\n   * Get the client sandbox id\n   * @return {string}\n   */\n  getSandboxId() {\n    return this.helper.getSandboxId()\n  }\n  /**\n   * Get the client resource\n   * @return {string}\n   */\n  getResource() {\n    return this.helper.getResource()\n  }\n  /**\n   * Get server urls list\n   * @return {Promise} servers\n   */\n  getServers() {\n    return this.helper.getServers()\n  }\n  /**\n   * Get the client user id\n   * @return {string}\n   */\n  getUserId() {\n    return this.helper.getUserId()\n  }\n  /*\n   * Get the client user info\n   * @return {Object}\n   * @example\n   * // Create new ZetaPush Client\n   * const client = new Client({\n   *   sandboxId: '<YOUR-SANDBOX-ID>',\n   *   authentication: () => Authentication.simple({\n   *     login: '<YOUR-USER-LOGIN>',\n   *     password: '<YOUR-USER-PASSWORD>'\n   *   })\n   * })\n   * // Add connection establised listener\n   * client.onConnectionEstablished(() => {\n   *   console.log('onConnectionEstablished')\n   *   const profile = client.getUserInfo()\n   *   console.log('Your profile', profile)\n   * })\n   * client.connect()\n   */\n  getUserInfo() {\n    return this.helper.getUserInfo()\n  }\n  /**\n   * Remove a connection status listener\n   * @param {number} handler\n   */\n  removeConnectionStatusListener(handler) {\n    return this.helper.removeConnectionStatusListener(handler)\n  }\n  /**\n   * Set a new authentication methods\n   * @param {function():AbstractHandshake} authentication\n   */\n  setAuthentication(authentication) {\n    this.helper.setAuthentication(authentication)\n  }\n  /**\n   * Set logging level\n   * Valid values are the strings 'error', 'warn', 'info' and 'debug', from\n   * less verbose to more verbose.\n   * @param {string} level\n   */\n  setLogLevel(level) {\n    this.helper.setLogLevel(level)\n  }\n  /**\n   * Set new client resource value\n   * @param {string} resource\n   */\n  setResource(resource) {\n    this.helper.setResource(resource)\n  }\n  /**\n   * Remove all subscriptions\n   * @param {Object} service\n   */\n  unsubscribe(service) {\n    if (!service.$subscriptions) {\n      throw new TypeError('Missing $subscriptions property in service')\n    }\n    return this.helper.unsubscribe(service.$subscriptions)\n  }\n}\n\n/**\n * Add shorthand connection status method\n */\nObject.getOwnPropertyNames(ConnectionStatusListener.prototype).forEach((method) => {\n  // Only implements unsupported methods\n  if (!Client.prototype.hasOwnProperty(method)) {\n    Client.prototype[method] = function addListener(listener) {\n      return this.addConnectionStatusListener({\n        [method]: listener\n      })\n    }\n  }\n})\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/client/basic.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "typedef",
    "name": "ClientConfig",
    "memberof": "src/client/basic.js",
    "static": true,
    "longname": "src/client/basic.js~ClientConfig",
    "access": "public",
    "description": "Client config object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "apiUrl",
        "description": "Api Url"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sandboxId",
        "description": "Sandbox id"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "forceHttps",
        "description": "Force end to end HTTPS connection"
      },
      {
        "nullable": null,
        "types": [
          "function():AbstractHandshake"
        ],
        "spread": false,
        "optional": false,
        "name": "authentication",
        "description": "Return authentication properties"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resource",
        "description": "Client resource id"
      },
      {
        "nullable": null,
        "types": [
          "Transports"
        ],
        "spread": false,
        "optional": false,
        "name": "transports",
        "description": "Client transports implementation"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ClientConfig"
    }
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "Client",
    "memberof": "src/client/basic.js",
    "static": true,
    "longname": "src/client/basic.js~Client",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/client/basic.js",
    "importStyle": "{Client}",
    "description": "ZetaPush Client to connect",
    "examples": [
      "// Securized client with token based connection\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication() {\n    return ZetaPush.Authentication.weak({\n      token: null\n   })\n  }\n})",
      "// Client with authentication based connection\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication() {\n    return ZetaPush.Authentication.simple({\n      login: '<USER-LOGIN>',\n      password: '<USER-PASSWORD>'\n   })\n  }\n})",
      "// Explicit deploymentId\nconst clientSimple = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication() {\n    return ZetaPush.Authentication.simple({\n      deploymentId: '<YOUR-SIMPLE-AUTHENTICATION-DEPLOYMENT-ID>',\n      login: '<USER-LOGIN>',\n      password: '<USER-PASSWORD>'\n   })\n  }\n})\nconst clientWeak = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication() {\n    return ZetaPush.Authentication.weak({\n      deploymentId: '<YOUR-WEAK-AUTHENTICATION-DEPLOYMENT-ID>',\n      token: '<SESSION-TOKEN>'\n   })\n  }\n})"
    ],
    "lineNumber": 62,
    "interface": false
  },
  {
    "__docId__": 74,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#constructor",
    "access": "public",
    "description": "Create a new ZetaPush Client",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "ClientConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "helper",
    "memberof": "src/client/basic.js~Client",
    "static": false,
    "longname": "src/client/basic.js~Client#helper",
    "access": "private",
    "description": "",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "ClientHelper"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "addConnectionStatusListener",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#addConnectionStatusListener",
    "access": "public",
    "description": "Add a connection listener to handle life cycle connection events",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "ConnectionStatusListener"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "handler"
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "connect",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#connect",
    "access": "public",
    "description": "Safely connect client to ZetaPush",
    "lineNumber": 92,
    "params": [],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "createAsyncMacroService",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#createAsyncMacroService",
    "access": "public",
    "description": "Create a promise based service instance",
    "examples": [
      "const api = client.createAsyncMacroService({\n  Type: WelcomeMacro\n})\napi.welcome({\n  message: Hello'\n}).then(({ message }) => {\n  console.log(message)\n})"
    ],
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "{listener: Object, Type: class, deploymentId: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "service"
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "createService",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#createService",
    "access": "public",
    "description": "Create a publish/subscribe for a service type",
    "examples": [
      "const service = client.createService({\n  listener: {\n    list(message) {\n      console.log('Stack list callback', message)\n    },\n    push(message) {\n      console.log('Stack push callback', message)\n    }\n  },\n  Type: ZetaPush.services.Stack\n})\nservice.list({\n  stack: '<STACK-ID>'\n})",
      "// Explicit deploymentId\n// Authentication provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\nconst service = client.createService({\n  deploymentId: 'stack_0'\n  listener: {\n    list(message) {\n      console.log('Stack list callback', message)\n    },\n    push(message) {\n      console.log('Stack push callback', message)\n    }\n  },\n  Type: ZetaPush.services.Stack\n})\nservice.list({\n  stack: '<STACK-ID>'\n})"
    ],
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "{listener: Object, Type: class, deploymentId: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "service"
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#disconnect",
    "access": "public",
    "description": "Disonnect client from ZetaPush",
    "lineNumber": 166,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "isConnected",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#isConnected",
    "access": "public",
    "description": "Is client connected to ZetaPush",
    "lineNumber": 175,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "getSandboxId",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#getSandboxId",
    "access": "public",
    "description": "Get the client sandbox id",
    "lineNumber": 182,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "getResource",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#getResource",
    "access": "public",
    "description": "Get the client resource",
    "lineNumber": 189,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "getServers",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#getServers",
    "access": "public",
    "description": "Get server urls list",
    "lineNumber": 196,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "servers"
    },
    "params": []
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "getUserId",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#getUserId",
    "access": "public",
    "description": "Get the client user id",
    "lineNumber": 203,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "getUserInfo",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#getUserInfo",
    "access": "public",
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "removeConnectionStatusListener",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#removeConnectionStatusListener",
    "access": "public",
    "description": "Remove a connection status listener",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "setAuthentication",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#setAuthentication",
    "access": "public",
    "description": "Set a new authentication methods",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "function():AbstractHandshake"
        ],
        "spread": false,
        "optional": false,
        "name": "authentication",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "setLogLevel",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#setLogLevel",
    "access": "public",
    "description": "Set logging level\nValid values are the strings 'error', 'warn', 'info' and 'debug', from\nless verbose to more verbose.",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "setResource",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#setResource",
    "access": "public",
    "description": "Set new client resource value",
    "lineNumber": 256,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resource",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "src/client/basic.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/basic.js~Client#unsubscribe",
    "access": "public",
    "description": "Remove all subscriptions",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "service",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/client/helper.js",
    "content": "import { CometD, Transports } from 'zetapush-cometd'\nimport { ConnectionStatusListener } from '../connection/connection-status'\nimport { Macro } from '../mapping/services'\nimport { getServers, isDerivedOf, shuffle, uuid } from '../utils/index'\n\n/**\n * CometD Messages enumeration\n * @type {Object}\n */\nconst Message = {\n  RECONNECT_HANDSHAKE_VALUE: 'handshake',\n  RECONNECT_NONE_VALUE: 'none',\n  RECONNECT_RETRY_VALUE: 'retry'\n}\n\n/**\n * Delay to update server url\n * @type {integer}\n */\nconst UPDATE_SERVER_URL_DELAY = 250\n\n/**\n * Default macro channel\n * @type {string}\n */\nconst DEFAULT_MACRO_CHANNEL = 'completed'\n\n/**\n * Provide utilities and abstraction on CometD Transport layer\n * @access private\n */\nexport class ClientHelper {\n  /**\n   * Create a new ZetaPush client helper\n   */\n  constructor({ apiUrl, sandboxId, forceHttps = false, authentication, resource = null, transports = Transports }) {\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.sandboxId = sandboxId\n    /**\n     * @access private\n     * @type {function():AbstractHandshake}\n     */\n    this.authentication = authentication\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.resource = resource\n    /**\n     * @access private\n     * @type {number}\n     */\n    this.requestId = 0\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.userId = null\n    /**\n     * @access private\n     * @type {Object}\n     */\n    this.userInfo = null\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.uniqId = uuid()\n    /**\n     * @access private\n     * @type {Promise}\n     */\n    this.servers = getServers({ apiUrl, sandboxId, forceHttps, transports }).catch((error) => {\n      // Notify error in connection to server step\n      this.connectionToServerFail(error)\n      // Return empty list\n      return []\n    })\n    /**\n     * @access private\n     * @type {Array<Object>}\n     */\n    this.connectionListeners = []\n    /**\n     * @access private\n     * @type {boolean}\n     */\n    this.connected = false\n    /**\n     * @access private\n     * @type {boolean}\n     */\n    this.wasConnected = false\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.serverUrl = null\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.sessionId = null\n    /**\n     * @access private\n     * @type {Array<Object>}\n     */\n    this.subscribeQueue = []\n    /**\n     * @access private\n     * @type {CometD}\n     */\n    this.cometd = new CometD()\n\n    // Register transports layers\n    transports.ALL.forEach(({ type, Transport }) => {\n      this.cometd.registerTransport(type, new Transport())\n    })\n\n    // Handle transport exception\n    this.cometd.onTransportException = (cometd, transport) => {\n      // Try to find an other available server\n      // Remove the current one from the _serverList array\n      this.updateServerUrl()\n    }\n\n    this.cometd.addListener('/meta/handshake', ({ ext, successful, advice, error }) => {\n      this.cometd._debug('ClientHelper::/meta/handshake', { ext, successful, advice, error })\n      if (successful) {\n        const { authentication = null } = ext\n        this.initialized(authentication)\n      } else {\n        this.handshakeFailure(error)\n      }\n    })\n\n    this.cometd.addListener('/meta/handshake', ({ advice, error, ext, successful }) => {\n      this.cometd._debug('ClientHelper::/meta/handshake', { ext, successful, advice, error })\n      // AuthNegotiation\n      if (!successful) {\n        if (typeof advice === 'undefined') {\n          return\n        }\n        if (Message.RECONNECT_NONE_VALUE === advice.reconnect) {\n          this.authenticationFailed(error)\n        } else if (Message.RECONNECT_HANDSHAKE_VALUE === advice.reconnect) {\n          this.negotiationFailed(error)\n        }\n      }\n    })\n\n    this.cometd.addListener('/meta/connect', ({ advice, channel, successful }) => {\n      this.cometd._debug('ClientHelper::/meta/connect', { advice, channel, successful })\n      // ConnectionListener\n      if (this.cometd.isDisconnected()) {\n        this.connected = false\n        // Notify connection will close\n        this.connectionWillClose()\n      } else {\n        this.wasConnected = this.connected\n        this.connected = successful\n        if (!this.wasConnected && this.connected) {\n          this.cometd.batch(this, () => {\n            // Unqueue subscriptions\n            this.subscribeQueue.forEach(({ prefix, listener, subscriptions }) => {\n              this.subscribe(prefix, listener, subscriptions)\n            })\n          })\n          // Notify connection is established\n          this.connectionEstablished()\n        } else if (this.wasConnected && !this.connected) {\n          // Notify connection is broken\n          this.connectionBroken()\n        }\n      }\n    })\n\n    this.cometd.addListener('/meta/disconnect', ({ channel, successful }) => {\n      this.cometd._debug('ClientHelper::/meta/disconnect', { channel, successful })\n      if (this.cometd.isDisconnected()) {\n        this.connected = false\n        // Notify connection is closed\n        this.connectionClosed()\n      }\n    })\n  }\n  /**\n   * Add a connection listener to handle life cycle connection events\n   * @param {ConnectionStatusListener} listener\n   * @return {number} handler\n   */\n  addConnectionStatusListener(listener) {\n    this.connectionListeners.push({\n      enabled: true,\n      listener: Object.assign(new ConnectionStatusListener(), listener)\n    })\n    return this.connectionListeners.length - 1\n  }\n  /**\n   * Notify listeners when handshake step succeed\n   */\n  authenticationFailed(error) {\n    this.userId = null\n    this.userInfo = null\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onFailedHandshake(error)\n      })\n  }\n  /**\n   * Connect client using CometD Transport\n   */\n  connect() {\n    this.servers.then((servers) => {\n      if (servers.length > 0) {\n        // Get a random server url\n        this.serverUrl = shuffle(servers)\n        // Configure CometD\n        this.cometd.configure({\n          url: `${this.serverUrl}/strd`,\n          backoffIncrement: 1000,\n          maxBackoff: 60000,\n          appendMessageTypeToURL: false\n        })\n        // Send handshake fields\n        this.cometd.handshake(this.getHandshakeFields())\n      } else {\n        // No servers available\n        this.noServerUrlAvailable()\n      }\n    })\n  }\n  /**\n   * Notify listeners when connection is broken\n   */\n  connectionBroken() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionBroken()\n      })\n  }\n  /**\n   * Notify listeners when connection is closed\n   */\n  connectionClosed() {\n    this.userId = null\n    this.userInfo = null\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionClosed()\n      })\n  }\n  /**\n   * Notify listeners when connection is established\n   */\n  connectionEstablished() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionEstablished()\n      })\n  }\n  /**\n   * Notify listeners when connection to server fail\n   */\n  connectionToServerFail(failure) {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionToServerFail(failure)\n      })\n  }\n  /**\n   * Notify listeners when connection will close\n   */\n  connectionWillClose() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onConnectionWillClose()\n      })\n  }\n  /**\n   * Create a promise based macro service\n   * @experimental\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   */\n  createAsyncMacroService({ listener, Type, deploymentId = Type.DEFAULT_DEPLOYMENT_ID }) {\n    const prefix = `/service/${this.getSandboxId()}/${deploymentId}`\n    const $publish = this.getAsyncMacroPublisher(prefix)\n    // Create service by publisher\n    return this.createServiceByPublisher({ listener, prefix, Type, $publish })\n  }\n  /**\n   * Create a publish/subscribe service\n   * @param {{listener: Object, Type: class, deploymentId: string}} parameters\n   * @return {Object} service\n   */\n  createService({ listener, Type, deploymentId = Type.DEFAULT_DEPLOYMENT_ID }) {\n    const isMacroType = isDerivedOf(Type, Macro)\n    const prefix = `/service/${this.getSandboxId()}/${deploymentId}`\n    const $publish = isMacroType ? this.getMacroPublisher(prefix) : this.getServicePublisher(prefix)\n    // Create service by publisher\n    return this.createServiceByPublisher({ listener, prefix, Type, $publish })\n  }\n  /**\n   * @param {{listener: Object, prefix: string, Type: class, $publish: Function}} parameters\n   * @return {Object} service\n   */\n  createServiceByPublisher({ listener, prefix, Type, $publish }) {\n    const service = new Type({ $publish })\n    // Store subscription in service instance\n    service.$subscriptions = this.subscribe(prefix, listener)\n    return service\n  }\n  /**\n   * Disconnect CometD client\n   */\n  disconnect() {\n    this.cometd.disconnect(true)\n  }\n  /**\n   * Get a publisher for a macro service that return a promise\n   * @experimental\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getAsyncMacroPublisher(prefix) {\n    return (name, parameters, hardFail = false, debug = 1) => {\n      const channel = `${prefix}/call`\n      const uniqRequestId = this.getUniqRequestId()\n      const subscriptions = {}\n      return new Promise((resolve, reject) => {\n        const handler = ({ data = {} }) => {\n          const { result = {}, errors = [], requestId } = data\n          if (requestId === uniqRequestId) {\n            // Handle errors\n            if (errors.length > 0) {\n              reject(errors)\n            } else {\n              resolve(result)\n            }\n            this.unsubscribe(subscriptions)\n          }\n        }\n        // Create dynamic listener method\n        const listener = {\n          [name]: handler,\n          [DEFAULT_MACRO_CHANNEL]: handler\n        }\n        // Ad-Hoc subscription\n        this.subscribe(prefix, listener, subscriptions)\n        // Publish message on channel\n        this.publish(channel, {\n          debug,\n          hardFail,\n          name,\n          parameters,\n          requestId: uniqRequestId\n        })\n      })\n    }\n  }\n  /**\n   * Get client id\n   * @return {string} clientId\n   */\n  getClientId() {\n    return this.cometd.getClientId()\n  }\n  /**\n   * Get CometD handshake parameters\n   * @return {Object}\n   */\n  getHandshakeFields() {\n    const handshake = this.authentication()\n    return handshake.getHandshakeFields(this)\n  }\n  /**\n   * Get a publisher for a macro service\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getMacroPublisher(prefix) {\n    return (name, parameters, hardFail = false, debug = 1) => {\n      const channel = `${prefix}/call`\n      const requestId = this.getUniqRequestId()\n      return this.publish(channel, {\n        debug,\n        hardFail,\n        name,\n        parameters,\n        requestId\n      })\n    }\n  }\n  /**\n   * Get queued subscription index\n   * @return {Object} index\n   */\n  getQueuedSubscription(subscriptions = {}) {\n    const index = this.subscribeQueue.findIndex((element) => subscriptions === element.subscriptions)\n    return {\n      index,\n      queued: index > -1\n    }\n  }\n  /**\n   * Get resource\n   * @return {string}\n   */\n  getResource() {\n    return this.resource\n  }\n  /**\n   * Get sandbox id\n   * @return {string}\n   */\n  getSandboxId() {\n    return this.sandboxId\n  }\n  /**\n   * Get server urls list\n   * @return {Promise} servers\n   */\n  getServers() {\n    return this.servers\n  }\n  /**\n   * Get a publisher for a service\n   * @param {string} prefix - Channel prefix\n   * @return {Function} publisher\n   */\n  getServicePublisher(prefix) {\n    return (method, parameters) => {\n      const channel = `${prefix}/${method}`\n      return this.publish(channel, parameters)\n    }\n  }\n  /**\n   * Get uniq request id\n   * @return {string}\n   */\n  getUniqRequestId() {\n    return `${this.getClientId()}:${this.uniqId}:${++this.requestId}`\n  }\n  /**\n   * Get user id\n   * @return {string}\n   */\n  getUserId() {\n    return this.userId\n  }\n  /**\n   * Get user info\n   * @return {Objet}\n   */\n  getUserInfo() {\n    return this.userInfo\n  }\n  /**\n   * Manage handshake failure case\n   */\n  handshakeFailure() {\n    this.userId = null\n    this.userInfo = null\n  }\n  /**\n   * Notify listeners when connection is established\n   */\n  initialized(authentication) {\n    if (authentication) {\n      this.userId = authentication.userId\n      this.userInfo = authentication.userInfo\n    }\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onSuccessfulHandshake(authentication)\n      })\n  }\n  /**\n   * Is client connected to ZetaPush\n   * @return {boolean}\n   */\n  isConnected() {\n    return !this.cometd.isDisconnected()\n  }\n  /**\n   * Notify listeners when a message is lost\n   */\n  messageLost(channel, data) {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onMessageLost(channel, data)\n      })\n  }\n  /**\n   * Negociate authentication\n   * @param {error} error\n   */\n  negotiationFailed(error) {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onNegotiationFailed(error)\n      })\n  }\n  /**\n   * Notify listeners when no server url available\n   */\n  noServerUrlAvailable() {\n    this.connectionListeners\n      .filter(({ enabled }) => enabled)\n      .forEach(({ listener }) => {\n        listener.onNoServerUrlAvailable()\n      })\n  }\n  /**\n   * Wrap CometdD publish method\n   * @param {String} channel\n   * @param {Object} parameters\n   * @return {Object}\n   */\n  publish(channel, parameters = {}) {\n    this.cometd.publish(channel, parameters)\n    return { channel, parameters }\n  }\n  /**\n   * Remove a connection status listener\n   */\n  removeConnectionStatusListener(handler) {\n    const listener = this.connectionListeners[handler]\n    if (listener) {\n      listener.enabled = false\n    }\n  }\n  /**\n   * Set a new authentication methods\n   * @param {function():AbstractHandshake} authentication\n   */\n  setAuthentication(authentication) {\n    this.authentication = authentication\n  }\n  /**\n   * Set logging level for CometD client\n   * Valid values are the strings 'error', 'warn', 'info' and 'debug', from\n   * less verbose to more verbose.\n   * @param {string} level\n   */\n  setLogLevel(level) {\n    this.cometd.setLogLevel(level)\n  }\n  /**\n   * Subsribe all methods defined in the listener for the given prefixed channel\n   * @param {string} prefix - Channel prefix\n   * @param {Object} listener\n   * @param {Object} subscriptions\n   * @return {Object} subscriptions\n   */\n  subscribe(prefix, listener = {}, subscriptions = {}) {\n    const { queued } = this.getQueuedSubscription(subscriptions)\n    if (!queued) {\n      // Store arguments to renew subscriptions on connection\n      this.subscribeQueue.push({ prefix, listener, subscriptions })\n    }\n    // Subscribe if user is connected\n    if (!this.cometd.isDisconnected()) {\n      for (let method in listener) {\n        if (listener.hasOwnProperty(method)) {\n          const channel = `${prefix}/${method}`\n          subscriptions[method] = this.cometd.subscribe(channel, listener[method])\n        }\n      }\n    }\n    return subscriptions\n  }\n  /**\n  * Remove current server url from the server list and shuffle for another one\n  */\n  updateServerUrl() {\n    this.servers.then((servers) => {\n      const index = servers.indexOf(this.serverUrl)\n      if (index > -1) {\n        servers.splice(index, 1)\n      }\n      if (servers.length === 0) {\n        // No more server available\n        this.noServerUrlAvailable()\n      } else {\n        this.serverUrl = shuffle(servers)\n        this.cometd.configure({\n          url: `${this.serverUrl}/strd`\n        })\n        setTimeout(() => {\n          this.cometd.handshake(this.getHandshakeFields())\n        }, UPDATE_SERVER_URL_DELAY)\n      }\n    })\n  }\n  /**\n   * Remove all subscriptions\n   * @param {Object} subscriptions\n   */\n  unsubscribe(subscriptions = {}) {\n    // Unsubscribe\n    for (let method in subscriptions) {\n      if (subscriptions.hasOwnProperty(method)) {\n        const subscription = subscriptions[method]\n        this.cometd.unsubscribe(subscription)\n      }\n    }\n    // Remove subscription from queue\n    const { index, queued } = this.getQueuedSubscription(subscriptions)\n    if (queued) {\n      this.subscribeQueue.splice(index, 1)\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/client/helper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "Message",
    "memberof": "src/client/helper.js",
    "static": true,
    "longname": "src/client/helper.js~Message",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/client/helper.js",
    "importStyle": null,
    "description": "CometD Messages enumeration",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "UPDATE_SERVER_URL_DELAY",
    "memberof": "src/client/helper.js",
    "static": true,
    "longname": "src/client/helper.js~UPDATE_SERVER_URL_DELAY",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/client/helper.js",
    "importStyle": null,
    "description": "Delay to update server url",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "DEFAULT_MACRO_CHANNEL",
    "memberof": "src/client/helper.js",
    "static": true,
    "longname": "src/client/helper.js~DEFAULT_MACRO_CHANNEL",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/client/helper.js",
    "importStyle": null,
    "description": "Default macro channel",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "class",
    "name": "ClientHelper",
    "memberof": "src/client/helper.js",
    "static": true,
    "longname": "src/client/helper.js~ClientHelper",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/client/helper.js",
    "importStyle": "{ClientHelper}",
    "description": "Provide utilities and abstraction on CometD Transport layer",
    "lineNumber": 32,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#constructor",
    "access": "public",
    "description": "Create a new ZetaPush client helper",
    "lineNumber": 36
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "sandboxId",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#sandboxId",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "authentication",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#authentication",
    "access": "private",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "function():AbstractHandshake"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "resource",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#resource",
    "access": "private",
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "requestId",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#requestId",
    "access": "private",
    "description": "",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "userId",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#userId",
    "access": "private",
    "description": "",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "userInfo",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#userInfo",
    "access": "private",
    "description": "",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "uniqId",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#uniqId",
    "access": "private",
    "description": "",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "servers",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#servers",
    "access": "private",
    "description": "",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "connectionListeners",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connectionListeners",
    "access": "private",
    "description": "",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "connected",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connected",
    "access": "private",
    "description": "",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "wasConnected",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#wasConnected",
    "access": "private",
    "description": "",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "serverUrl",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#serverUrl",
    "access": "private",
    "description": "",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "sessionId",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#sessionId",
    "access": "private",
    "description": "",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "subscribeQueue",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#subscribeQueue",
    "access": "private",
    "description": "",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "cometd",
    "memberof": "src/client/helper.js~ClientHelper",
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#cometd",
    "access": "private",
    "description": "",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "CometD"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "addConnectionStatusListener",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#addConnectionStatusListener",
    "access": "public",
    "description": "Add a connection listener to handle life cycle connection events",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "ConnectionStatusListener"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "handler"
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "authenticationFailed",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#authenticationFailed",
    "access": "public",
    "description": "Notify listeners when handshake step succeed",
    "lineNumber": 205,
    "params": [
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "connect",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connect",
    "access": "public",
    "description": "Connect client using CometD Transport",
    "lineNumber": 217,
    "params": [],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "connectionBroken",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connectionBroken",
    "access": "public",
    "description": "Notify listeners when connection is broken",
    "lineNumber": 240,
    "params": [],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "connectionClosed",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connectionClosed",
    "access": "public",
    "description": "Notify listeners when connection is closed",
    "lineNumber": 250,
    "params": [],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "connectionEstablished",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connectionEstablished",
    "access": "public",
    "description": "Notify listeners when connection is established",
    "lineNumber": 262,
    "params": [],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "connectionToServerFail",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connectionToServerFail",
    "access": "public",
    "description": "Notify listeners when connection to server fail",
    "lineNumber": 272,
    "params": [
      {
        "name": "failure",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "connectionWillClose",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#connectionWillClose",
    "access": "public",
    "description": "Notify listeners when connection will close",
    "lineNumber": 282,
    "params": [],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "createAsyncMacroService",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#createAsyncMacroService",
    "access": "public",
    "description": "Create a promise based macro service",
    "lineNumber": 295,
    "experimental": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "{listener: Object, Type: class, deploymentId: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "service"
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "createService",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#createService",
    "access": "public",
    "description": "Create a publish/subscribe service",
    "lineNumber": 306,
    "params": [
      {
        "nullable": null,
        "types": [
          "{listener: Object, Type: class, deploymentId: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "service"
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "createServiceByPublisher",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#createServiceByPublisher",
    "access": "public",
    "description": "",
    "lineNumber": 317,
    "params": [
      {
        "nullable": null,
        "types": [
          "{listener: Object, prefix: string, Type: class, $publish: Function}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "service"
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#disconnect",
    "access": "public",
    "description": "Disconnect CometD client",
    "lineNumber": 326,
    "params": [],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "getAsyncMacroPublisher",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getAsyncMacroPublisher",
    "access": "public",
    "description": "Get a publisher for a macro service that return a promise",
    "lineNumber": 335,
    "experimental": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": "Channel prefix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "publisher"
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "getClientId",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getClientId",
    "access": "public",
    "description": "Get client id",
    "lineNumber": 375,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "clientId"
    },
    "params": []
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "getHandshakeFields",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getHandshakeFields",
    "access": "public",
    "description": "Get CometD handshake parameters",
    "lineNumber": 382,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "getMacroPublisher",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getMacroPublisher",
    "access": "public",
    "description": "Get a publisher for a macro service",
    "lineNumber": 391,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": "Channel prefix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "publisher"
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "getQueuedSubscription",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getQueuedSubscription",
    "access": "public",
    "description": "Get queued subscription index",
    "lineNumber": 408,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "index"
    },
    "params": [
      {
        "name": "subscriptions",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "getResource",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getResource",
    "access": "public",
    "description": "Get resource",
    "lineNumber": 419,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "getSandboxId",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getSandboxId",
    "access": "public",
    "description": "Get sandbox id",
    "lineNumber": 426,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "getServers",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getServers",
    "access": "public",
    "description": "Get server urls list",
    "lineNumber": 433,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "servers"
    },
    "params": []
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "getServicePublisher",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getServicePublisher",
    "access": "public",
    "description": "Get a publisher for a service",
    "lineNumber": 441,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": "Channel prefix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "publisher"
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "getUniqRequestId",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getUniqRequestId",
    "access": "public",
    "description": "Get uniq request id",
    "lineNumber": 451,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "getUserId",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getUserId",
    "access": "public",
    "description": "Get user id",
    "lineNumber": 458,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "getUserInfo",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#getUserInfo",
    "access": "public",
    "description": "Get user info",
    "lineNumber": 465,
    "return": {
      "nullable": null,
      "types": [
        "Objet"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "handshakeFailure",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#handshakeFailure",
    "access": "public",
    "description": "Manage handshake failure case",
    "lineNumber": 471,
    "params": [],
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "initialized",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#initialized",
    "access": "public",
    "description": "Notify listeners when connection is established",
    "lineNumber": 478,
    "params": [
      {
        "name": "authentication",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "isConnected",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#isConnected",
    "access": "public",
    "description": "Is client connected to ZetaPush",
    "lineNumber": 493,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "messageLost",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#messageLost",
    "access": "public",
    "description": "Notify listeners when a message is lost",
    "lineNumber": 499,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "negotiationFailed",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#negotiationFailed",
    "access": "public",
    "description": "Negociate authentication",
    "lineNumber": 510,
    "params": [
      {
        "nullable": null,
        "types": [
          "error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "noServerUrlAvailable",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#noServerUrlAvailable",
    "access": "public",
    "description": "Notify listeners when no server url available",
    "lineNumber": 520,
    "params": [],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "publish",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#publish",
    "access": "public",
    "description": "Wrap CometdD publish method",
    "lineNumber": 533,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "removeConnectionStatusListener",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#removeConnectionStatusListener",
    "access": "public",
    "description": "Remove a connection status listener",
    "lineNumber": 540,
    "params": [
      {
        "name": "handler",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "setAuthentication",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#setAuthentication",
    "access": "public",
    "description": "Set a new authentication methods",
    "lineNumber": 550,
    "params": [
      {
        "nullable": null,
        "types": [
          "function():AbstractHandshake"
        ],
        "spread": false,
        "optional": false,
        "name": "authentication",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "setLogLevel",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#setLogLevel",
    "access": "public",
    "description": "Set logging level for CometD client\nValid values are the strings 'error', 'warn', 'info' and 'debug', from\nless verbose to more verbose.",
    "lineNumber": 559,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#subscribe",
    "access": "public",
    "description": "Subsribe all methods defined in the listener for the given prefixed channel",
    "lineNumber": 569,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prefix",
        "description": "Channel prefix"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "subscriptions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "subscriptions"
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "updateServerUrl",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#updateServerUrl",
    "access": "public",
    "description": "Remove current server url from the server list and shuffle for another one",
    "lineNumber": 589,
    "params": [],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "src/client/helper.js~ClientHelper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/helper.js~ClientHelper#unsubscribe",
    "access": "public",
    "description": "Remove all subscriptions",
    "lineNumber": 613,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "subscriptions",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/client/smart.js",
    "content": "import { Client } from './basic'\nimport { Authentication } from '../authentication/handshake'\nimport { SessionPersistenceStrategy } from '../utils/session-persistence'\n\n/**\n * SmartClient deployment infos.\n * @typedef {Object} SmartClientDeployment\n * @property {string} simple - Simple deployment id\n * @property {string} weak - Weak deployment id\n */\n\n/**\n * SmartClient config object.\n * @typedef {Object} SmartClientConfig\n * @property {string} apiUrl - Api Url\n * @property {SmartClientDeployment} deployment - Deployment infos\n * @property {string} sandboxId - Sandbox id\n * @property {boolean} forceHttps - Force end to end HTTPS connection\n * @property {string} resource - Client resource id\n * @property {Array} transports - Client transports list\n */\n\n/**\n * @access public\n * @extends {Client}\n * @example\n * // Create a new WeakClient\n * const client = new ZetaPush.SmartClient({\n *   sandboxId: '<YOUR-SANDBOX-ID>'\n * })\n */\nexport class SmartClient extends Client {\n  /**\n   * Create a new ZetaPush SmartClient\n   * @param {SmartClientConfig} config\n   */\n  constructor({ apiUrl, deployment, sandboxId, forceHttps, resource, transports }) {\n    const persistence = new SessionPersistenceStrategy({ sandboxId })\n\n    /**\n     * @return {AbstractHandshakeManager}\n     */\n    const authentication = () => {\n      const session = persistence.get()\n      const { token } = session\n\n      if (this.hasCredentials()) {\n        const { login, password } = this.getCredentials()\n        this.setCredentials({})\n        return Authentication.simple({\n          login,\n          password,\n          deploymentId: deployment && deployment.simple\n        })\n      } else {\n        if (this.isStronglyAuthenticated(session)) {\n          return Authentication.simple({\n            login: token,\n            password: null,\n            deploymentId: deployment && deployment.simple\n          })\n        } else {\n          return Authentication.weak({\n            token,\n            deploymentId: deployment && deployment.weak\n          })\n        }\n      }\n    }\n    // Initialize base client\n    super({\n      apiUrl, sandboxId, authentication, forceHttps, resource, transports\n    })\n    /**\n     * @access protected\n     * @type {SessionPersistenceStrategy}\n     */\n    this.persistence = persistence\n    /**\n     * @access protected\n     * @type {Object}\n     */\n    this.credentials = {}\n    /**\n     * Handle connection lifecycle events\n     * @access protected\n     * @type {Object}\n     */\n    this.lifeCycleConnectionHandler = this.addConnectionStatusListener({\n      onConnectionClosed() {\n        persistence.set({})\n      },\n      onSuccessfulHandshake(session) {\n        if (session.token) {\n          persistence.set(session)\n        }\n      }\n    })\n    // Properly disconnect client to avoir ghost connections\n    /*\n    window.addEventListener('beforeunload', () => {\n      this.removeConnectionStatusListener(this.lifeCycleConnectionHandler)\n      super.disconnect()\n    })\n    */\n  }\n  /**\n   * Disconnect client from ZetaPush backend\n   */\n  disconnect() {\n    super.disconnect()\n  }\n  /**\n   * @return {Object}\n   */\n  getCredentials() {\n    return this.credentials\n  }\n  /**\n   * @return {Object}\n   */\n  getSession() {\n    return this.persistence.get()\n  }\n  /**\n   * @return {boolean}\n   */\n  hasCredentials() {\n    const { login, password } = this.getCredentials()\n    return login && password\n  }\n  /**\n   * @return {boolean}\n   */\n  isStronglyAuthenticated(session = this.persistence.get()) {\n    return !this.isWeaklyAuthenticated(session) && typeof session.token === 'string'\n  }\n  /**\n   * @return {boolean}\n   */\n  isWeaklyAuthenticated(session = this.persistence.get()) {\n    return typeof session.publicToken === 'string'\n  }\n  /**\n   * @param {{login: string, password: string}} parameters\n   */\n  setCredentials({ login, password }) {\n    this.credentials = { login, password }\n  }\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/client/smart.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "typedef",
    "name": "SmartClientDeployment",
    "memberof": "src/client/smart.js",
    "static": true,
    "longname": "src/client/smart.js~SmartClientDeployment",
    "access": "public",
    "description": "SmartClient deployment infos.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "simple",
        "description": "Simple deployment id"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "weak",
        "description": "Weak deployment id"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SmartClientDeployment"
    }
  },
  {
    "__docId__": 167,
    "kind": "typedef",
    "name": "SmartClientConfig",
    "memberof": "src/client/smart.js",
    "static": true,
    "longname": "src/client/smart.js~SmartClientConfig",
    "access": "public",
    "description": "SmartClient config object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "apiUrl",
        "description": "Api Url"
      },
      {
        "nullable": null,
        "types": [
          "SmartClientDeployment"
        ],
        "spread": false,
        "optional": false,
        "name": "deployment",
        "description": "Deployment infos"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sandboxId",
        "description": "Sandbox id"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "forceHttps",
        "description": "Force end to end HTTPS connection"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resource",
        "description": "Client resource id"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "transports",
        "description": "Client transports list"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SmartClientConfig"
    }
  },
  {
    "__docId__": 168,
    "kind": "class",
    "name": "SmartClient",
    "memberof": "src/client/smart.js",
    "static": true,
    "longname": "src/client/smart.js~SmartClient",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/client/smart.js",
    "importStyle": "{SmartClient}",
    "description": "",
    "examples": [
      "// Create a new WeakClient\nconst client = new ZetaPush.SmartClient({\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})"
    ],
    "lineNumber": 32,
    "interface": false,
    "extends": [
      "Client"
    ]
  },
  {
    "__docId__": 169,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#constructor",
    "access": "public",
    "description": "Create a new ZetaPush SmartClient",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "SmartClientConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "persistence",
    "memberof": "src/client/smart.js~SmartClient",
    "static": false,
    "longname": "src/client/smart.js~SmartClient#persistence",
    "access": "protected",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "SessionPersistenceStrategy"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "credentials",
    "memberof": "src/client/smart.js~SmartClient",
    "static": false,
    "longname": "src/client/smart.js~SmartClient#credentials",
    "access": "protected",
    "description": "",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "lifeCycleConnectionHandler",
    "memberof": "src/client/smart.js~SmartClient",
    "static": false,
    "longname": "src/client/smart.js~SmartClient#lifeCycleConnectionHandler",
    "access": "protected",
    "description": "Handle connection lifecycle events",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#disconnect",
    "access": "public",
    "description": "Disconnect client from ZetaPush backend",
    "lineNumber": 110,
    "params": [],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "getCredentials",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#getCredentials",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "getSession",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#getSession",
    "access": "public",
    "description": "",
    "lineNumber": 122,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "hasCredentials",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#hasCredentials",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "isStronglyAuthenticated",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#isStronglyAuthenticated",
    "access": "public",
    "description": "",
    "lineNumber": 135,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "session",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "isWeaklyAuthenticated",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#isWeaklyAuthenticated",
    "access": "public",
    "description": "",
    "lineNumber": 141,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "session",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "setCredentials",
    "memberof": "src/client/smart.js~SmartClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/smart.js~SmartClient#setCredentials",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "{login: string, password: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "src/client/weak.js",
    "content": "import { Client } from './basic'\nimport { Authentication } from '../authentication/handshake'\nimport { SessionPersistenceStrategy } from '../utils/session-persistence'\n\n/**\n * WeakClient config object.\n * @typedef {Object} WeakClientConfig\n * @property {string} apiUrl - Api Url\n * @property {string} deploymentId - Authentication deployment id, default value is 'weak_0'\n * @property {string} sandboxId - Sandbox id\n * @property {boolean} forceHttps - Force end to end HTTPS connection\n * @property {string} resource - Client resource id\n * @property {Array} transports - Client transports list\n */\n\n/**\n * @access public\n * @extends {Client}\n * @example\n * // Create a new WeakClient\n * const client = new ZetaPush.WeakClient({\n *   sandboxId: '<YOUR-SANDBOX-ID>'\n * })\n * @example\n * // Explicit deploymentId\n * // WeakClient provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n * // deploymentId default value is weak_0\n * const client = new ZetaPush.WeakClient({\n *   deploymentId: 'weak_0',\n *   sandboxId: '<YOUR-SANDBOX-ID>'\n * })\n */\nexport class WeakClient extends Client {\n  /**\n   * Create a new ZetaPush WeakClient\n   * @param {WeakClientConfig} config\n   */\n  constructor({ apiUrl, sandboxId, deploymentId, forceHttps, resource, transports }) {\n    const authentication = () => {\n      const token = this.getToken()\n      const handshake = Authentication.weak({\n        deploymentId,\n        token\n      })\n      return handshake\n    }\n    /**\n     * Call Client constructor with specific parameters\n     */\n    super({ apiUrl, sandboxId, forceHttps, authentication, resource, transports })\n    // Handle successful handshake\n    const onSuccessfulHandshake = ({ publicToken, userId, token }) => {\n      if (token) {\n        this.strategy.set({ publicToken, userId, token })\n      }\n    }\n    this.addConnectionStatusListener({ onSuccessfulHandshake })\n    /**\n     * @access private\n     * @type {SessionPersistenceStrategy}\n     */\n    this.strategy = new SessionPersistenceStrategy({ sandboxId })\n  }\n  /**\n   * @return {string} The stored token\n   */\n  getToken() {\n    const { token } = this.strategy.get()\n    return token\n  }\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/client/weak.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "typedef",
    "name": "WeakClientConfig",
    "memberof": "src/client/weak.js",
    "static": true,
    "longname": "src/client/weak.js~WeakClientConfig",
    "access": "public",
    "description": "WeakClient config object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "apiUrl",
        "description": "Api Url"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "deploymentId",
        "description": "Authentication deployment id, default value is 'weak_0'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sandboxId",
        "description": "Sandbox id"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "forceHttps",
        "description": "Force end to end HTTPS connection"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "resource",
        "description": "Client resource id"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "transports",
        "description": "Client transports list"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "WeakClientConfig"
    }
  },
  {
    "__docId__": 183,
    "kind": "class",
    "name": "WeakClient",
    "memberof": "src/client/weak.js",
    "static": true,
    "longname": "src/client/weak.js~WeakClient",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/client/weak.js",
    "importStyle": "{WeakClient}",
    "description": "",
    "examples": [
      "// Create a new WeakClient\nconst client = new ZetaPush.WeakClient({\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})",
      "// Explicit deploymentId\n// WeakClient provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n// deploymentId default value is weak_0\nconst client = new ZetaPush.WeakClient({\n  deploymentId: 'weak_0',\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})"
    ],
    "lineNumber": 33,
    "interface": false,
    "extends": [
      "Client"
    ]
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/client/weak.js~WeakClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/weak.js~WeakClient#constructor",
    "access": "public",
    "description": "Create a new ZetaPush WeakClient",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "WeakClientConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "strategy",
    "memberof": "src/client/weak.js~WeakClient",
    "static": false,
    "longname": "src/client/weak.js~WeakClient#strategy",
    "access": "private",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "SessionPersistenceStrategy"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "getToken",
    "memberof": "src/client/weak.js~WeakClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/client/weak.js~WeakClient#getToken",
    "access": "public",
    "description": "",
    "lineNumber": 67,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The stored token"
    },
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/connection/connection-status.js",
    "content": "/**\n * Define life cycle connection methods\n * @access public\n */\nexport class ConnectionStatusListener {\n  /**\n   * Callback fired when connection is broken\n   */\n  onConnectionBroken() {}\n  /**\n   * Callback fired when connection is closed\n   */\n  onConnectionClosed() {}\n  /**\n   * Callback fired when connection is established\n   */\n  onConnectionEstablished() {}\n  /**\n   * Callback fired when an error occurs in connection to server step\n   * @param {Object} failure\n   */\n  onConnectionToServerFail(failure) {}\n  /**\n   * Callback fired when negociation with server failed\n   * @param {Object} failure\n   */\n  onNegotiationFailed(failure) {}\n  /**\n   * Callback no server url avaibale\n   */\n  onNoServerUrlAvailable() {}\n  /**\n  * Callback fired when connection will close\n  */\n  onConnectionWillClose() {}\n  /**\n   * Callback fired when an error occurs in handshake step\n   * @param {Object} failure\n   */\n  onFailedHandshake(failure) {}\n  /**\n   * Callback fired when a message is lost\n   */\n  onMessageLost() {}\n  /**\n   * Callback fired when handshake step succeed\n   * @param {Object} authentication\n   */\n  onSuccessfulHandshake(authentication) {}\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/connection/connection-status.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "class",
    "name": "ConnectionStatusListener",
    "memberof": "src/connection/connection-status.js",
    "static": true,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/connection/connection-status.js",
    "importStyle": "{ConnectionStatusListener}",
    "description": "Define life cycle connection methods",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "onConnectionBroken",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onConnectionBroken",
    "access": "public",
    "description": "Callback fired when connection is broken",
    "lineNumber": 9,
    "params": [],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "onConnectionClosed",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onConnectionClosed",
    "access": "public",
    "description": "Callback fired when connection is closed",
    "lineNumber": 13,
    "params": [],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "onConnectionEstablished",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onConnectionEstablished",
    "access": "public",
    "description": "Callback fired when connection is established",
    "lineNumber": 17,
    "params": [],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "onConnectionToServerFail",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onConnectionToServerFail",
    "access": "public",
    "description": "Callback fired when an error occurs in connection to server step",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "onNegotiationFailed",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onNegotiationFailed",
    "access": "public",
    "description": "Callback fired when negociation with server failed",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "onNoServerUrlAvailable",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onNoServerUrlAvailable",
    "access": "public",
    "description": "Callback no server url avaibale",
    "lineNumber": 31,
    "params": [],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "onConnectionWillClose",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onConnectionWillClose",
    "access": "public",
    "description": "Callback fired when connection will close",
    "lineNumber": 35,
    "params": [],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "onFailedHandshake",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onFailedHandshake",
    "access": "public",
    "description": "Callback fired when an error occurs in handshake step",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "onMessageLost",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onMessageLost",
    "access": "public",
    "description": "Callback fired when a message is lost",
    "lineNumber": 44,
    "params": [],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "onSuccessfulHandshake",
    "memberof": "src/connection/connection-status.js~ConnectionStatusListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection/connection-status.js~ConnectionStatusListener#onSuccessfulHandshake",
    "access": "public",
    "description": "Callback fired when handshake step succeed",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "authentication",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "src/index.js",
    "content": "export { Authentication } from './authentication/handshake'\nexport { ConnectionStatusListener } from './connection/connection-status'\n\nexport { Client } from './client/basic'\nexport { SmartClient } from './client/smart'\nexport { WeakClient } from './client/weak'\n\nexport { services } from './mapping'\n\n/**\n * SDK Version\n * @type {string}\n */\nexport const VERSION = '3.3.0'\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "variable",
    "name": "VERSION",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~VERSION",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/index.js",
    "importStyle": "{VERSION}",
    "description": "SDK Version",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "src/mapping/authentications.js",
    "content": "import { Service } from './core'\n/**\n * Delegating authentication\n *\n * This authentication delegates authentication to an external auth provider\n * <br>When a zetapush client handshakes with a delegated authentication, the 'token' field given by the client is sent to the configured remote server as part of the URL\n * <br>The response must be in JSON format\n *  Each key of the response will be considered a user information field name\n * <br>The handshake from the server will return the primary key in a field named 'login' (regardless of the actual key name you might have chosen)\n * */\n/**\n * End-user API for the delegating authentication\n *\n * Provisionning verbs.\n * @access public\n * */\nexport class Delegating extends Service {\n\t/**\n\t * Get default deployment id associated to Delegating service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'delegating_0'\n\t}\n}\n/**\n * Local authentication\n *\n * Zetapush local authentication\n *  The configurer can choose the primary key and mandatory user fields for account creation\n *  The field 'zetapushKey' is generated by the server and MUST not be used : it contains the unique key of the user inside a sandbox (it can be obtained from inside a macro with the <b>__userKey</b> pseudo-constant)\n * */\n/**\n * End-user API for the simple local authentication\n *\n * These API verbs allow end-users to manage their account.\n * @access public\n * */\nexport class Simple extends Service {\n\t/**\n\t * Get default deployment id associated to Simple service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'simple_0'\n\t}\n}\n/**\n * Weak authentication\n *\n * The weak authentication allows for anonymous authentication of devices\n *  Such devices can display a qrcode to allow regular users to take control of them\n * */\n/**\n * User API for weak devices control\n *\n * User API for control and release of weakly authenticated user sessions.\n * @access public\n * */\nexport class Weak extends Service {\n\t/**\n\t * Get default deployment id associated to Weak service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'weak_0'\n\t}\n\t/**\n\t * Controls a session\n\t *\n\t * Takes control of a weak user session, identified by the given public token.\n\t * The public token has been previously made available by the controlled device, for example by displaying a QRCode.\n\t * Upon control notification, the client SDK of the controlled session is expected to re-handshake.\n\t * */\n\tcontrol({publicToken,fullRights}) { return this.$publish('control', {publicToken,fullRights})}\n\t/**\n\t * Returns the current token\n\t *\n\t * Returns your current session's private token. The token field may be null, if you did not log in with this authentication.\n\t * The token can be used to log in as the same weak user another time.\n\t * */\n\tgetToken() { return this.$publish('getToken', {})}\n\t/**\n\t * Releases a session\n\t *\n\t * Releases control of a weak user session, identified by the given public token.\n\t * The weak user session must have been previously controlled by a call to 'control'.\n\t * */\n\trelease({publicToken,fullRights}) { return this.$publish('release', {publicToken,fullRights})}\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/mapping/authentications.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "class",
    "name": "Delegating",
    "memberof": "src/mapping/authentications.js",
    "static": true,
    "longname": "src/mapping/authentications.js~Delegating",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/authentications.js",
    "importStyle": "{Delegating}",
    "description": "End-user API for the delegating authentication\n\nProvisionning verbs.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/authentications.js~Delegating",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/authentications.js~Delegating.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Delegating service",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "Simple",
    "memberof": "src/mapping/authentications.js",
    "static": true,
    "longname": "src/mapping/authentications.js~Simple",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/authentications.js",
    "importStyle": "{Simple}",
    "description": "End-user API for the simple local authentication\n\nThese API verbs allow end-users to manage their account.",
    "lineNumber": 39,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 205,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/authentications.js~Simple",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/authentications.js~Simple.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Simple service",
    "lineNumber": 44,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "class",
    "name": "Weak",
    "memberof": "src/mapping/authentications.js",
    "static": true,
    "longname": "src/mapping/authentications.js~Weak",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/authentications.js",
    "importStyle": "{Weak}",
    "description": "User API for weak devices control\n\nUser API for control and release of weakly authenticated user sessions.",
    "lineNumber": 60,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 207,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/authentications.js~Weak",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/authentications.js~Weak.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Weak service",
    "lineNumber": 65,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "control",
    "memberof": "src/mapping/authentications.js~Weak",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/authentications.js~Weak#control",
    "access": "public",
    "description": "Controls a session\n\nTakes control of a weak user session, identified by the given public token.\nThe public token has been previously made available by the controlled device, for example by displaying a QRCode.\nUpon control notification, the client SDK of the controlled session is expected to re-handshake.",
    "lineNumber": 75,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"publicToken\": *, \"fullRights\": *}"
        ],
        "defaultRaw": {
          "publicToken": null,
          "fullRights": null
        },
        "defaultValue": "{\"publicToken\":null,\"fullRights\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "getToken",
    "memberof": "src/mapping/authentications.js~Weak",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/authentications.js~Weak#getToken",
    "access": "public",
    "description": "Returns the current token\n\nReturns your current session's private token. The token field may be null, if you did not log in with this authentication.\nThe token can be used to log in as the same weak user another time.",
    "lineNumber": 82,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "release",
    "memberof": "src/mapping/authentications.js~Weak",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/authentications.js~Weak#release",
    "access": "public",
    "description": "Releases a session\n\nReleases control of a weak user session, identified by the given public token.\nThe weak user session must have been previously controlled by a call to 'control'.",
    "lineNumber": 89,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"publicToken\": *, \"fullRights\": *}"
        ],
        "defaultRaw": {
          "publicToken": null,
          "fullRights": null
        },
        "defaultValue": "{\"publicToken\":null,\"fullRights\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "file",
    "name": "src/mapping/core.js",
    "content": "/**\n * @access protected\n */\nexport class Service {\n  constructor({ $publish }) {\n    this.$publish = $publish\n  }\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/mapping/core.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 212,
    "kind": "class",
    "name": "Service",
    "memberof": "src/mapping/core.js",
    "static": true,
    "longname": "src/mapping/core.js~Service",
    "access": "protected",
    "export": true,
    "importPath": "zetapush-js/src/mapping/core.js",
    "importStyle": "{Service}",
    "description": "",
    "lineNumber": 4,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/mapping/core.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/core.js~Service#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "$publish",
    "memberof": "src/mapping/core.js~Service",
    "static": false,
    "longname": "src/mapping/core.js~Service#$publish",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "src/mapping/index.js",
    "content": "import * as authentications from './authentications'\nimport * as services from './services'\n\nexport { authentications, services }\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/mapping/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "src/mapping/services.js",
    "content": "import { Service } from './core'\n/**\n * Data aggregation\n *\n * Provides data aggregation over time and across different items\n *  User devices push items data on developer-defined categories\n *  This service automatically aggregates the data\n * Raw data is not available for reading, only the generated aggregation result\n *\n * */\n/**\n * User API for item aggregation\n *\n * Users can push data and be notified of aggregated data.\n * This service does not allow you to read the data. To achieve that kind of behavior, you could configure a callback to store the data.\n * @access public\n * */\nexport class Aggreg extends Service {\n\t/**\n\t * Get default deployment id associated to Aggreg service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'aggreg_0'\n\t}\n\t/**\n\t * Pushes some data\n\t *\n\t * Pushes the given data.\n\t * All the items are processed according to the defined rules.\n\t * At least one push for a given item is needed during a time period to trigger processing and calling of the corresponding callback verb/macro.\n\t * */\n\tpush({items,owner}) { return this.$publish('push', {items,owner})}\n}\n/**\n * Data stacks\n *\n * Stacks are a per-user named persistent queue of data\n *  An administrator creates a stack service\n *  End-users can push data on an arbitrary number of their own arbitrary named stacks\n * */\n/**\n * Data stack user API\n *\n * Data is stored on a per user basis. However, notifications can be sent to a configurable set of listeners.\n * Stack names are arbitrary and do not need to be explicitly initialized.\n * @access public\n * */\nexport class Stack extends Service {\n\t/**\n\t * Get default deployment id associated to Stack service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'stack_0'\n\t}\n\t/**\n\t * Lists the listeners\n\t *\n\t * Returns the whole list of listeners for the given stack.\n\t * */\n\tgetListeners({stack,owner}) { return this.$publish('getListeners', {stack,owner})}\n\t/**\n\t * Lists content\n\t *\n\t * Returns a paginated list of contents for the given stack.\n\t * Content is sorted according to the statically configured order.\n\t * */\n\tlist({stack,owner,page}) { return this.$publish('list', {stack,owner,page})}\n\t/**\n\t * Empties a stack\n\t *\n\t * Removes all items from the given stack.\n\t * */\n\tpurge({stack,owner}) { return this.$publish('purge', {stack,owner})}\n\t/**\n\t * Pushes an item\n\t *\n\t * Pushes an item onto the given stack.\n\t * The stack does not need to be created.\n\t * */\n\tpush({stack,data,owner}) { return this.$publish('push', {stack,data,owner})}\n\t/**\n\t * Removes items\n\t *\n\t * Removes the item with the given guid from the given stack.\n\t * */\n\tremove({guids,stack,owner}) { return this.$publish('remove', {guids,stack,owner})}\n\t/**\n\t * Sets the listeners\n\t *\n\t * Sets the listeners for the given stack.\n\t * */\n\tsetListeners({listeners,stack,owner}) { return this.$publish('setListeners', {listeners,stack,owner})}\n\t/**\n\t * Updates an item\n\t *\n\t * Updates an existing item of the given stack.\n\t * The item MUST exist prior to the call.\n\t * */\n\tupdate({guid,stack,data,owner}) { return this.$publish('update', {guid,stack,data,owner})}\n}\n/**\n * Echo\n *\n * Echo\n * */\n/**\n * Echo service\n *\n * Simple echo service, for development purposes.\n * @access public\n * */\nexport class Echo extends Service {\n\t/**\n\t * Get default deployment id associated to Echo service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'echo_0'\n\t}\n\t/**\n\t * Echoes an object\n\t *\n\t * Echoes an object: the server will echo that object on channel 'echo' for the current user.\n\t * */\n\techo(parameter) { return this.$publish('echo', parameter)}\n}\n/**\n * Game engine\n *\n * Abstract Game Engine\n *  Concrete game engines are remote cometd clients or internal macros\n * */\n/**\n * User API for games\n *\n * Users can list, start, join games, and play.\n * @access public\n * */\nexport class Game extends Service {\n\t/**\n\t * Get default deployment id associated to Game service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'game_0'\n\t}\n\t/**\n\t * Lists game types\n\t *\n\t * Returns the list of game types supported by the server and the currently registered game engines.\n\t * */\n\tavailable() { return this.$publish('available', {})}\n\t/**A user joins a game*/\n\tjoin({role,gameId,userId,userName}) { return this.$publish('join', {role,gameId,userId,userName})}\n\t/**Organizes a game*/\n\torganize({type,owner,options}) { return this.$publish('organize', {type,owner,options})}\n\t/**Gives some command to the game engine*/\n\tplay({gameId,userId,data}) { return this.$publish('play', {gameId,userId,data})}\n\t/**Starts a game*/\n\tstart({gameId}) { return this.$publish('start', {gameId})}\n\t/**A user cancels joining a game*/\n\tunjoin({role,gameId,userId,userName}) { return this.$publish('unjoin', {role,gameId,userId,userName})}\n}\n/**\n * Game Engine API\n *\n * The Game Engine API is for game engine clients, not end-users.\n * @access public\n * */\nexport class GameEngine extends Service {\n\t/**\n\t * Get default deployment id associated to GameEngine service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'game_0'\n\t}\n\t/**\n\t * Notify the result for a join request\n\t *\n\t * A Game Engine notifies the STR of the result of a join request that it received on join_callback\n\t * */\n\tjoin_result({msgId,payload,error,callerId}) { return this.$publish('join_result', {msgId,payload,error,callerId})}\n\t/**\n\t * Notify the result for an organization request\n\t *\n\t * A Game Engine notifies the STR of the result of an organization request that it received on organize_callback\n\t * */\n\torganize_result({msgId,payload,error,callerId}) { return this.$publish('organize_result', {msgId,payload,error,callerId})}\n\t/**\n\t * Registers a game engine\n\t *\n\t * A client registers itself to the STR as a Game Engine.\n\t * The STR may, from now on, dispatch game of the given game type to said client.\n\t * Unregistration is done automatically on logoff.\n\t * */\n\tregister({maxGames,gameInfo,location}) { return this.$publish('register', {maxGames,gameInfo,location})}\n\t/**\n\t * Notify the result for a start request\n\t *\n\t * A Game Engine notifies the STR of the result of a start request that it received on start_callback\n\t * */\n\tstart_result({gameId}) { return this.$publish('start_result', {gameId})}\n\t/**\n\t * Notify a game event\n\t *\n\t * A Game Engine notifies the STR of some arbitrary game event.\n\t * */\n\tstate({status,gameId,data}) { return this.$publish('state', {status,gameId,data})}\n\t/**\n\t * Notify the result for an unjoin request\n\t *\n\t * A Game Engine notifies the STR of the result of an unjoin request that it received on unjoin_callback\n\t * */\n\tunjoin_result({msgId,payload,error,callerId}) { return this.$publish('unjoin_result', {msgId,payload,error,callerId})}\n}\n/**\n * Generic Data Access\n *\n * Generic Data Access Service : NoSQL storage\n * */\n/**\n * GDA User API\n *\n * User API for Generic Data Access.\n * The data are stored on a per-user basis.\n * Users can put, get, list their data.\n * @access public\n * */\nexport class Gda extends Service {\n\t/**\n\t * Get default deployment id associated to Gda service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'gda_0'\n\t}\n\t/**\n\t * Asks for a data row\n\t *\n\t * Returns a full data row.\n\t * */\n\tget({table,key,owner}) { return this.$publish('get', {table,key,owner})}\n\t/**\n\t * Asks for a data cell\n\t *\n\t * Returns a precise list of cells from a column in a data row.\n\t * */\n\tgetCells({table,key,key2,owner,column}) { return this.$publish('getCells', {table,key,key2,owner,column})}\n\t/**\n\t * Increments an integer value\n\t *\n\t * Increments a cell 64-bit signed integer value and returns the result in the data field.\n\t * The increment is atomic : if you concurrently increment 10 times a value by 1, the final result will be the initial value plus 10. The actual individual resulting values seen by the 10 concurrent callers may vary discontinuously, with duplicates : at least one of them will see the final (+10) result.\n\t * */\n\tinc({table,data,key,key2,owner,column}) { return this.$publish('inc', {table,data,key,key2,owner,column})}\n\t/**\n\t * Asks for a list of rows\n\t *\n\t * Returns a paginated list of rows from the given table.\n\t * */\n\tlist({columns,table,owner,page}) { return this.$publish('list', {columns,table,owner,page})}\n\t/**\n\t * Puts some data into a cell\n\t *\n\t * Creates or replaces the contents of a particular cell.\n\t * */\n\tput({table,data,key,key2,owner,column}) { return this.$publish('put', {table,data,key,key2,owner,column})}\n\t/**\n\t * Puts several rows\n\t *\n\t * Creates or replaces the (maybe partial) contents of a collection of rows.\n\t * This method only creates or replaces cells for non-null input values.\n\t * */\n\tputs({rows,table,owner}) { return this.$publish('puts', {rows,table,owner})}\n\t/**\n\t * Asks for a range of rows\n\t *\n\t * Returns a paginated range of rows from the given table.\n\t * A range consists of consecutive rows from the start key (inclusive) to the stop key (exclusive).\n\t * You can specify partial keys for the start and stop fields.\n\t * */\n\trange({columns,start,table,stop,owner,page}) { return this.$publish('range', {columns,start,table,stop,owner,page})}\n\t/**\n\t * Removes one cell inside a column of a row\n\t *\n\t * Removes only one cell of the given column of the given row from the given table.\n\t * */\n\tremoveCell({table,key,key2,owner,column}) { return this.$publish('removeCell', {table,key,key2,owner,column})}\n\t/**\n\t * Removes one full column of a row\n\t *\n\t * Removes all cells of the given column of the given row from the given table.\n\t * */\n\tremoveColumn({table,key,owner,column}) { return this.$publish('removeColumn', {table,key,owner,column})}\n\t/**\n\t * Removes a range of rows\n\t *\n\t * Removes the specified columns of the given range of rows from the given table.\n\t * */\n\tremoveRange({columns,start,table,stop,owner}) { return this.$publish('removeRange', {columns,start,table,stop,owner})}\n\t/**\n\t * Removes one full row\n\t *\n\t * Removes all columns of the given row from the given table.\n\t * */\n\tremoveRow({table,key,owner}) { return this.$publish('removeRow', {table,key,owner})}\n}\n/**\n * Groups Management\n *\n * Groups management for users, grants on resources, remote commands on devices\n *  This is where you can configure rights for any resource\n *\n * */\n/**\n * User API for remote control\n *\n * @access public\n * */\nexport class Remoting extends Service {\n\t/**\n\t * Get default deployment id associated to Remoting service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'groups_0'\n\t}\n\t/**\n\t * Adds a listener\n\t *\n\t * A user requests notifications from a device owned by anyone who granted him the right authorizations.\n\t * Whenever the device calls 'notify', notifications will be sent to the caller of this verb.\n\t * */\n\taddListener({resource,fromResource,cmd,from,data,owner}) { return this.$publish('addListener', {resource,fromResource,cmd,from,data,owner})}\n\t/**Response to 'getCapabilities'*/\n\tcapabilities({askingResource,capabilities,answeringResource}) { return this.$publish('capabilities', {askingResource,capabilities,answeringResource})}\n\t/**\n\t * Executes a command\n\t *\n\t * A user executes a command on a device owned by anyone who granted him the right authorizations.\n\t * The command is issued on channel 'command'\n\t * */\n\texecute({resource,cmd,data,owner}) { return this.$publish('execute', {resource,cmd,data,owner})}\n\t/**\n\t * Requests capabilities\n\t *\n\t * A user requests all his devices for the whole list of their capabilities.\n\t * Devices are expected to answer on channel 'capabilities'\n\t * */\n\tgetCapabilities() { return this.$publish('getCapabilities', {})}\n\t/**\n\t * Notifies of some event\n\t *\n\t * A device notifies the registered users/devices on this channel.\n\t * The server forwards the notification to said users.\n\t * */\n\tnotify({resource,fromResource,cmd,from,data,owner}) { return this.$publish('notify', {resource,fromResource,cmd,from,data,owner})}\n\t/**\n\t * Pings devices\n\t *\n\t * A user requests all devices (of all owners) on which he has authorizations to respond on channel 'pong'\n\t * */\n\tping({action}) { return this.$publish('ping', {action})}\n\t/**Response to ping*/\n\tpong({user,resource,available,uid,owner,action}) { return this.$publish('pong', {user,resource,available,uid,owner,action})}\n\t/**\n\t * Removes a listener\n\t *\n\t * A user stops requesting notifications from a device owned by anyone who granted him the right authorizations\n\t * */\n\tremoveListener({resource,fromResource,cmd,from,data,owner}) { return this.$publish('removeListener', {resource,fromResource,cmd,from,data,owner})}\n}\n/**\n * User API for groups and rights.\n *\n * Groups are stored per user.\n * This means that two users can own a group with the same identifier. A couple (owner, group) is needed to uniquely identify a group inside a group management service.\n * The triplet (deploymentId, owner, group) is actually needed to fully qualify a group outside of the scope of this service.\n * @access public\n * */\nexport class GroupManagement extends Service {\n\t/**\n\t * Get default deployment id associated to GroupManagement service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'groups_0'\n\t}\n\t/**\n\t * Adds me to a group\n\t *\n\t * Adds me (the caller) to a group.\n\t * This verb exists so that group owners may grant the right to join their groups without granting the right to add other users to those groups.\n\t * The 'user' field is implicitly set to the current user's key.\n\t * */\n\taddMe({group,owner}) { return this.$publish('addMe', {group,owner})}\n\t/**\n\t * Adds a user to a group\n\t *\n\t * Adds the given user to the given group.\n\t * Addition may fail if the given group does not already exist.\n\t * */\n\taddUser({user,group,owner}) { return this.$publish('addUser', {user,group,owner})}\n\t/**Adds users to a group*/\n\taddUsers({users,group,owner}) { return this.$publish('addUsers', {users,group,owner})}\n\t/**\n\t * Lists my owned groups, with details\n\t *\n\t * Returns the whole list of groups owned by the current user, with their members\n\t * */\n\tallGroups({owner}) { return this.$publish('allGroups', {owner})}\n\t/**\n\t * Creates a group\n\t *\n\t * Creates a group owned by the current user.\n\t * Group creation may fail if the group already exists.\n\t * */\n\tcreateGroup({group,groupName,owner}) { return this.$publish('createGroup', {group,groupName,owner})}\n\t/**\n\t * Removes a group\n\t *\n\t * Removes the given group owned by the current user or the given owner.\n\t * Also removes all grants to that group.\n\t * */\n\tdelGroup({group,owner}) { return this.$publish('delGroup', {group,owner})}\n\t/**Removes a user from a group*/\n\tdelUser({user,group,owner}) { return this.$publish('delUser', {user,group,owner})}\n\t/**Removes users from a group*/\n\tdelUsers({users,group,groupName,owner}) { return this.$publish('delUsers', {users,group,groupName,owner})}\n\t/**\n\t * Tests for a group's existence\n\t *\n\t * Returns whether a group exists or not.\n\t * */\n\texists({group,owner}) { return this.$publish('exists', {group,owner})}\n\t/**\n\t * Grants a right to a group\n\t *\n\t * The granting API does not do any check when storing permissions.\n\t * In particular when granting rights on a verb and resource of another API, the existence of said verb and resource is not checked.\n\t * */\n\tgrant({resource,group,owner,action}) { return this.$publish('grant', {resource,group,owner,action})}\n\t/**\n\t * Lists the group users\n\t *\n\t * Returns the whole list of users configured inside the given group.\n\t * */\n\tgroupUsers({group,owner}) { return this.$publish('groupUsers', {group,owner})}\n\t/**\n\t * Lists my owned groups\n\t *\n\t * Returns the whole list of groups owned by the current user\n\t * */\n\tgroups({owner}) { return this.$publish('groups', {owner})}\n\t/**\n\t * Lists rights for a group\n\t *\n\t * This API lists explicitly configured rights.\n\t * Effective rights include configured rights, implicit rights and inherited rights.\n\t * */\n\tlistGrants({group,owner}) { return this.$publish('listGrants', {group,owner})}\n\t/**\n\t * Lists presences for a group\n\t *\n\t * Returns the list of members of the given groups, along with their actual and current presence on the zetapush server.\n\t * The current implementation does not include information about the particular devices users are connected with.\n\t * If a user is connected twice with two different devices, two identical entries will be returned.\n\t * */\n\tlistPresences({group,owner}) { return this.$publish('listPresences', {group,owner})}\n\t/**\n\t * Tests membership\n\t *\n\t * Tests whether I (the caller) am a member of the given group.\n\t * This verb exists so that users can determine if they are part of a group without being granted particular rights.\n\t * The 'user' field is implicitly set to the current user's key.\n\t * */\n\tmemberOf({hardFail,group,owner}) { return this.$publish('memberOf', {hardFail,group,owner})}\n\t/**\n\t * Grants rights to a group\n\t *\n\t * Grant several rights at once.\n\t * */\n\tmgrant({resource,actions,group,owner}) { return this.$publish('mgrant', {resource,actions,group,owner})}\n\t/**Revokes rights for a group*/\n\tmrevoke({resource,actions,group,owner}) { return this.$publish('mrevoke', {resource,actions,group,owner})}\n\t/**\n\t * Lists the groups I am part of\n\t *\n\t * Returns the whole list of groups the current user is part of.\n\t * Groups may be owned by anyone, including the current user.\n\t * */\n\tmyGroups({owner}) { return this.$publish('myGroups', {owner})}\n\t/**Revokes a right for a group*/\n\trevoke({resource,group,owner,action}) { return this.$publish('revoke', {resource,group,owner,action})}\n}\n/**\n * HTTP client\n *\n * Web-service client\n *  An admin records URL templates that can be called by users\n *  Calls are not configurable by end-users\n *  However an admin may leverage the macro service to achieve URL, headers and body configurability\n * */\n/**\n * User API for http requests\n *\n * @access public\n * */\nexport class Httpclient extends Service {\n\t/**\n\t * Get default deployment id associated to Httpclient service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'httpclient_0'\n\t}\n\t/**\n\t * Makes a predefined request\n\t *\n\t * Lookups a predefined request by name, and executes it.\n\t * */\n\tcall({name,requestId}) { return this.$publish('call', {name,requestId})}\n}\n/**\n * Macros\n *\n * Macro-command service\n *  An admin defines macro-commands that can sequentially call any number of other api verbs, loop on collections of data, make decisions, etc\n *\n *\n *  End-users play them, with contextual parameters\n * */\n/**\n * User API for macro debugging\n *\n * Debugger API for macro.\n * These API verbs are not intended for use by most developers.\n * @access public\n * */\nexport class MacroDebug extends Service {\n\t/**\n\t * Get default deployment id associated to MacroDebug service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'macro_0'\n\t}\n\t/**Enables or disables a breakpoint*/\n\tbreakpoint({breakpoint,token,enabled}) { return this.$publish('breakpoint', {breakpoint,token,enabled})}\n\t/**Requests some information*/\n\tinfo({token,path,exp,requestId,frame}) { return this.$publish('info', {token,path,exp,requestId,frame})}\n\t/**\n\t * Debugs a previously recorded macro\n\t *\n\t * The given breakpoints will be honored, causing a suspension of the execution, resumable via 'resume'.\n\t * Only one debug session can be active at any given time.\n\t * */\n\tlivedebug({parameters,token,breakpoints,hardFail,name,requestId,debug}) { return this.$publish('livedebug', {parameters,token,breakpoints,hardFail,name,requestId,debug})}\n\t/**Resumes a paused macro*/\n\tresume({token,type}) { return this.$publish('resume', {token,type})}\n\t/**Sets a variable value*/\n\tvariable({token,name,frame,data}) { return this.$publish('variable', {token,name,frame,data})}\n}\n/**\n * User API for macro execution\n *\n * Simple errors are reported as usual.\n * However, the macro execution verbs treat most errors in a particular way : instead of reporting errors on the usual 'error' channel, errors are put in the returned 'MacroCompletion' result.\n * This behavior can be tuned on a per-call basis with the hardFail parameter.\n * Note that some particular errors will always behave as if hardFail were true, because they are related to programming errors, or prevent processing from ending gracefully : STACK_OVERFLOW, NO_SUCH_FUNCTION, RAM_EXCEEDED, CYCLES_EXCEEDED, TIME_EXCEEDED, QUOTA_EXCEEDED, RATE_EXCEEDED, BAD_COMPARATOR_VALUE\n * @access public\n * */\nexport class Macro extends Service {\n\t/**\n\t * Get default deployment id associated to Macro service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'macro_0'\n\t}\n\t/**\n\t * Plays a previously recorded macro\n\t *\n\t * DO NOT use this verb from inside an enclosing macro when you need the result in order to proceed with the enclosing macro.\n\t * You can override the default notification channel when defining the macro.\n\t * */\n\tcall({parameters,hardFail,name,requestId,debug}) { return this.$publish('call', {parameters,hardFail,name,requestId,debug})}\n}\n/**\n * Mail sender\n *\n * Sends email through SMTP\n * */\n/**\n * Mail service user API\n *\n * This service is statically configured with an outgoing SMTP server.\n * Users call the API here to actually send emails.\n * @access public\n * */\nexport class Sendmail extends Service {\n\t/**\n\t * Get default deployment id associated to Sendmail service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'sendmail_0'\n\t}\n}\n/**\n * Messaging service\n *\n * Messaging service\n * */\n/**\n * Messaging service\n *\n * Simple and flexible user-to-user or user-to-group messaging service.\n * @access public\n * */\nexport class Messaging extends Service {\n\t/**\n\t * Get default deployment id associated to Messaging service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'messaging_0'\n\t}\n\t/**\n\t * Sends a message to a target\n\t *\n\t * Sends the given message to the specified target on the given (optional) channel.\n\t * The administratively given default channel name is used when none is provided in the message itself.\n\t * */\n\tsend({target,channel,data}) { return this.$publish('send', {target,channel,data})}\n}\n/**\n * Producer consumer\n *\n * Producer consumer service\n *  Users can submit tasks and other users consume them\n * */\n/**\n * Producer / consumer real-time API\n *\n * Task producers submits their tasks.\n * The server dispatches the tasks.\n * Consumers process them and report completion back to the server.\n * Tasks are global to the service (i.e. NOT per user).\n * @access public\n * */\nexport class Queue extends Service {\n\t/**\n\t * Get default deployment id associated to Queue service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'queue_0'\n\t}\n\t/**\n\t * Submits a task\n\t *\n\t * Producer API.\n\t * A task producer submits the given task to the server.\n\t * The server will find a tasker with processing capacity and dispatch the task.\n\t * The task result will be returned to the caller.\n\t * When called from inside a macro, the comsumer generated result is available for further use.\n\t * */\n\tcall({description,originBusinessId,originDeploymentId,data,owner}) { return this.$publish('call', {description,originBusinessId,originDeploymentId,data,owner})}\n\t/**\n\t * Notifies completion of a task\n\t *\n\t * Consumer API.\n\t * The tasker notifies completion of the given task to the server.\n\t * The tasker can optionally include a result or an error code.\n\t * */\n\tdone({result,taskId,success}) { return this.$publish('done', {result,taskId,success})}\n\t/**\n\t * Registers a consumer\n\t *\n\t * Consumer API.\n\t * Registers the current user resource as an available task consumer.\n\t * Tasks will be then dispatched to that consumer.\n\t * */\n\tregister({capacity}) { return this.$publish('register', {capacity})}\n\t/**\n\t * Submits a task\n\t *\n\t * Producer API.\n\t * A task producer submits the given task to the server.\n\t * The server will find a tasker with processing capacity and dispatch the task.\n\t * The task result will be ignored : the producer will not receive any notification of any kind, even in case of errors (including capacity exceeded errors).\n\t * This verb will return immediately : you can use this API to asynchronously submit a task.\n\t * */\n\tsubmit({description,originBusinessId,originDeploymentId,data,owner}) { return this.$publish('submit', {description,originBusinessId,originDeploymentId,data,owner})}\n\t/**\n\t * Unregisters a consumer\n\t *\n\t * Consumer API.\n\t * Unregisters the current user resource as an available task consumer.\n\t * All non finished tasks are returned to the server.\n\t * */\n\tunregister() { return this.$publish('unregister', {})}\n}\n/**\n * Push Notifications\n *\n * Native Push Notifications for Android, iOS\n *\n *\n *\n * */\n/**\n * Notification User API\n *\n * User API for notifications.\n * For notifications to work properly, it is imperative that the resource name of a device remain constant over time.\n * @access public\n * */\nexport class Notif extends Service {\n\t/**\n\t * Get default deployment id associated to Notif service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'notif_0'\n\t}\n}\n/**\n * RDBMS\n *\n * Relational Database : SQL storage\n * */\n/**\n * RDBMS User API\n *\n * User API for SQL queries.\n * Contrary to GDA or Stacks, the data are not stored on a per-user basis.\n * Users can store, get, list their data.\n * @access public\n * */\nexport class Rdbms extends Service {\n\t/**\n\t * Get default deployment id associated to Rdbms service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'rdbms_0'\n\t}\n}\n/**\n * SMS via OVH\n *\n * SMS sender, to send text messages to mobile phones\n * This SMS sending service uses the OVH API\n *\n * */\n/**\n * SMS service\n *\n * User API for SMS.\n * @access public\n * */\nexport class Sms_ovh extends Service {\n\t/**\n\t * Get default deployment id associated to Sms_ovh service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'sms_ovh_0'\n\t}\n}\n/**\n * Scheduler\n *\n * Scheduler service\n *  End-users can schedule one-time or repetitive tasks using a classical cron syntax (with the year field) or a timestamp (milliseconds from the epoch)\n * */\n/**\n * User API for the Scheduler\n *\n * User endpoints for scheduling : users can schedule, list and delete tasks.\n * Tasks are stored on a per-user basis: a task will run with the priviledges of the user who stored it.\n * Tasks are run on the server and thus can call api verbs marked as server-only.\n * @access public\n * */\nexport class Cron extends Service {\n\t/**\n\t * Get default deployment id associated to Cron service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'cron_0'\n\t}\n\t/**\n\t * List the configured tasks\n\t *\n\t * Returns a paginated list of the asking user's tasks.\n\t * */\n\tlist({start,stop,owner,page}) { return this.$publish('list', {start,stop,owner,page})}\n}\n/**\n * Search engine\n *\n * ElasticSearch engine, to index and search data\n *  An admin creates indices\n *  Users index and search documents\n *\n * */\n/**\n * ElasticSearch Service\n *\n * This API is a very thin wrapper around ElasticSearch's API.\n * @access public\n * */\nexport class Search extends Service {\n\t/**\n\t * Get default deployment id associated to Search service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'search_0'\n\t}\n\t/**\n\t * Deletes data\n\t *\n\t * Deletes a document from the elasticsearch engine by id.\n\t * */\n\tdelete({type,id,index}) { return this.$publish('delete', {type,id,index})}\n\t/**\n\t * Gets data\n\t *\n\t * Retrieves a document from the elasticsearch engine by id.\n\t * */\n\tget({type,id,index}) { return this.$publish('get', {type,id,index})}\n\t/**\n\t * Indexes data\n\t *\n\t * Inserts or updates a document into the elasticsearch engine.\n\t * */\n\tindex({type,id,index,data}) { return this.$publish('index', {type,id,index,data})}\n\t/**Searches for data*/\n\tsearch({indices,query,sort,page,types}) { return this.$publish('search', {indices,query,sort,page,types})}\n}\n/**\n * Template engine\n *\n * Template engine to produce documents from parameterized templates\n * <br>An admin creates templates\n * <br> Users produce documents\n * <br>The implementation uses the <a href='http://freemarker\n * org/'>freemarker</a> engine\n *\n * */\n/**\n * User API for templates\n *\n * Users use this API to evaluate pre-configured templates.\n * @access public\n * */\nexport class Template extends Service {\n\t/**\n\t * Get default deployment id associated to Template service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'template_0'\n\t}\n\t/**\n\t * Evaluates a template\n\t *\n\t * Evaluates the given template and returns the result as a string.\n\t * Templates are parsed the first time they are evaluated. Evaluation may fail early due to a parsing error.\n\t * */\n\tevaluate({languageTag,name,requestId,data}) { return this.$publish('evaluate', {languageTag,name,requestId,data})}\n}\n/**\n * Triggers\n *\n * Register callbacks for events and trigger them when needed\n *\n * */\n/**\n * Trigger service\n *\n * Register listeners and trigger events.\n * @access public\n * */\nexport class Trigger extends Service {\n\t/**\n\t * Get default deployment id associated to Trigger service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'trigger_0'\n\t}\n}\n/**\n * Upload: S3\n *\n * Upload service with S3 storage\n * */\n/**\n * User API for file management\n *\n * User API for virtual file management and http file upload\n * This API contains all the verbs needed to browse, upload and remove files.\n * Files are stored on a per-user basis: each user has his or her own whole virtual filesystem.\n * Uploading a file is a 3-step process : request an upload URL, upload via HTTP, notify this service of completion.\n * @access public\n * */\nexport class Zpfs_s3 extends Service {\n\t/**\n\t * Get default deployment id associated to Zpfs_s3 service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'zpfs_s3_0'\n\t}\n\t/**\n\t * Copies a file\n\t *\n\t * Copies a file or folder (recursively) to a new location.\n\t * May fail if the target location is not empty.\n\t * */\n\tcp({oldPath,path,owner}) { return this.$publish('cp', {oldPath,path,owner})}\n\t/**\n\t * Returns disk usage\n\t *\n\t * Returns an recursively aggregated number of used bytes, starting at the given path.\n\t * */\n\tdu({path,owner}) { return this.$publish('du', {path,owner})}\n\t/**\n\t * Links a file\n\t *\n\t * Links a file or folder to another location.\n\t * May fail if the target location is not empty.\n\t * */\n\tlink({oldPath,path,owner}) { return this.$publish('link', {oldPath,path,owner})}\n\t/**\n\t * Lists a folder content\n\t *\n\t * Returns a paginated list of the folder's content.\n\t * */\n\tls({folder,owner,page}) { return this.$publish('ls', {folder,owner,page})}\n\t/**\n\t * Creates a folder\n\t *\n\t * Creates a new folder.\n\t * May fail if the target location is not empty.\n\t * */\n\tmkdir({parents,folder,owner}) { return this.$publish('mkdir', {parents,folder,owner})}\n\t/**\n\t * Moves a file\n\t *\n\t * Moves a file or folder (recursively) to a new location.\n\t * May fail if the target location is not empty.\n\t * */\n\tmv({oldPath,path,owner}) { return this.$publish('mv', {oldPath,path,owner})}\n\t/**\n\t * Notifies of upload completion\n\t *\n\t * The client application calls this verb to notify that it's done uploading to the cloud.\n\t * Calling that verb MAY trigger additional events such as thumbnail/metadata creation.\n\t * */\n\tnewFile({tags,guid,metadata,owner}) { return this.$publish('newFile', {tags,guid,metadata,owner})}\n\t/**\n\t * Requests an upload URL\n\t *\n\t * Requests an HTTP upload URL.\n\t * The URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.\n\t * */\n\tnewUploadUrl({contentType,path,owner}) { return this.$publish('newUploadUrl', {contentType,path,owner})}\n\t/**\n\t * Removes a file\n\t *\n\t * Removes a file or folder (recursively).\n\t * */\n\trm({path,owner}) { return this.$publish('rm', {path,owner})}\n\t/**\n\t * Creates a snapshot in a new folder\n\t *\n\t * Creates a new folder and then copies the given files inside\n\t * */\n\tsnapshot({parents,folder,items,flatten,owner}) { return this.$publish('snapshot', {parents,folder,items,flatten,owner})}\n\t/**\n\t * Returns information about a file\n\t *\n\t * Returns information about a single file.\n\t * The entry field will be null if the path does not exist\n\t * */\n\tstat({path,owner}) { return this.$publish('stat', {path,owner})}\n\t/**Updates a file's metadata*/\n\tupdateMeta({path,metadataFiles,metadata,owner}) { return this.$publish('updateMeta', {path,metadataFiles,metadata,owner})}\n}\n/**\n * Upload: local\n *\n * Upload service with local HDFS storage\n * */\n/**\n * User API for local file management\n *\n * User API for file content manipulation\n * @access public\n * */\nexport class Zpfs_hdfs extends Service {\n\t/**\n\t * Get default deployment id associated to Zpfs_hdfs service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'zpfs_hdfs_0'\n\t}\n\t/**\n\t * Copies a file\n\t *\n\t * Copies a file or folder (recursively) to a new location.\n\t * May fail if the target location is not empty.\n\t * */\n\tcp({oldPath,path,owner}) { return this.$publish('cp', {oldPath,path,owner})}\n\t/**\n\t * Returns disk usage\n\t *\n\t * Returns an recursively aggregated number of used bytes, starting at the given path.\n\t * */\n\tdu({path,owner}) { return this.$publish('du', {path,owner})}\n\t/**\n\t * Links a file\n\t *\n\t * Links a file or folder to another location.\n\t * May fail if the target location is not empty.\n\t * */\n\tlink({oldPath,path,owner}) { return this.$publish('link', {oldPath,path,owner})}\n\t/**\n\t * Lists a folder content\n\t *\n\t * Returns a paginated list of the folder's content.\n\t * */\n\tls({folder,owner,page}) { return this.$publish('ls', {folder,owner,page})}\n\t/**\n\t * Creates a folder\n\t *\n\t * Creates a new folder.\n\t * May fail if the target location is not empty.\n\t * */\n\tmkdir({parents,folder,owner}) { return this.$publish('mkdir', {parents,folder,owner})}\n\t/**\n\t * Moves a file\n\t *\n\t * Moves a file or folder (recursively) to a new location.\n\t * May fail if the target location is not empty.\n\t * */\n\tmv({oldPath,path,owner}) { return this.$publish('mv', {oldPath,path,owner})}\n\t/**\n\t * Notifies of upload completion\n\t *\n\t * The client application calls this verb to notify that it's done uploading to the cloud.\n\t * Calling that verb MAY trigger additional events such as thumbnail/metadata creation.\n\t * */\n\tnewFile({tags,guid,metadata,owner}) { return this.$publish('newFile', {tags,guid,metadata,owner})}\n\t/**\n\t * Requests an upload URL\n\t *\n\t * Requests an HTTP upload URL.\n\t * The URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.\n\t * */\n\tnewUploadUrl({contentType,path,owner}) { return this.$publish('newUploadUrl', {contentType,path,owner})}\n\t/**\n\t * Removes a file\n\t *\n\t * Removes a file or folder (recursively).\n\t * */\n\trm({path,owner}) { return this.$publish('rm', {path,owner})}\n\t/**\n\t * Creates a snapshot in a new folder\n\t *\n\t * Creates a new folder and then copies the given files inside\n\t * */\n\tsnapshot({parents,folder,items,flatten,owner}) { return this.$publish('snapshot', {parents,folder,items,flatten,owner})}\n\t/**\n\t * Returns information about a file\n\t *\n\t * Returns information about a single file.\n\t * The entry field will be null if the path does not exist\n\t * */\n\tstat({path,owner}) { return this.$publish('stat', {path,owner})}\n\t/**Updates a file's metadata*/\n\tupdateMeta({path,metadataFiles,metadata,owner}) { return this.$publish('updateMeta', {path,metadataFiles,metadata,owner})}\n}\n/**\n * Upload: pseudo-S3\n *\n * Upload service with pseudo-S3compatible storage\n * */\n/**\n * User API for file management\n *\n * User API for virtual file management and http file upload\n * This API contains all the verbs needed to browse, upload and remove files.\n * Files are stored on a per-user basis: each user has his or her own whole virtual filesystem.\n * Uploading a file is a 3-step process : request an upload URL, upload via HTTP, notify this service of completion.\n * @access public\n * */\nexport class Zpfs_s3compat extends Service {\n\t/**\n\t * Get default deployment id associated to Zpfs_s3compat service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'zpfs_s3compat_0'\n\t}\n\t/**\n\t * Copies a file\n\t *\n\t * Copies a file or folder (recursively) to a new location.\n\t * May fail if the target location is not empty.\n\t * */\n\tcp({oldPath,path,owner}) { return this.$publish('cp', {oldPath,path,owner})}\n\t/**\n\t * Returns disk usage\n\t *\n\t * Returns an recursively aggregated number of used bytes, starting at the given path.\n\t * */\n\tdu({path,owner}) { return this.$publish('du', {path,owner})}\n\t/**\n\t * Links a file\n\t *\n\t * Links a file or folder to another location.\n\t * May fail if the target location is not empty.\n\t * */\n\tlink({oldPath,path,owner}) { return this.$publish('link', {oldPath,path,owner})}\n\t/**\n\t * Lists a folder content\n\t *\n\t * Returns a paginated list of the folder's content.\n\t * */\n\tls({folder,owner,page}) { return this.$publish('ls', {folder,owner,page})}\n\t/**\n\t * Creates a folder\n\t *\n\t * Creates a new folder.\n\t * May fail if the target location is not empty.\n\t * */\n\tmkdir({parents,folder,owner}) { return this.$publish('mkdir', {parents,folder,owner})}\n\t/**\n\t * Moves a file\n\t *\n\t * Moves a file or folder (recursively) to a new location.\n\t * May fail if the target location is not empty.\n\t * */\n\tmv({oldPath,path,owner}) { return this.$publish('mv', {oldPath,path,owner})}\n\t/**\n\t * Notifies of upload completion\n\t *\n\t * The client application calls this verb to notify that it's done uploading to the cloud.\n\t * Calling that verb MAY trigger additional events such as thumbnail/metadata creation.\n\t * */\n\tnewFile({tags,guid,metadata,owner}) { return this.$publish('newFile', {tags,guid,metadata,owner})}\n\t/**\n\t * Requests an upload URL\n\t *\n\t * Requests an HTTP upload URL.\n\t * The URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.\n\t * */\n\tnewUploadUrl({contentType,path,owner}) { return this.$publish('newUploadUrl', {contentType,path,owner})}\n\t/**\n\t * Removes a file\n\t *\n\t * Removes a file or folder (recursively).\n\t * */\n\trm({path,owner}) { return this.$publish('rm', {path,owner})}\n\t/**\n\t * Creates a snapshot in a new folder\n\t *\n\t * Creates a new folder and then copies the given files inside\n\t * */\n\tsnapshot({parents,folder,items,flatten,owner}) { return this.$publish('snapshot', {parents,folder,items,flatten,owner})}\n\t/**\n\t * Returns information about a file\n\t *\n\t * Returns information about a single file.\n\t * The entry field will be null if the path does not exist\n\t * */\n\tstat({path,owner}) { return this.$publish('stat', {path,owner})}\n\t/**Updates a file's metadata*/\n\tupdateMeta({path,metadataFiles,metadata,owner}) { return this.$publish('updateMeta', {path,metadataFiles,metadata,owner})}\n}\n/**\n * User directory service\n *\n * User directory service\n * */\n/**\n * User API for user information\n *\n * @access public\n * */\nexport class Userdir extends Service {\n\t/**\n\t * Get default deployment id associated to Userdir service\n\t * @return {string}\n\t */\n\tstatic get DEFAULT_DEPLOYMENT_ID() {\n\t\treturn 'userdir_0'\n\t}\n\t/**Searches for users matching the request*/\n\tsearch({requestId,query,page}) { return this.$publish('search', {requestId,query,page})}\n\t/**Requests public data for the specified users*/\n\tuserInfo({userKeys}) { return this.$publish('userInfo', {userKeys})}\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/mapping/services.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "class",
    "name": "Aggreg",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Aggreg",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Aggreg}",
    "description": "User API for item aggregation\n\nUsers can push data and be notified of aggregated data.\nThis service does not allow you to read the data. To achieve that kind of behavior, you could configure a callback to store the data.",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 218,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Aggreg",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Aggreg.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Aggreg service",
    "lineNumber": 23,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "push",
    "memberof": "src/mapping/services.js~Aggreg",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Aggreg#push",
    "access": "public",
    "description": "Pushes some data\n\nPushes the given data.\nAll the items are processed according to the defined rules.\nAt least one push for a given item is needed during a time period to trigger processing and calling of the corresponding callback verb/macro.",
    "lineNumber": 33,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"items\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "items": null,
          "owner": null
        },
        "defaultValue": "{\"items\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "class",
    "name": "Stack",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Stack",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Stack}",
    "description": "Data stack user API\n\nData is stored on a per user basis. However, notifications can be sent to a configurable set of listeners.\nStack names are arbitrary and do not need to be explicitly initialized.",
    "lineNumber": 49,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 221,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Stack.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Stack service",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "getListeners",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#getListeners",
    "access": "public",
    "description": "Lists the listeners\n\nReturns the whole list of listeners for the given stack.",
    "lineNumber": 62,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"stack\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "stack": null,
          "owner": null
        },
        "defaultValue": "{\"stack\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "list",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#list",
    "access": "public",
    "description": "Lists content\n\nReturns a paginated list of contents for the given stack.\nContent is sorted according to the statically configured order.",
    "lineNumber": 69,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"stack\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "stack": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"stack\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "purge",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#purge",
    "access": "public",
    "description": "Empties a stack\n\nRemoves all items from the given stack.",
    "lineNumber": 75,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"stack\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "stack": null,
          "owner": null
        },
        "defaultValue": "{\"stack\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "push",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#push",
    "access": "public",
    "description": "Pushes an item\n\nPushes an item onto the given stack.\nThe stack does not need to be created.",
    "lineNumber": 82,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"stack\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "stack": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"stack\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "remove",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#remove",
    "access": "public",
    "description": "Removes items\n\nRemoves the item with the given guid from the given stack.",
    "lineNumber": 88,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"guids\": *, \"stack\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "guids": null,
          "stack": null,
          "owner": null
        },
        "defaultValue": "{\"guids\":null,\"stack\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "setListeners",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#setListeners",
    "access": "public",
    "description": "Sets the listeners\n\nSets the listeners for the given stack.",
    "lineNumber": 94,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"listeners\": *, \"stack\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "listeners": null,
          "stack": null,
          "owner": null
        },
        "defaultValue": "{\"listeners\":null,\"stack\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "update",
    "memberof": "src/mapping/services.js~Stack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Stack#update",
    "access": "public",
    "description": "Updates an item\n\nUpdates an existing item of the given stack.\nThe item MUST exist prior to the call.",
    "lineNumber": 101,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"guid\": *, \"stack\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "guid": null,
          "stack": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"guid\":null,\"stack\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "class",
    "name": "Echo",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Echo",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Echo}",
    "description": "Echo service\n\nSimple echo service, for development purposes.",
    "lineNumber": 114,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 230,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Echo",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Echo.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Echo service",
    "lineNumber": 119,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "echo",
    "memberof": "src/mapping/services.js~Echo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Echo#echo",
    "access": "public",
    "description": "Echoes an object\n\nEchoes an object: the server will echo that object on channel 'echo' for the current user.",
    "lineNumber": 127,
    "params": [
      {
        "name": "parameter",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "class",
    "name": "Game",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Game",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Game}",
    "description": "User API for games\n\nUsers can list, start, join games, and play.",
    "lineNumber": 141,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 233,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Game.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Game service",
    "lineNumber": 146,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "available",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Game#available",
    "access": "public",
    "description": "Lists game types\n\nReturns the list of game types supported by the server and the currently registered game engines.",
    "lineNumber": 154,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "join",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Game#join",
    "access": "public",
    "description": "A user joins a game",
    "lineNumber": 156,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"role\": *, \"gameId\": *, \"userId\": *, \"userName\": *}"
        ],
        "defaultRaw": {
          "role": null,
          "gameId": null,
          "userId": null,
          "userName": null
        },
        "defaultValue": "{\"role\":null,\"gameId\":null,\"userId\":null,\"userName\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "organize",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Game#organize",
    "access": "public",
    "description": "Organizes a game",
    "lineNumber": 158,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"type\": *, \"owner\": *, \"options\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "owner": null,
          "options": null
        },
        "defaultValue": "{\"type\":null,\"owner\":null,\"options\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "play",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Game#play",
    "access": "public",
    "description": "Gives some command to the game engine",
    "lineNumber": 160,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"gameId\": *, \"userId\": *, \"data\": *}"
        ],
        "defaultRaw": {
          "gameId": null,
          "userId": null,
          "data": null
        },
        "defaultValue": "{\"gameId\":null,\"userId\":null,\"data\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "start",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Game#start",
    "access": "public",
    "description": "Starts a game",
    "lineNumber": 162,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"gameId\": *}"
        ],
        "defaultRaw": {
          "gameId": null
        },
        "defaultValue": "{\"gameId\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "unjoin",
    "memberof": "src/mapping/services.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Game#unjoin",
    "access": "public",
    "description": "A user cancels joining a game",
    "lineNumber": 164,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"role\": *, \"gameId\": *, \"userId\": *, \"userName\": *}"
        ],
        "defaultRaw": {
          "role": null,
          "gameId": null,
          "userId": null,
          "userName": null
        },
        "defaultValue": "{\"role\":null,\"gameId\":null,\"userId\":null,\"userName\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "class",
    "name": "GameEngine",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~GameEngine",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{GameEngine}",
    "description": "Game Engine API\n\nThe Game Engine API is for game engine clients, not end-users.",
    "lineNumber": 172,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 241,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~GameEngine.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to GameEngine service",
    "lineNumber": 177,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "join_result",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GameEngine#join_result",
    "access": "public",
    "description": "Notify the result for a join request\n\nA Game Engine notifies the STR of the result of a join request that it received on join_callback",
    "lineNumber": 185,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"msgId\": *, \"payload\": *, \"error\": *, \"callerId\": *}"
        ],
        "defaultRaw": {
          "msgId": null,
          "payload": null,
          "error": null,
          "callerId": null
        },
        "defaultValue": "{\"msgId\":null,\"payload\":null,\"error\":null,\"callerId\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "organize_result",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GameEngine#organize_result",
    "access": "public",
    "description": "Notify the result for an organization request\n\nA Game Engine notifies the STR of the result of an organization request that it received on organize_callback",
    "lineNumber": 191,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"msgId\": *, \"payload\": *, \"error\": *, \"callerId\": *}"
        ],
        "defaultRaw": {
          "msgId": null,
          "payload": null,
          "error": null,
          "callerId": null
        },
        "defaultValue": "{\"msgId\":null,\"payload\":null,\"error\":null,\"callerId\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "register",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GameEngine#register",
    "access": "public",
    "description": "Registers a game engine\n\nA client registers itself to the STR as a Game Engine.\nThe STR may, from now on, dispatch game of the given game type to said client.\nUnregistration is done automatically on logoff.",
    "lineNumber": 199,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"maxGames\": *, \"gameInfo\": *, \"location\": *}"
        ],
        "defaultRaw": {
          "maxGames": null,
          "gameInfo": null,
          "location": null
        },
        "defaultValue": "{\"maxGames\":null,\"gameInfo\":null,\"location\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "start_result",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GameEngine#start_result",
    "access": "public",
    "description": "Notify the result for a start request\n\nA Game Engine notifies the STR of the result of a start request that it received on start_callback",
    "lineNumber": 205,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"gameId\": *}"
        ],
        "defaultRaw": {
          "gameId": null
        },
        "defaultValue": "{\"gameId\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "state",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GameEngine#state",
    "access": "public",
    "description": "Notify a game event\n\nA Game Engine notifies the STR of some arbitrary game event.",
    "lineNumber": 211,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"status\": *, \"gameId\": *, \"data\": *}"
        ],
        "defaultRaw": {
          "status": null,
          "gameId": null,
          "data": null
        },
        "defaultValue": "{\"status\":null,\"gameId\":null,\"data\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "unjoin_result",
    "memberof": "src/mapping/services.js~GameEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GameEngine#unjoin_result",
    "access": "public",
    "description": "Notify the result for an unjoin request\n\nA Game Engine notifies the STR of the result of an unjoin request that it received on unjoin_callback",
    "lineNumber": 217,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"msgId\": *, \"payload\": *, \"error\": *, \"callerId\": *}"
        ],
        "defaultRaw": {
          "msgId": null,
          "payload": null,
          "error": null,
          "callerId": null
        },
        "defaultValue": "{\"msgId\":null,\"payload\":null,\"error\":null,\"callerId\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "class",
    "name": "Gda",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Gda",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Gda}",
    "description": "GDA User API\n\nUser API for Generic Data Access.\nThe data are stored on a per-user basis.\nUsers can put, get, list their data.",
    "lineNumber": 232,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 249,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Gda.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Gda service",
    "lineNumber": 237,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "get",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#get",
    "access": "public",
    "description": "Asks for a data row\n\nReturns a full data row.",
    "lineNumber": 245,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"key\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "key": null,
          "owner": null
        },
        "defaultValue": "{\"table\":null,\"key\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "getCells",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#getCells",
    "access": "public",
    "description": "Asks for a data cell\n\nReturns a precise list of cells from a column in a data row.",
    "lineNumber": 251,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"key\": *, \"key2\": *, \"owner\": *, \"column\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "key": null,
          "key2": null,
          "owner": null,
          "column": null
        },
        "defaultValue": "{\"table\":null,\"key\":null,\"key2\":null,\"owner\":null,\"column\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "inc",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#inc",
    "access": "public",
    "description": "Increments an integer value\n\nIncrements a cell 64-bit signed integer value and returns the result in the data field.\nThe increment is atomic : if you concurrently increment 10 times a value by 1, the final result will be the initial value plus 10. The actual individual resulting values seen by the 10 concurrent callers may vary discontinuously, with duplicates : at least one of them will see the final (+10) result.",
    "lineNumber": 258,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"data\": *, \"key\": *, \"key2\": *, \"owner\": *, \"column\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "data": null,
          "key": null,
          "key2": null,
          "owner": null,
          "column": null
        },
        "defaultValue": "{\"table\":null,\"data\":null,\"key\":null,\"key2\":null,\"owner\":null,\"column\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "list",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#list",
    "access": "public",
    "description": "Asks for a list of rows\n\nReturns a paginated list of rows from the given table.",
    "lineNumber": 264,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"columns\": *, \"table\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "columns": null,
          "table": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"columns\":null,\"table\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "put",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#put",
    "access": "public",
    "description": "Puts some data into a cell\n\nCreates or replaces the contents of a particular cell.",
    "lineNumber": 270,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"data\": *, \"key\": *, \"key2\": *, \"owner\": *, \"column\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "data": null,
          "key": null,
          "key2": null,
          "owner": null,
          "column": null
        },
        "defaultValue": "{\"table\":null,\"data\":null,\"key\":null,\"key2\":null,\"owner\":null,\"column\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "puts",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#puts",
    "access": "public",
    "description": "Puts several rows\n\nCreates or replaces the (maybe partial) contents of a collection of rows.\nThis method only creates or replaces cells for non-null input values.",
    "lineNumber": 277,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"rows\": *, \"table\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "rows": null,
          "table": null,
          "owner": null
        },
        "defaultValue": "{\"rows\":null,\"table\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "range",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#range",
    "access": "public",
    "description": "Asks for a range of rows\n\nReturns a paginated range of rows from the given table.\nA range consists of consecutive rows from the start key (inclusive) to the stop key (exclusive).\nYou can specify partial keys for the start and stop fields.",
    "lineNumber": 285,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"columns\": *, \"start\": *, \"table\": *, \"stop\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "columns": null,
          "start": null,
          "table": null,
          "stop": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"columns\":null,\"start\":null,\"table\":null,\"stop\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "removeCell",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#removeCell",
    "access": "public",
    "description": "Removes one cell inside a column of a row\n\nRemoves only one cell of the given column of the given row from the given table.",
    "lineNumber": 291,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"key\": *, \"key2\": *, \"owner\": *, \"column\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "key": null,
          "key2": null,
          "owner": null,
          "column": null
        },
        "defaultValue": "{\"table\":null,\"key\":null,\"key2\":null,\"owner\":null,\"column\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "removeColumn",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#removeColumn",
    "access": "public",
    "description": "Removes one full column of a row\n\nRemoves all cells of the given column of the given row from the given table.",
    "lineNumber": 297,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"key\": *, \"owner\": *, \"column\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "key": null,
          "owner": null,
          "column": null
        },
        "defaultValue": "{\"table\":null,\"key\":null,\"owner\":null,\"column\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "removeRange",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#removeRange",
    "access": "public",
    "description": "Removes a range of rows\n\nRemoves the specified columns of the given range of rows from the given table.",
    "lineNumber": 303,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"columns\": *, \"start\": *, \"table\": *, \"stop\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "columns": null,
          "start": null,
          "table": null,
          "stop": null,
          "owner": null
        },
        "defaultValue": "{\"columns\":null,\"start\":null,\"table\":null,\"stop\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "removeRow",
    "memberof": "src/mapping/services.js~Gda",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Gda#removeRow",
    "access": "public",
    "description": "Removes one full row\n\nRemoves all columns of the given row from the given table.",
    "lineNumber": 309,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"table\": *, \"key\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "table": null,
          "key": null,
          "owner": null
        },
        "defaultValue": "{\"table\":null,\"key\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "class",
    "name": "Remoting",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Remoting",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Remoting}",
    "description": "User API for remote control",
    "lineNumber": 323,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 262,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Remoting.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Remoting service",
    "lineNumber": 328,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "addListener",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#addListener",
    "access": "public",
    "description": "Adds a listener\n\nA user requests notifications from a device owned by anyone who granted him the right authorizations.\nWhenever the device calls 'notify', notifications will be sent to the caller of this verb.",
    "lineNumber": 337,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"fromResource\": *, \"cmd\": *, \"from\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "fromResource": null,
          "cmd": null,
          "from": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"resource\":null,\"fromResource\":null,\"cmd\":null,\"from\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "capabilities",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#capabilities",
    "access": "public",
    "description": "Response to 'getCapabilities'",
    "lineNumber": 339,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"askingResource\": *, \"capabilities\": *, \"answeringResource\": *}"
        ],
        "defaultRaw": {
          "askingResource": null,
          "capabilities": null,
          "answeringResource": null
        },
        "defaultValue": "{\"askingResource\":null,\"capabilities\":null,\"answeringResource\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "execute",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#execute",
    "access": "public",
    "description": "Executes a command\n\nA user executes a command on a device owned by anyone who granted him the right authorizations.\nThe command is issued on channel 'command'",
    "lineNumber": 346,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"cmd\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "cmd": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"resource\":null,\"cmd\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "getCapabilities",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#getCapabilities",
    "access": "public",
    "description": "Requests capabilities\n\nA user requests all his devices for the whole list of their capabilities.\nDevices are expected to answer on channel 'capabilities'",
    "lineNumber": 353,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "notify",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#notify",
    "access": "public",
    "description": "Notifies of some event\n\nA device notifies the registered users/devices on this channel.\nThe server forwards the notification to said users.",
    "lineNumber": 360,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"fromResource\": *, \"cmd\": *, \"from\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "fromResource": null,
          "cmd": null,
          "from": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"resource\":null,\"fromResource\":null,\"cmd\":null,\"from\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "ping",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#ping",
    "access": "public",
    "description": "Pings devices\n\nA user requests all devices (of all owners) on which he has authorizations to respond on channel 'pong'",
    "lineNumber": 366,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"action\": *}"
        ],
        "defaultRaw": {
          "action": null
        },
        "defaultValue": "{\"action\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "pong",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#pong",
    "access": "public",
    "description": "Response to ping",
    "lineNumber": 368,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user\": *, \"resource\": *, \"available\": *, \"uid\": *, \"owner\": *, \"action\": *}"
        ],
        "defaultRaw": {
          "user": null,
          "resource": null,
          "available": null,
          "uid": null,
          "owner": null,
          "action": null
        },
        "defaultValue": "{\"user\":null,\"resource\":null,\"available\":null,\"uid\":null,\"owner\":null,\"action\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "removeListener",
    "memberof": "src/mapping/services.js~Remoting",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Remoting#removeListener",
    "access": "public",
    "description": "Removes a listener\n\nA user stops requesting notifications from a device owned by anyone who granted him the right authorizations",
    "lineNumber": 374,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"fromResource\": *, \"cmd\": *, \"from\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "fromResource": null,
          "cmd": null,
          "from": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"resource\":null,\"fromResource\":null,\"cmd\":null,\"from\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "class",
    "name": "GroupManagement",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~GroupManagement",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{GroupManagement}",
    "description": "User API for groups and rights.\n\nGroups are stored per user.\nThis means that two users can own a group with the same identifier. A couple (owner, group) is needed to uniquely identify a group inside a group management service.\nThe triplet (deploymentId, owner, group) is actually needed to fully qualify a group outside of the scope of this service.",
    "lineNumber": 384,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 272,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~GroupManagement.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to GroupManagement service",
    "lineNumber": 389,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "addMe",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#addMe",
    "access": "public",
    "description": "Adds me to a group\n\nAdds me (the caller) to a group.\nThis verb exists so that group owners may grant the right to join their groups without granting the right to add other users to those groups.\nThe 'user' field is implicitly set to the current user's key.",
    "lineNumber": 399,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "addUser",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#addUser",
    "access": "public",
    "description": "Adds a user to a group\n\nAdds the given user to the given group.\nAddition may fail if the given group does not already exist.",
    "lineNumber": 406,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user\": *, \"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "user": null,
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"user\":null,\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "addUsers",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#addUsers",
    "access": "public",
    "description": "Adds users to a group",
    "lineNumber": 408,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"users\": *, \"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "users": null,
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"users\":null,\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "allGroups",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#allGroups",
    "access": "public",
    "description": "Lists my owned groups, with details\n\nReturns the whole list of groups owned by the current user, with their members",
    "lineNumber": 414,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"owner\": *}"
        ],
        "defaultRaw": {
          "owner": null
        },
        "defaultValue": "{\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "createGroup",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#createGroup",
    "access": "public",
    "description": "Creates a group\n\nCreates a group owned by the current user.\nGroup creation may fail if the group already exists.",
    "lineNumber": 421,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"groupName\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "groupName": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"groupName\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "delGroup",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#delGroup",
    "access": "public",
    "description": "Removes a group\n\nRemoves the given group owned by the current user or the given owner.\nAlso removes all grants to that group.",
    "lineNumber": 428,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "delUser",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#delUser",
    "access": "public",
    "description": "Removes a user from a group",
    "lineNumber": 430,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user\": *, \"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "user": null,
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"user\":null,\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "delUsers",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#delUsers",
    "access": "public",
    "description": "Removes users from a group",
    "lineNumber": 432,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"users\": *, \"group\": *, \"groupName\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "users": null,
          "group": null,
          "groupName": null,
          "owner": null
        },
        "defaultValue": "{\"users\":null,\"group\":null,\"groupName\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "exists",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#exists",
    "access": "public",
    "description": "Tests for a group's existence\n\nReturns whether a group exists or not.",
    "lineNumber": 438,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "grant",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#grant",
    "access": "public",
    "description": "Grants a right to a group\n\nThe granting API does not do any check when storing permissions.\nIn particular when granting rights on a verb and resource of another API, the existence of said verb and resource is not checked.",
    "lineNumber": 445,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"group\": *, \"owner\": *, \"action\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "group": null,
          "owner": null,
          "action": null
        },
        "defaultValue": "{\"resource\":null,\"group\":null,\"owner\":null,\"action\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "groupUsers",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#groupUsers",
    "access": "public",
    "description": "Lists the group users\n\nReturns the whole list of users configured inside the given group.",
    "lineNumber": 451,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "groups",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#groups",
    "access": "public",
    "description": "Lists my owned groups\n\nReturns the whole list of groups owned by the current user",
    "lineNumber": 457,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"owner\": *}"
        ],
        "defaultRaw": {
          "owner": null
        },
        "defaultValue": "{\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "listGrants",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#listGrants",
    "access": "public",
    "description": "Lists rights for a group\n\nThis API lists explicitly configured rights.\nEffective rights include configured rights, implicit rights and inherited rights.",
    "lineNumber": 464,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "listPresences",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#listPresences",
    "access": "public",
    "description": "Lists presences for a group\n\nReturns the list of members of the given groups, along with their actual and current presence on the zetapush server.\nThe current implementation does not include information about the particular devices users are connected with.\nIf a user is connected twice with two different devices, two identical entries will be returned.",
    "lineNumber": 472,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "memberOf",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#memberOf",
    "access": "public",
    "description": "Tests membership\n\nTests whether I (the caller) am a member of the given group.\nThis verb exists so that users can determine if they are part of a group without being granted particular rights.\nThe 'user' field is implicitly set to the current user's key.",
    "lineNumber": 480,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"hardFail\": *, \"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "hardFail": null,
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"hardFail\":null,\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "mgrant",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#mgrant",
    "access": "public",
    "description": "Grants rights to a group\n\nGrant several rights at once.",
    "lineNumber": 486,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"actions\": *, \"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "actions": null,
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"resource\":null,\"actions\":null,\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "mrevoke",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#mrevoke",
    "access": "public",
    "description": "Revokes rights for a group",
    "lineNumber": 488,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"actions\": *, \"group\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "actions": null,
          "group": null,
          "owner": null
        },
        "defaultValue": "{\"resource\":null,\"actions\":null,\"group\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "myGroups",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#myGroups",
    "access": "public",
    "description": "Lists the groups I am part of\n\nReturns the whole list of groups the current user is part of.\nGroups may be owned by anyone, including the current user.",
    "lineNumber": 495,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"owner\": *}"
        ],
        "defaultRaw": {
          "owner": null
        },
        "defaultValue": "{\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "revoke",
    "memberof": "src/mapping/services.js~GroupManagement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~GroupManagement#revoke",
    "access": "public",
    "description": "Revokes a right for a group",
    "lineNumber": 497,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"resource\": *, \"group\": *, \"owner\": *, \"action\": *}"
        ],
        "defaultRaw": {
          "resource": null,
          "group": null,
          "owner": null,
          "action": null
        },
        "defaultValue": "{\"resource\":null,\"group\":null,\"owner\":null,\"action\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "class",
    "name": "Httpclient",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Httpclient",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Httpclient}",
    "description": "User API for http requests",
    "lineNumber": 512,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 293,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Httpclient",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Httpclient.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Httpclient service",
    "lineNumber": 517,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "call",
    "memberof": "src/mapping/services.js~Httpclient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Httpclient#call",
    "access": "public",
    "description": "Makes a predefined request\n\nLookups a predefined request by name, and executes it.",
    "lineNumber": 525,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"name\": *, \"requestId\": *}"
        ],
        "defaultRaw": {
          "name": null,
          "requestId": null
        },
        "defaultValue": "{\"name\":null,\"requestId\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "class",
    "name": "MacroDebug",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~MacroDebug",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{MacroDebug}",
    "description": "User API for macro debugging\n\nDebugger API for macro.\nThese API verbs are not intended for use by most developers.",
    "lineNumber": 543,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 296,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~MacroDebug",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~MacroDebug.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to MacroDebug service",
    "lineNumber": 548,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "breakpoint",
    "memberof": "src/mapping/services.js~MacroDebug",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~MacroDebug#breakpoint",
    "access": "public",
    "description": "Enables or disables a breakpoint",
    "lineNumber": 552,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"breakpoint\": *, \"token\": *, \"enabled\": *}"
        ],
        "defaultRaw": {
          "breakpoint": null,
          "token": null,
          "enabled": null
        },
        "defaultValue": "{\"breakpoint\":null,\"token\":null,\"enabled\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "info",
    "memberof": "src/mapping/services.js~MacroDebug",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~MacroDebug#info",
    "access": "public",
    "description": "Requests some information",
    "lineNumber": 554,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"token\": *, \"path\": *, \"exp\": *, \"requestId\": *, \"frame\": *}"
        ],
        "defaultRaw": {
          "token": null,
          "path": null,
          "exp": null,
          "requestId": null,
          "frame": null
        },
        "defaultValue": "{\"token\":null,\"path\":null,\"exp\":null,\"requestId\":null,\"frame\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "livedebug",
    "memberof": "src/mapping/services.js~MacroDebug",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~MacroDebug#livedebug",
    "access": "public",
    "description": "Debugs a previously recorded macro\n\nThe given breakpoints will be honored, causing a suspension of the execution, resumable via 'resume'.\nOnly one debug session can be active at any given time.",
    "lineNumber": 561,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parameters\": *, \"token\": *, \"breakpoints\": *, \"hardFail\": *, \"name\": *, \"requestId\": *, \"debug\": *}"
        ],
        "defaultRaw": {
          "parameters": null,
          "token": null,
          "breakpoints": null,
          "hardFail": null,
          "name": null,
          "requestId": null,
          "debug": null
        },
        "defaultValue": "{\"parameters\":null,\"token\":null,\"breakpoints\":null,\"hardFail\":null,\"name\":null,\"requestId\":null,\"debug\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "resume",
    "memberof": "src/mapping/services.js~MacroDebug",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~MacroDebug#resume",
    "access": "public",
    "description": "Resumes a paused macro",
    "lineNumber": 563,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"token\": *, \"type\": *}"
        ],
        "defaultRaw": {
          "token": null,
          "type": null
        },
        "defaultValue": "{\"token\":null,\"type\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "variable",
    "memberof": "src/mapping/services.js~MacroDebug",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~MacroDebug#variable",
    "access": "public",
    "description": "Sets a variable value",
    "lineNumber": 565,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"token\": *, \"name\": *, \"frame\": *, \"data\": *}"
        ],
        "defaultRaw": {
          "token": null,
          "name": null,
          "frame": null,
          "data": null
        },
        "defaultValue": "{\"token\":null,\"name\":null,\"frame\":null,\"data\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "class",
    "name": "Macro",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Macro",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Macro}",
    "description": "User API for macro execution\n\nSimple errors are reported as usual.\nHowever, the macro execution verbs treat most errors in a particular way : instead of reporting errors on the usual 'error' channel, errors are put in the returned 'MacroCompletion' result.\nThis behavior can be tuned on a per-call basis with the hardFail parameter.\nNote that some particular errors will always behave as if hardFail were true, because they are related to programming errors, or prevent processing from ending gracefully : STACK_OVERFLOW, NO_SUCH_FUNCTION, RAM_EXCEEDED, CYCLES_EXCEEDED, TIME_EXCEEDED, QUOTA_EXCEEDED, RATE_EXCEEDED, BAD_COMPARATOR_VALUE",
    "lineNumber": 576,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 303,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Macro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Macro.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Macro service",
    "lineNumber": 581,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "call",
    "memberof": "src/mapping/services.js~Macro",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Macro#call",
    "access": "public",
    "description": "Plays a previously recorded macro\n\nDO NOT use this verb from inside an enclosing macro when you need the result in order to proceed with the enclosing macro.\nYou can override the default notification channel when defining the macro.",
    "lineNumber": 590,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parameters\": *, \"hardFail\": *, \"name\": *, \"requestId\": *, \"debug\": *}"
        ],
        "defaultRaw": {
          "parameters": null,
          "hardFail": null,
          "name": null,
          "requestId": null,
          "debug": null
        },
        "defaultValue": "{\"parameters\":null,\"hardFail\":null,\"name\":null,\"requestId\":null,\"debug\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "class",
    "name": "Sendmail",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Sendmail",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Sendmail}",
    "description": "Mail service user API\n\nThis service is statically configured with an outgoing SMTP server.\nUsers call the API here to actually send emails.",
    "lineNumber": 604,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 306,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Sendmail",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Sendmail.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Sendmail service",
    "lineNumber": 609,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "class",
    "name": "Messaging",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Messaging",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Messaging}",
    "description": "Messaging service\n\nSimple and flexible user-to-user or user-to-group messaging service.",
    "lineNumber": 624,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 308,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Messaging",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Messaging.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Messaging service",
    "lineNumber": 629,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "send",
    "memberof": "src/mapping/services.js~Messaging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Messaging#send",
    "access": "public",
    "description": "Sends a message to a target\n\nSends the given message to the specified target on the given (optional) channel.\nThe administratively given default channel name is used when none is provided in the message itself.",
    "lineNumber": 638,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"target\": *, \"channel\": *, \"data\": *}"
        ],
        "defaultRaw": {
          "target": null,
          "channel": null,
          "data": null
        },
        "defaultValue": "{\"target\":null,\"channel\":null,\"data\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "class",
    "name": "Queue",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Queue",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Queue}",
    "description": "Producer / consumer real-time API\n\nTask producers submits their tasks.\nThe server dispatches the tasks.\nConsumers process them and report completion back to the server.\nTasks are global to the service (i.e. NOT per user).",
    "lineNumber": 655,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 311,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Queue",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Queue.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Queue service",
    "lineNumber": 660,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "call",
    "memberof": "src/mapping/services.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Queue#call",
    "access": "public",
    "description": "Submits a task\n\nProducer API.\nA task producer submits the given task to the server.\nThe server will find a tasker with processing capacity and dispatch the task.\nThe task result will be returned to the caller.\nWhen called from inside a macro, the comsumer generated result is available for further use.",
    "lineNumber": 672,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"description\": *, \"originBusinessId\": *, \"originDeploymentId\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "description": null,
          "originBusinessId": null,
          "originDeploymentId": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"description\":null,\"originBusinessId\":null,\"originDeploymentId\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "done",
    "memberof": "src/mapping/services.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Queue#done",
    "access": "public",
    "description": "Notifies completion of a task\n\nConsumer API.\nThe tasker notifies completion of the given task to the server.\nThe tasker can optionally include a result or an error code.",
    "lineNumber": 680,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"result\": *, \"taskId\": *, \"success\": *}"
        ],
        "defaultRaw": {
          "result": null,
          "taskId": null,
          "success": null
        },
        "defaultValue": "{\"result\":null,\"taskId\":null,\"success\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "register",
    "memberof": "src/mapping/services.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Queue#register",
    "access": "public",
    "description": "Registers a consumer\n\nConsumer API.\nRegisters the current user resource as an available task consumer.\nTasks will be then dispatched to that consumer.",
    "lineNumber": 688,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"capacity\": *}"
        ],
        "defaultRaw": {
          "capacity": null
        },
        "defaultValue": "{\"capacity\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "submit",
    "memberof": "src/mapping/services.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Queue#submit",
    "access": "public",
    "description": "Submits a task\n\nProducer API.\nA task producer submits the given task to the server.\nThe server will find a tasker with processing capacity and dispatch the task.\nThe task result will be ignored : the producer will not receive any notification of any kind, even in case of errors (including capacity exceeded errors).\nThis verb will return immediately : you can use this API to asynchronously submit a task.",
    "lineNumber": 698,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"description\": *, \"originBusinessId\": *, \"originDeploymentId\": *, \"data\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "description": null,
          "originBusinessId": null,
          "originDeploymentId": null,
          "data": null,
          "owner": null
        },
        "defaultValue": "{\"description\":null,\"originBusinessId\":null,\"originDeploymentId\":null,\"data\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "unregister",
    "memberof": "src/mapping/services.js~Queue",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Queue#unregister",
    "access": "public",
    "description": "Unregisters a consumer\n\nConsumer API.\nUnregisters the current user resource as an available task consumer.\nAll non finished tasks are returned to the server.",
    "lineNumber": 706,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "class",
    "name": "Notif",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Notif",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Notif}",
    "description": "Notification User API\n\nUser API for notifications.\nFor notifications to work properly, it is imperative that the resource name of a device remain constant over time.",
    "lineNumber": 723,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 318,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Notif",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Notif.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Notif service",
    "lineNumber": 728,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "class",
    "name": "Rdbms",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Rdbms",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Rdbms}",
    "description": "RDBMS User API\n\nUser API for SQL queries.\nContrary to GDA or Stacks, the data are not stored on a per-user basis.\nUsers can store, get, list their data.",
    "lineNumber": 745,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 320,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Rdbms",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Rdbms.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Rdbms service",
    "lineNumber": 750,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "class",
    "name": "Sms_ovh",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Sms_ovh",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Sms_ovh}",
    "description": "SMS service\n\nUser API for SMS.",
    "lineNumber": 767,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 322,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Sms_ovh",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Sms_ovh.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Sms_ovh service",
    "lineNumber": 772,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "class",
    "name": "Cron",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Cron",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Cron}",
    "description": "User API for the Scheduler\n\nUser endpoints for scheduling : users can schedule, list and delete tasks.\nTasks are stored on a per-user basis: a task will run with the priviledges of the user who stored it.\nTasks are run on the server and thus can call api verbs marked as server-only.",
    "lineNumber": 790,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 324,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Cron",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Cron.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Cron service",
    "lineNumber": 795,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "list",
    "memberof": "src/mapping/services.js~Cron",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Cron#list",
    "access": "public",
    "description": "List the configured tasks\n\nReturns a paginated list of the asking user's tasks.",
    "lineNumber": 803,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"start\": *, \"stop\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "start": null,
          "stop": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"start\":null,\"stop\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "class",
    "name": "Search",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Search",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Search}",
    "description": "ElasticSearch Service\n\nThis API is a very thin wrapper around ElasticSearch's API.",
    "lineNumber": 819,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 327,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Search",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Search.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Search service",
    "lineNumber": 824,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "delete",
    "memberof": "src/mapping/services.js~Search",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Search#delete",
    "access": "public",
    "description": "Deletes data\n\nDeletes a document from the elasticsearch engine by id.",
    "lineNumber": 832,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"type\": *, \"id\": *, \"index\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "id": null,
          "index": null
        },
        "defaultValue": "{\"type\":null,\"id\":null,\"index\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "get",
    "memberof": "src/mapping/services.js~Search",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Search#get",
    "access": "public",
    "description": "Gets data\n\nRetrieves a document from the elasticsearch engine by id.",
    "lineNumber": 838,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"type\": *, \"id\": *, \"index\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "id": null,
          "index": null
        },
        "defaultValue": "{\"type\":null,\"id\":null,\"index\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "index",
    "memberof": "src/mapping/services.js~Search",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Search#index",
    "access": "public",
    "description": "Indexes data\n\nInserts or updates a document into the elasticsearch engine.",
    "lineNumber": 844,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"type\": *, \"id\": *, \"index\": *, \"data\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "id": null,
          "index": null,
          "data": null
        },
        "defaultValue": "{\"type\":null,\"id\":null,\"index\":null,\"data\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "search",
    "memberof": "src/mapping/services.js~Search",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Search#search",
    "access": "public",
    "description": "Searches for data",
    "lineNumber": 846,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"indices\": *, \"query\": *, \"sort\": *, \"page\": *, \"types\": *}"
        ],
        "defaultRaw": {
          "indices": null,
          "query": null,
          "sort": null,
          "page": null,
          "types": null
        },
        "defaultValue": "{\"indices\":null,\"query\":null,\"sort\":null,\"page\":null,\"types\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "class",
    "name": "Template",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Template",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Template}",
    "description": "User API for templates\n\nUsers use this API to evaluate pre-configured templates.",
    "lineNumber": 864,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 333,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Template",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Template.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Template service",
    "lineNumber": 869,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "evaluate",
    "memberof": "src/mapping/services.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Template#evaluate",
    "access": "public",
    "description": "Evaluates a template\n\nEvaluates the given template and returns the result as a string.\nTemplates are parsed the first time they are evaluated. Evaluation may fail early due to a parsing error.",
    "lineNumber": 878,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"languageTag\": *, \"name\": *, \"requestId\": *, \"data\": *}"
        ],
        "defaultRaw": {
          "languageTag": null,
          "name": null,
          "requestId": null,
          "data": null
        },
        "defaultValue": "{\"languageTag\":null,\"name\":null,\"requestId\":null,\"data\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "class",
    "name": "Trigger",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Trigger",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Trigger}",
    "description": "Trigger service\n\nRegister listeners and trigger events.",
    "lineNumber": 892,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 336,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Trigger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Trigger.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Trigger service",
    "lineNumber": 897,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "class",
    "name": "Zpfs_s3",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Zpfs_s3",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Zpfs_s3}",
    "description": "User API for file management\n\nUser API for virtual file management and http file upload\nThis API contains all the verbs needed to browse, upload and remove files.\nFiles are stored on a per-user basis: each user has his or her own whole virtual filesystem.\nUploading a file is a 3-step process : request an upload URL, upload via HTTP, notify this service of completion.",
    "lineNumber": 915,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 338,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Zpfs_s3.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Zpfs_s3 service",
    "lineNumber": 920,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "cp",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#cp",
    "access": "public",
    "description": "Copies a file\n\nCopies a file or folder (recursively) to a new location.\nMay fail if the target location is not empty.",
    "lineNumber": 929,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "du",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#du",
    "access": "public",
    "description": "Returns disk usage\n\nReturns an recursively aggregated number of used bytes, starting at the given path.",
    "lineNumber": 935,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "link",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#link",
    "access": "public",
    "description": "Links a file\n\nLinks a file or folder to another location.\nMay fail if the target location is not empty.",
    "lineNumber": 942,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "ls",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#ls",
    "access": "public",
    "description": "Lists a folder content\n\nReturns a paginated list of the folder's content.",
    "lineNumber": 948,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"folder\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "folder": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"folder\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "mkdir",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#mkdir",
    "access": "public",
    "description": "Creates a folder\n\nCreates a new folder.\nMay fail if the target location is not empty.",
    "lineNumber": 955,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parents\": *, \"folder\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "parents": null,
          "folder": null,
          "owner": null
        },
        "defaultValue": "{\"parents\":null,\"folder\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "mv",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#mv",
    "access": "public",
    "description": "Moves a file\n\nMoves a file or folder (recursively) to a new location.\nMay fail if the target location is not empty.",
    "lineNumber": 962,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "newFile",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#newFile",
    "access": "public",
    "description": "Notifies of upload completion\n\nThe client application calls this verb to notify that it's done uploading to the cloud.\nCalling that verb MAY trigger additional events such as thumbnail/metadata creation.",
    "lineNumber": 969,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"tags\": *, \"guid\": *, \"metadata\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "tags": null,
          "guid": null,
          "metadata": null,
          "owner": null
        },
        "defaultValue": "{\"tags\":null,\"guid\":null,\"metadata\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "newUploadUrl",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#newUploadUrl",
    "access": "public",
    "description": "Requests an upload URL\n\nRequests an HTTP upload URL.\nThe URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.",
    "lineNumber": 976,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"contentType\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "contentType": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"contentType\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "rm",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#rm",
    "access": "public",
    "description": "Removes a file\n\nRemoves a file or folder (recursively).",
    "lineNumber": 982,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "snapshot",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#snapshot",
    "access": "public",
    "description": "Creates a snapshot in a new folder\n\nCreates a new folder and then copies the given files inside",
    "lineNumber": 988,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parents\": *, \"folder\": *, \"items\": *, \"flatten\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "parents": null,
          "folder": null,
          "items": null,
          "flatten": null,
          "owner": null
        },
        "defaultValue": "{\"parents\":null,\"folder\":null,\"items\":null,\"flatten\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "stat",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#stat",
    "access": "public",
    "description": "Returns information about a file\n\nReturns information about a single file.\nThe entry field will be null if the path does not exist",
    "lineNumber": 995,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "updateMeta",
    "memberof": "src/mapping/services.js~Zpfs_s3",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3#updateMeta",
    "access": "public",
    "description": "Updates a file's metadata",
    "lineNumber": 997,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"metadataFiles\": *, \"metadata\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "metadataFiles": null,
          "metadata": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"metadataFiles\":null,\"metadata\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "Zpfs_hdfs",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Zpfs_hdfs",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Zpfs_hdfs}",
    "description": "User API for local file management\n\nUser API for file content manipulation",
    "lineNumber": 1010,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 352,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Zpfs_hdfs.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Zpfs_hdfs service",
    "lineNumber": 1015,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "cp",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#cp",
    "access": "public",
    "description": "Copies a file\n\nCopies a file or folder (recursively) to a new location.\nMay fail if the target location is not empty.",
    "lineNumber": 1024,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "du",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#du",
    "access": "public",
    "description": "Returns disk usage\n\nReturns an recursively aggregated number of used bytes, starting at the given path.",
    "lineNumber": 1030,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "link",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#link",
    "access": "public",
    "description": "Links a file\n\nLinks a file or folder to another location.\nMay fail if the target location is not empty.",
    "lineNumber": 1037,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "ls",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#ls",
    "access": "public",
    "description": "Lists a folder content\n\nReturns a paginated list of the folder's content.",
    "lineNumber": 1043,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"folder\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "folder": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"folder\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "mkdir",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#mkdir",
    "access": "public",
    "description": "Creates a folder\n\nCreates a new folder.\nMay fail if the target location is not empty.",
    "lineNumber": 1050,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parents\": *, \"folder\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "parents": null,
          "folder": null,
          "owner": null
        },
        "defaultValue": "{\"parents\":null,\"folder\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "mv",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#mv",
    "access": "public",
    "description": "Moves a file\n\nMoves a file or folder (recursively) to a new location.\nMay fail if the target location is not empty.",
    "lineNumber": 1057,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "newFile",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#newFile",
    "access": "public",
    "description": "Notifies of upload completion\n\nThe client application calls this verb to notify that it's done uploading to the cloud.\nCalling that verb MAY trigger additional events such as thumbnail/metadata creation.",
    "lineNumber": 1064,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"tags\": *, \"guid\": *, \"metadata\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "tags": null,
          "guid": null,
          "metadata": null,
          "owner": null
        },
        "defaultValue": "{\"tags\":null,\"guid\":null,\"metadata\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "newUploadUrl",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#newUploadUrl",
    "access": "public",
    "description": "Requests an upload URL\n\nRequests an HTTP upload URL.\nThe URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.",
    "lineNumber": 1071,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"contentType\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "contentType": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"contentType\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "rm",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#rm",
    "access": "public",
    "description": "Removes a file\n\nRemoves a file or folder (recursively).",
    "lineNumber": 1077,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "snapshot",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#snapshot",
    "access": "public",
    "description": "Creates a snapshot in a new folder\n\nCreates a new folder and then copies the given files inside",
    "lineNumber": 1083,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parents\": *, \"folder\": *, \"items\": *, \"flatten\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "parents": null,
          "folder": null,
          "items": null,
          "flatten": null,
          "owner": null
        },
        "defaultValue": "{\"parents\":null,\"folder\":null,\"items\":null,\"flatten\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "stat",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#stat",
    "access": "public",
    "description": "Returns information about a file\n\nReturns information about a single file.\nThe entry field will be null if the path does not exist",
    "lineNumber": 1090,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "method",
    "name": "updateMeta",
    "memberof": "src/mapping/services.js~Zpfs_hdfs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_hdfs#updateMeta",
    "access": "public",
    "description": "Updates a file's metadata",
    "lineNumber": 1092,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"metadataFiles\": *, \"metadata\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "metadataFiles": null,
          "metadata": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"metadataFiles\":null,\"metadata\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "class",
    "name": "Zpfs_s3compat",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Zpfs_s3compat",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Zpfs_s3compat}",
    "description": "User API for file management\n\nUser API for virtual file management and http file upload\nThis API contains all the verbs needed to browse, upload and remove files.\nFiles are stored on a per-user basis: each user has his or her own whole virtual filesystem.\nUploading a file is a 3-step process : request an upload URL, upload via HTTP, notify this service of completion.",
    "lineNumber": 1108,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 366,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Zpfs_s3compat.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Zpfs_s3compat service",
    "lineNumber": 1113,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "cp",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#cp",
    "access": "public",
    "description": "Copies a file\n\nCopies a file or folder (recursively) to a new location.\nMay fail if the target location is not empty.",
    "lineNumber": 1122,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "du",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#du",
    "access": "public",
    "description": "Returns disk usage\n\nReturns an recursively aggregated number of used bytes, starting at the given path.",
    "lineNumber": 1128,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "link",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#link",
    "access": "public",
    "description": "Links a file\n\nLinks a file or folder to another location.\nMay fail if the target location is not empty.",
    "lineNumber": 1135,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "ls",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#ls",
    "access": "public",
    "description": "Lists a folder content\n\nReturns a paginated list of the folder's content.",
    "lineNumber": 1141,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"folder\": *, \"owner\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "folder": null,
          "owner": null,
          "page": null
        },
        "defaultValue": "{\"folder\":null,\"owner\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "mkdir",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#mkdir",
    "access": "public",
    "description": "Creates a folder\n\nCreates a new folder.\nMay fail if the target location is not empty.",
    "lineNumber": 1148,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parents\": *, \"folder\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "parents": null,
          "folder": null,
          "owner": null
        },
        "defaultValue": "{\"parents\":null,\"folder\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "mv",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#mv",
    "access": "public",
    "description": "Moves a file\n\nMoves a file or folder (recursively) to a new location.\nMay fail if the target location is not empty.",
    "lineNumber": 1155,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"oldPath\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "oldPath": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"oldPath\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "newFile",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#newFile",
    "access": "public",
    "description": "Notifies of upload completion\n\nThe client application calls this verb to notify that it's done uploading to the cloud.\nCalling that verb MAY trigger additional events such as thumbnail/metadata creation.",
    "lineNumber": 1162,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"tags\": *, \"guid\": *, \"metadata\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "tags": null,
          "guid": null,
          "metadata": null,
          "owner": null
        },
        "defaultValue": "{\"tags\":null,\"guid\":null,\"metadata\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "newUploadUrl",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#newUploadUrl",
    "access": "public",
    "description": "Requests an upload URL\n\nRequests an HTTP upload URL.\nThe URL contains temporary credentials (typically valid for a few minutes) and is meant for immediate use.",
    "lineNumber": 1169,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"contentType\": *, \"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "contentType": null,
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"contentType\":null,\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "rm",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#rm",
    "access": "public",
    "description": "Removes a file\n\nRemoves a file or folder (recursively).",
    "lineNumber": 1175,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "snapshot",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#snapshot",
    "access": "public",
    "description": "Creates a snapshot in a new folder\n\nCreates a new folder and then copies the given files inside",
    "lineNumber": 1181,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"parents\": *, \"folder\": *, \"items\": *, \"flatten\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "parents": null,
          "folder": null,
          "items": null,
          "flatten": null,
          "owner": null
        },
        "defaultValue": "{\"parents\":null,\"folder\":null,\"items\":null,\"flatten\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "stat",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#stat",
    "access": "public",
    "description": "Returns information about a file\n\nReturns information about a single file.\nThe entry field will be null if the path does not exist",
    "lineNumber": 1188,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "updateMeta",
    "memberof": "src/mapping/services.js~Zpfs_s3compat",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Zpfs_s3compat#updateMeta",
    "access": "public",
    "description": "Updates a file's metadata",
    "lineNumber": 1190,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *, \"metadataFiles\": *, \"metadata\": *, \"owner\": *}"
        ],
        "defaultRaw": {
          "path": null,
          "metadataFiles": null,
          "metadata": null,
          "owner": null
        },
        "defaultValue": "{\"path\":null,\"metadataFiles\":null,\"metadata\":null,\"owner\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "class",
    "name": "Userdir",
    "memberof": "src/mapping/services.js",
    "static": true,
    "longname": "src/mapping/services.js~Userdir",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/mapping/services.js",
    "importStyle": "{Userdir}",
    "description": "User API for user information",
    "lineNumber": 1202,
    "interface": false,
    "extends": [
      "src/mapping/core.js~Service"
    ]
  },
  {
    "__docId__": 380,
    "kind": "get",
    "name": "DEFAULT_DEPLOYMENT_ID",
    "memberof": "src/mapping/services.js~Userdir",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/mapping/services.js~Userdir.DEFAULT_DEPLOYMENT_ID",
    "access": "public",
    "description": "Get default deployment id associated to Userdir service",
    "lineNumber": 1207,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "search",
    "memberof": "src/mapping/services.js~Userdir",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Userdir#search",
    "access": "public",
    "description": "Searches for users matching the request",
    "lineNumber": 1211,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"requestId\": *, \"query\": *, \"page\": *}"
        ],
        "defaultRaw": {
          "requestId": null,
          "query": null,
          "page": null
        },
        "defaultValue": "{\"requestId\":null,\"query\":null,\"page\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "userInfo",
    "memberof": "src/mapping/services.js~Userdir",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mapping/services.js~Userdir#userInfo",
    "access": "public",
    "description": "Requests public data for the specified users",
    "lineNumber": 1213,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"userKeys\": *}"
        ],
        "defaultRaw": {
          "userKeys": null
        },
        "defaultValue": "{\"userKeys\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "file",
    "name": "src/utils/index.js",
    "content": "/**\n * Match unsecure pattern web\n * @type {RegExp}\n */\nconst HTTP_PATTERN = /^http:\\/\\/|^\\/\\//\n\n/**\n * Http protocol\n * @type {string}\n */\nconst HTTP_PROTOCOL = 'http:'\n\n/**\n * Https protocol\n * @type {string}\n */\nconst HTTPS_PROTOCOL = 'https:'\n\n/**\n * Alpha numeric dictionary\n */\nconst DICTIONARY = 'abcdefghijklmnopqrstuvwxyz0123456789'\n\n/**\n * Default ZetaPush API URL\n * @access private\n */\nexport const API_URL = 'https://api.zpush.io/'\n\n/**\n * Force ssl based protocol for network echange\n * Cross Env (Browser/Node) test\n * @access private\n * @type boolean\n */\nexport const FORCE_HTTPS = typeof location === 'undefined' ? false : location.protocol === HTTPS_PROTOCOL\n\n/**\n * @access private\n * @param {string} apiUrl\n * @return {string}\n */\nconst normalizeApiUrl = (apiUrl) => {\n  const last = apiUrl.charAt(apiUrl.length - 1)\n  const SLASH = '/'\n  return last === SLASH ? apiUrl : apiUrl + SLASH\n}\n\n/**\n * @access private\n * @param {Array<Object>} list\n * @return {Object}\n */\nexport const shuffle = (list) => {\n  const index = Math.floor(Math.random() * list.length)\n  return list[index]\n}\n\n/**\n * @access private\n * @param {string} url\n * @param {boolean} forceHttps\n * @return {string}\n */\nexport const getSecureUrl = (url, forceHttps) => {\n  return forceHttps ? url.replace(HTTP_PATTERN, `${HTTPS_PROTOCOL}//`) : url\n}\n\n/**\n * @access private\n * @param {{apiUrl: string, sandboxId: string, forceHttps: boolean, transports: Transports}} parameters\n * @return {Promise}\n */\nexport const getServers = ({ apiUrl, sandboxId, forceHttps, transports }) => {\n  const normalizedSecuresApiUrl = normalizeApiUrl(getSecureUrl(apiUrl, forceHttps))\n  const url = `${normalizedSecuresApiUrl}${sandboxId}`\n  const options = { protocol: forceHttps ? HTTPS_PROTOCOL : HTTP_PROTOCOL }\n  return transports.fetch(url, options)\n    .then((response) => response.json())\n    // TODO: Replace by a server side implementation when available\n    .then(({ servers }) => servers.map((server) => getSecureUrl(server, forceHttps)))\n}\n\n/**\n * @access private\n * @param Class Derived\n * @param Class Parent\n * @return {boolean}\n */\nexport const isDerivedOf = (Derived, Parent) => {\n  let prototype = Object.getPrototypeOf(Derived)\n  let is = false\n  while (!(is || prototype === null)) {\n    is = prototype === Parent\n    prototype = Object.getPrototypeOf(prototype)\n  }\n  return is\n}\n\n/**\n * Get random id\n * @return {string}\n */\nexport const uuid = (entropy = 7, dictionary = DICTIONARY) => Array.from(Array(entropy)).reduce((previous) => {\n  const next = dictionary.charAt(Math.floor(Math.random() * dictionary.length))\n  return `${previous}${next}`\n}, '')\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 384,
    "kind": "variable",
    "name": "HTTP_PATTERN",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~HTTP_PATTERN",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": null,
    "description": "Match unsecure pattern web",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 385,
    "kind": "variable",
    "name": "HTTP_PROTOCOL",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~HTTP_PROTOCOL",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": null,
    "description": "Http protocol",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 386,
    "kind": "variable",
    "name": "HTTPS_PROTOCOL",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~HTTPS_PROTOCOL",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": null,
    "description": "Https protocol",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 387,
    "kind": "variable",
    "name": "DICTIONARY",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~DICTIONARY",
    "access": "public",
    "export": false,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": null,
    "description": "Alpha numeric dictionary",
    "lineNumber": 22,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "variable",
    "name": "API_URL",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~API_URL",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{API_URL}",
    "description": "Default ZetaPush API URL",
    "lineNumber": 28,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "variable",
    "name": "FORCE_HTTPS",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~FORCE_HTTPS",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{FORCE_HTTPS}",
    "description": "Force ssl based protocol for network echange\nCross Env (Browser/Node) test",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 390,
    "kind": "function",
    "name": "normalizeApiUrl",
    "memberof": "src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/index.js~normalizeApiUrl",
    "access": "private",
    "export": false,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "apiUrl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 391,
    "kind": "function",
    "name": "shuffle",
    "memberof": "src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/index.js~shuffle",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{shuffle}",
    "description": "",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 392,
    "kind": "function",
    "name": "getSecureUrl",
    "memberof": "src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/index.js~getSecureUrl",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{getSecureUrl}",
    "description": "",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "forceHttps",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 393,
    "kind": "function",
    "name": "getServers",
    "memberof": "src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/index.js~getServers",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{getServers}",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "{apiUrl: string, sandboxId: string, forceHttps: boolean, transports: Transports}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 394,
    "kind": "function",
    "name": "isDerivedOf",
    "memberof": "src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/index.js~isDerivedOf",
    "access": "private",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{isDerivedOf}",
    "description": "",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "Class",
        "description": "Derived"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "Class",
        "description": "Parent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 395,
    "kind": "function",
    "name": "uuid",
    "memberof": "src/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/index.js~uuid",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/utils/index.js",
    "importStyle": "{uuid}",
    "description": "Get random id",
    "lineNumber": 104,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "entropy",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 7,
        "defaultValue": "7"
      },
      {
        "name": "dictionary",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DICTIONARY",
        "defaultValue": "DICTIONARY"
      }
    ]
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "src/utils/session-persistence.js",
    "content": "import { platformStorage } from './storage'\n\n/**\n * @type {string}\n */\nexport const ZETAPUSH_SESSION_KEY = 'zetapush.token'\n\n/**\n * Provide abstraction for token persistence\n * @access protected\n */\nexport class SessionPersistenceStrategy {\n  /**\n   * @param {{sandboxId: string, storage: DOMStorage}} parameters\n   */\n  constructor({ sandboxId, storage = platformStorage } = {}) {\n    /**\n     * @access private\n     * @type {string}\n     */\n    this.key = `${ZETAPUSH_SESSION_KEY}.${sandboxId}`\n    /**\n     * @access private\n     * @type {DOMStorage}\n     */\n    this.storage = storage\n  }\n  /**\n   * @return {string} session The stored session\n   */\n  get() {\n    const { key, storage } = this\n    const json = storage.getItem(key) || '{}'\n    let session = {}\n    try {\n      session = JSON.parse(json)\n    } catch (e) { }\n    return session\n  }\n  /**\n   * @param {Object} session The session to store\n   */\n  set(session = {}) {\n    const { key, storage } = this\n    const json = JSON.stringify(session)\n    try {\n      storage.setItem(key, json)\n    } catch (e) { }\n    return session\n  }\n}\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/utils/session-persistence.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "variable",
    "name": "ZETAPUSH_SESSION_KEY",
    "memberof": "src/utils/session-persistence.js",
    "static": true,
    "longname": "src/utils/session-persistence.js~ZETAPUSH_SESSION_KEY",
    "access": "public",
    "export": true,
    "importPath": "zetapush-js/src/utils/session-persistence.js",
    "importStyle": "{ZETAPUSH_SESSION_KEY}",
    "description": "",
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 398,
    "kind": "class",
    "name": "SessionPersistenceStrategy",
    "memberof": "src/utils/session-persistence.js",
    "static": true,
    "longname": "src/utils/session-persistence.js~SessionPersistenceStrategy",
    "access": "protected",
    "export": true,
    "importPath": "zetapush-js/src/utils/session-persistence.js",
    "importStyle": "{SessionPersistenceStrategy}",
    "description": "Provide abstraction for token persistence",
    "lineNumber": 12,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 399,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/session-persistence.js~SessionPersistenceStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/session-persistence.js~SessionPersistenceStrategy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "{sandboxId: string, storage: DOMStorage}"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 400,
    "kind": "member",
    "name": "key",
    "memberof": "src/utils/session-persistence.js~SessionPersistenceStrategy",
    "static": false,
    "longname": "src/utils/session-persistence.js~SessionPersistenceStrategy#key",
    "access": "private",
    "description": "",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "storage",
    "memberof": "src/utils/session-persistence.js~SessionPersistenceStrategy",
    "static": false,
    "longname": "src/utils/session-persistence.js~SessionPersistenceStrategy#storage",
    "access": "private",
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "DOMStorage"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "get",
    "memberof": "src/utils/session-persistence.js~SessionPersistenceStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/session-persistence.js~SessionPersistenceStrategy#get",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "session The stored session"
    },
    "params": []
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "set",
    "memberof": "src/utils/session-persistence.js~SessionPersistenceStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/session-persistence.js~SessionPersistenceStrategy#set",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "session",
        "description": "The session to store"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "file",
    "name": "src/utils/storage.js",
    "content": "/**\n * Provide fallback for DOMStorage\n * @access protected\n */\nclass MemoryStorage {\n  constructor() {\n    this._map = new Map()\n  }\n  getItem(key) {\n    return this._map.get(key)\n  }\n  setItem(key, value) {\n    return this._map.get(key)\n  }\n  removeItem(key) {\n    this._map.delete(key)\n  }\n  clear() {\n    this._map = new Map()\n  }\n  key(n) {\n    return Array.from(this._map.keys())[n]\n  }\n  get length() {\n    return this._map.size\n  }\n}\n\n/**\n * @type {Storage}\n * @access protected\n */\nexport const platformStorage = typeof localStorage === 'undefined' ? new MemoryStorage() : localStorage\n",
    "static": true,
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/src/utils/storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "class",
    "name": "MemoryStorage",
    "memberof": "src/utils/storage.js",
    "static": true,
    "longname": "src/utils/storage.js~MemoryStorage",
    "access": "protected",
    "export": false,
    "importPath": "zetapush-js/src/utils/storage.js",
    "importStyle": null,
    "description": "Provide fallback for DOMStorage",
    "lineNumber": 5,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 407,
    "kind": "member",
    "name": "_map",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#_map",
    "access": "private",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 408,
    "kind": "method",
    "name": "getItem",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#getItem",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 409,
    "kind": "method",
    "name": "setItem",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#setItem",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 410,
    "kind": "method",
    "name": "removeItem",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#removeItem",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "clear",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#clear",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "key",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#key",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "get",
    "name": "length",
    "memberof": "src/utils/storage.js~MemoryStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/storage.js~MemoryStorage#length",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "variable",
    "name": "platformStorage",
    "memberof": "src/utils/storage.js",
    "static": true,
    "longname": "src/utils/storage.js~platformStorage",
    "access": "protected",
    "export": true,
    "importPath": "zetapush-js/src/utils/storage.js",
    "importStyle": "{platformStorage}",
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Storage"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "[![NPM version][npm-version-image]][npm-url]\n[![Document][doc-version-image]][doc-url]\n[![Build Status][build-status-image]][build-status-url]\n\n# ZetaPush JavaScript SDK\n\n## Install\n\nFrom npm\n\n```console\nnpm install zetapush-js --save\n```\n\nFrom yarn\n\n```console\nyarn add zetapush-js\n```\n\n```js\nimport { Client, Authentication, services } from 'zetapush-js'\n```\n\nFrom CDN (unpkg recommended)\n\n```html\n<script src=\"//unpkg.com/zetapush-js/dist/zetapush.min.js\"></script>\n```\n\n```js\nconst { Client, Authentication, services } = ZetaPush\n```\n\n## Usage\n\n```js\n// Create new ZetaPush Client\nconst client = new Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication() {\n    return Authentication.weak({\n      token: null\n    })\n  }\n})\n// Create a Stack service\nconst service = client.createService({\n  Type: services.Stack,\n  listener: {\n    list(message) {\n      console.log('list callback', message)\n    }\n  }\n})\n// Add connection listener\nclient.onConnectionEstablished(() => {\n  // Call service methods\n  service.list({\n    stack: '<YOUR-STACK-ID>'\n  })\n})\n// Connect client to ZetaPush BaaS\nclient.connect()\n```\n\n## Any questions?\n\n* [Frequently Asked Questions](./docs/faq.md)\n* :warning: ZetaPush v1.x users? Please check [Migration Guide](./docs/migration.md)\n\n[npm-version-image]: http://img.shields.io/npm/v/zetapush-js.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/zetapush-js\n\n[doc-version-image]: http://zetapush.github.io/zetapush-js/badge.svg?t=0\n[doc-url]: http://zetapush.github.io/zetapush-js/\n\n[build-status-image]: http://img.shields.io/travis/zetapush/zetapush-js.svg?style=flat\n[build-status-url]: http://travis-ci.org/zetapush/zetapush-js\n",
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"zetapush-js\",\n  \"version\": \"3.3.0\",\n  \"description\": \"JavaScript SDK for ZetaPush\",\n  \"browser\": \"dist/zetapush.js\",\n  \"main\": \"lib/index.js\",\n  \"module\": \"es/index.js\",\n  \"jsnext:main\": \"es/index.js\",\n  \"typings\": \"index.d.ts\",\n  \"homepage\": \"http://zetapush.com\",\n  \"bugs\": \"https://github.com/zetapush/zetapush-js/issues\",\n  \"files\": [\n    \"dist\",\n    \"lib\",\n    \"es\",\n    \"src\",\n    \"index.d.ts\"\n  ],\n  \"keywords\": [\n    \"zetapush\",\n    \"realtime\",\n    \"sdk\",\n    \"websocket\",\n    \"long-polling\"\n  ],\n  \"license\": \"MIT\",\n  \"contributors\": [\n    \"Grégory Houllier\",\n    \"Mikael Morvan\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:zetapush/zetapush-js.git\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint src\",\n    \"clean\": \"rimraf lib dist es .deploy .esdoc\",\n    \"build:commonjs\": \"cross-env BABEL_ENV=commonjs babel src --out-dir lib\",\n    \"build:es\": \"cross-env BABEL_ENV=es babel src --out-dir es\",\n    \"build:umd\": \"cross-env BABEL_ENV=umd NODE_ENV=development rollup -c -i src/index.js -o dist/zetapush.js\",\n    \"build:umd:min\": \"cross-env BABEL_ENV=umd NODE_ENV=production rollup -c -i src/index.js -o dist/zetapush.min.js\",\n    \"build\": \"yarn run build:commonjs && yarn run build:es && yarn run build:umd && yarn run build:umd:min\",\n    \"prepublish\": \"yarn run clean && yarn run lint && yarn run build && yarn test:ci\",\n    \"doc\": \"esdoc -c esdoc.json\",\n    \"deploy:github\": \"yarn run doc && gulp deploy:github\",\n    \"serve\": \"lr-http-server -d ./ -w ./dist/*.js,./examples/**/*.js,./examples/**/*.html -p 2600 -l 26001\",\n    \"test:ci\": \"karma start karma.conf.js\"\n  },\n  \"dependencies\": {\n    \"zetapush-cometd\": \"3.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.0.1\",\n    \"babel-plugin-external-helpers\": \"^6.22.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"cross-env\": \"^5.1.1\",\n    \"esdoc\": \"^1.0.3\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.10.0\",\n    \"eslint-config-standard\": \"^10.2.1\",\n    \"eslint-plugin-import\": \"^2.8.0\",\n    \"eslint-plugin-node\": \"^5.2.1\",\n    \"eslint-plugin-promise\": \"^3.6.0\",\n    \"eslint-plugin-standard\": \"^3.0.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-gh-pages\": \"^0.5.4\",\n    \"jasmine-core\": \"^2.8.0\",\n    \"karma\": \"^1.7.1\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-cli\": \"^1.0.1\",\n    \"karma-jasmine\": \"^1.1.0\",\n    \"lr-http-server\": \"^0.1.5\",\n    \"request\": \"^2.83.0\",\n    \"rimraf\": \"^2.6.2\",\n    \"rollup\": \"^0.50.0\",\n    \"rollup-plugin-babel\": \"^3.0.2\",\n    \"rollup-plugin-commonjs\": \"^8.2.6\",\n    \"rollup-plugin-json\": \"^2.3.0\",\n    \"rollup-plugin-node-resolve\": \"^3.0.0\",\n    \"rollup-plugin-uglify\": \"^2.0.1\",\n    \"rollup-watch\": \"^4.3.1\",\n    \"typescript\": \"^2.6.1\"\n  },\n  \"engines\": {\n    \"node\": \">=6\"\n  }\n}",
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": "# zetapush-js\n",
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/docs/index.md",
    "name": "./docs/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "# 3.3.0 (2017-11-02)\n\n# Fix\n\n* **typescript** Remove unsupported default parameters in typed definition\n\n### Features\n\n* **bower** Remove bower support\n* **client** Support custom deployment for SmartClient (#8)\n\n# 3.2.2 (2017-11-02)\n\n> Fix issus on previously published version\n\n# 3.2.1 (2017-11-02)\n\n### Features\n\n* **client** Update TS definition to support optionnal parameters in publish method\n\n# 3.2.0 (2017-10-06)\n\n### Features\n\n* **client** Add new getUserInfo() method to retreive user public info\n\n```js\nconst { Authentication, Client } = require('zetapush-js')\n// Create new ZetaPush Client\nconst client = new Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication: () => Authentication.simple({\n    login: '<YOUR-USER-LOGIN>',\n    password: '<YOUR-USER-PASSWORD>'\n  })\n})\n// Add connection establised listener\nclient.onConnectionEstablished(() => {\n  console.log('onConnectionEstablished')\n  const profile = client.getUserInfo()\n  console.log('Your profile', profile)\n})\nclient.connect()\n```\n\n* **node** Support node execution context\n\n```js\nconst { WeakClient } = require('zetapush-js')\nconst NodeJSTransports = require('zetapush-cometd/lib/node/Transports')\n// Create new ZetaPush Client\nconst client = new WeakClient({\n  transports: NodeJSTransports,\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\n// Add connection establised listener\nclient.onConnectionEstablished(() => {\n  console.log('onConnectionEstablished')\n})\nclient.connect()\n```\n\n* **client** Add new lifecycle handler onNegotiationFailed\n\n### Changes\n\n* **core** Reduce bundle size\n* **core** From webpack@2 to rollup\n* **client** Update TransportLayer implementation\n* **zetapush-cometd** Update TransportLayer implementation\n\n# 3.1.3 (2017-04-13)\n\n### Fix\n\n* **typescript** Fix TypeScript issues\n\n# 3.1.2 (2017-04-13)\n\n### Features\n\n* **typescript** Add TypeScript support\n\n# 3.1.1 (2017-04-10)\n\n### Features\n\n* **client** Normalize apiUrl\n\n# 3.1.0 (2017-02-21)\n\n### Features\n\n* **client** Add new connection callback onNoServerUrlAvailable\n* **client** Add new connection callback onConnectionToServerFail\n* **client** Add getServers method to expose server urls\n* **client** Add createAsyncMacroService method to provide promise based macro services instance\n* **internal** Improve code separation to support tree shaking\n\n### Fixes\n\n* **persistence** Catch SessionPersistenceStrategy error in private navigation mode\n\n# 3.1.0-alpha.9 (2017-01-18)\n\n* **persistence** Catch SessionPersistenceStrategy error in private navigation mode\n\n# 3.0.1 (2017-01-18)\n\n### Fixes\n\n* **persistence** Catch SessionPersistenceStrategy error in private navigation mode\n\n# 3.1.0-alpha.8 (2017-01-09)\n\n* **chore** Upgrade eslint dependency to 3.13.0\n\n# 3.1.0-alpha.7 (2017-01-09)\n\n* **env** Update engines directive to \"node\": \">=6\"\n\n# 3.1.0-alpha.6 (2017-01-02)\n\n* **client** Add new connection callback onNoServerUrlAvailable\n\n# 3.1.0-alpha.5 (2017-01-02)\n\n* **client** Add new connection callback onConnectionToServerFail\n\n# 3.1.0-alpha.4 (2017-01-02)\n\n* **npm** Bump to alpha.4 to avoid npm conflict\n\n# 3.1.0-alpha.3 (2017-01-02)\n\n* **client** Add getServers method to expose server urls\n\n# 3.1.0-alpha.2 (2016-11-14)\n\n* **internal** Improve code separation to support tree shaking\n\n# 3.1.0-alpha.1 (2016-11-04)\n\n* **client** Add createAsyncMacroService method to provide promise based macro services instance\n\n### Features\n\n# 3.0.0 (2016-10-24)\n\n### Changes\n\n* **client** Rename createService parameter from type to Type\n* **core:** Update lib/client, rename credentials to authentication\n\n### Fixes\n\n* **smart-client** Fix sessions persistence key generation\n\n### Features\n\n* **core** Add lib/smart-client\n* **test** ZetaPush core functionalities are now tested with Karma/Jasmine\n\n# 3.0.0-alpha.3 (2016-09-16)\n\nMajor API modification\n\n### BREAKING CHANGES\n\n* **client** Rename createService parameter from type to Type\n\n**Before**\n\n```js\n// Create new service\nconst service = new client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on list', message)\n    }\n  }\n})\n```\n\n**After**\n\n```js\n// Create new service\nconst service = new client.createService({\n  Type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on list', message)\n    }\n  }\n})\n```\n\n# 3.0.0-alpha.2 (2016-09-06)\n\n### Fix\n\n* **smart-client** Fix sessions persistence key generation\n\n# 3.0.0-alpha.1 (2016-08-19)\n\nMajor API modification\n\n### BREAKING CHANGES\n\n* **core:** Update lib/client, rename credentials to authentication\n\n**Before**\n\n```js\n// Create new ZetaPush Client\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  credentials() {\n    return ZetaPush.AuthentFactory.createWeakHandshake({\n      token: null\n    })\n  }\n})\n```\n\n**After**\n\n```js\n// Create new ZetaPush Client\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  authentication() {\n    return ZetaPush.Authentication.weak({\n      token: null\n    })\n  }\n})\n```\n\n### Features\n\n* **core** Add lib/smart-client\n* **test** ZetaPush core functionalities are now tested with Karma/Jasmine\n\n# 2.0.1 (2016-07-26)\n\n### Fixes\n\n* **cometd** Update cometd to 3.0.13 to fix network overflow on handshake failure with reconnect advice\n\n# 2.0.0 (2016-07-25)\n\n:tada: After a complete refactoring, ZetaPush 2.0 is production ready\n\n# 2.0.0-rc.3 (2016-07-15)\n\n### Fixes\n\n* **build** Improve build support with babel-plugin-transform-runtime\n\n# 2.0.0-rc.2 (2016-07-13)\n\n### Features\n\n* **core:** Update lib/client, add new transports option\n* **core:** Update lib/weak-client, add new transports option\n\n```js\nconst client = new ZetaPush.WeakClient({\n  sandboxId: 'Y1k3xBDc',\n  transports: [ZetaPush.TransportTypes.LONG_POLLING]\n})\n```\n\n# 2.0.0-rc.1 (2016-07-12)\n\nMajor API modification\n\n### BREAKING CHANGES\n\n* **core:** Update lib/authentication/handshake\n\n**Before**\n\n```js\n// Create new ZetaPush Client\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  credentials() {\n    return ZetaPush.AuthentFactory.createWeakHandshake({\n      token: null\n    })\n  }\n})\n```\n\n**After**\n\n```js\n// Create new ZetaPush Client\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  credentials() {\n    return ZetaPush.Authentication.weak({\n      token: null\n    })\n  }\n})\n```\n\n# 2.0.0-beta.23 (2016-07-08)\n\n### Fixes\n\n* **client** Expose user Id\n\n# 2.0.0-beta.22 (2016-07-07)\n\n### Changes\n\n* **tools** Build file is now generated via webpack instead of gulp\n\n# 2.0.0-beta.21 (2016-07-05)\n\n### Fixes\n\n* **stand by** Update cometd version version to fix stand by bug\n\n# 2.0.0-beta.20 (2016-07-05)\n\n### Changes\n\n* **log** Replace console.log in source code by cometd log layer\n* **examples** Update examples with new **zetapush.min.js** file name\n\n# 2.0.0-beta.19 (2016-07-04)\n\n### Changes\n\n* **dist** Add suffix min to build file\n\n# 2.0.0-beta.18 (2016-06-21)\n\nMajor API modification\n\n### BREAKING CHANGES\n\n* **core:** Update lib/client.constructor()\n\n**Before**\n\n```js\n// Create new ZetaPush Client\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  handshakeStrategy() {\n    return ZetaPush.AuthentFactory.createWeakHandshake({\n      token: null\n    })\n  }\n})\n```\n\n**After**\n\n```js\n// Create new ZetaPush Client\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>',\n  credentials() {\n    return ZetaPush.AuthentFactory.createWeakHandshake({\n      token: null\n    })\n  }\n})\n```\n\n# 2.0.0-beta.17 (2016-06-20)\n\nMajor API simplification\n\n### BREAKING CHANGES\n\n* **core:** Update lib/client.createService()\n* **core:** Update lib/client.unsubscribe()\n\n**Before**\n\n```js\nconst service = client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on list stack', message.data)\n    }\n  }\n})\nservice.publisher.list({\n  stack: '<STACK-ID>'\n})\n```\n\n**After**\n\n```js\nconst service = client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on list stack', message.data)\n    }\n  }\n})\nservice.list({\n  stack: '<STACK-ID>'\n})\n```\n\n# 2.0.0-beta.16 (2016-06-06)\n\nMajor API simplification\n\n### BREAKING CHANGES\n\n* **core:** Add lib/client.createService()\n* **core:** Remove lib/client.createMacroPublisher()\n* **core:** Remove lib/client.createServicePublisher()\n* **core:** Remove lib/client.getSessionId()\n* **core:** Remove lib/client.subscribe()\n* **core:** Remove lib/client.createMacroPublisherSubscriber()\n* **core:** Remove lib/client.createServicePublisherSubscriber()\n* **core:** Remove lib/client.handshake()\n* **core:** Rename lib/definitions to lib/services\n\n**Before**\n\n```js\nvar service = client.createServicePublisherSubscriber({\n  definition: ZetaPush.definitions.StackPublisherDefinition,\n    list: function (message) {\n      console.log('on list stack', message.data)\n    }\n  }\n})\nservice.publisher.list({\n  stack: '<STACK-ID>'\n})\n```\n\n**After**\n\n```js\nconst service = client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on list stack', message.data)\n    }\n  }\n})\nservice.publisher.list({\n  stack: '<STACK-ID>'\n})\n```\n\n# 2.0.0-beta.15 (2016-06-03)\n\n### Changes\n\n* **misc:** Update internal default deployment id\n\n# 2.0.0-beta.14 (2016-06-01)\n\n### Fix\n\n* **security:** Update forceHttps implementation\n\n# 2.0.0-beta.13 (2016-06-01)\n\n### Fix\n\n* **security:** Dont override forceHttps for WeakClient\n\n# 2.0.0-beta.12 (2016-06-01)\n\n### Changes\n\n* **security:** Force HTTPS when location.protocol is HTTPS\n\n# 2.0.0-beta.11 (2016-06-01)\n\n### Changes\n\n* **core:**  Add shorthand methods to handle lifecycle connection events\n\n# 2.0.0-beta.10 (2016-06-01)\n\n### Changes\n\n* **core:** Use default deploymentId for all services and authentication\n\n# 2.0.0-beta.9\n\n### Changes\n\n* **core:** Add new API setLogLevel\n\n### Fix\n\n* **doc:** Update bower install path\n\n# 2.0.0-beta.8 (2016-05-23)\n\n### Changes\n\n* **core:** Use subscription queue to automatically reconnect subscription\n\n# 2.0.0-beta.7 (2016-05-23)\n\n### Fix\n\n* **core:** Fix connection status listener index\n\n# 2.0.0-beta.6 (2016-05-20)\n\n### Changes\n\n* **core:** Rename SmartClient to WeakClient\n\n# 2.0.0-beta.4 (2016-05-20)\n\n### Changes\n\n* **core:** Add new API isConnected\n\n# 2.0.0-beta.3 (2016-05-17)\n\n### Changes\n\n* **macro:** Allow hardFail and debug option for macro publisher\n\n# 2.0.0-beta.2 (2016-05-09)\n\n### Fix\n\n* **dependencies:** Update npm dependencies\n\n# 2.0.0-beta.1 (2016-05-09)\n\n### Fix\n\n* **dependencies:** Add zetapush-cometd as a dependency\n\n# 2.0.0-beta.0 (2016-05-09)\n\n### Changes\n\n* **core:** Add new API unsubscribe\n\n# 2.0.0-alpha.6 (2016-05-02)\n\n### Changes\n\n* **core:** Add new VERSION parameter\n* **core:** Add new API removeConnectionStatusListener\n\n# 2.0.0-alpha.5 (2016-04-29)\n\n### Changes\n\n* **connection:** Add new connection lifecycle onConnectionWillClose\n\n# 2.0.0-alpha.4 (2016-04-28)\n\n### Fixes\n\n* **npm:** Clean npm files\n\n# 2.0.0-alpha.3 (2016-04-28)\n\n### Features\n\n* **core:** Add createMacroPublisherSubscriber() API\n* **core:** Rename createServicePublisherSubscriber() API\n* **examples:** Add new examples\n\n# 2.0.0-alpha.2 (2016-04-25)\n\n### Features\n\n* **core:** Expose SmartClient API\n* **examples:** Add new api and app examples\n\n# 2.0.0-alpha.1 (2016-04-05)\n\n### Features\n\n* **core:** Complete API rewrite\n\n### BREAKING CHANGES\n\n* 2.x API is no longer compatible with 1.X\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/docs/FAQ.md",
    "name": "./docs/FAQ.md",
    "content": "# Frequently Asked Questions\n\n## Can I use zetapush-js in a NodeJS Context?\n\nYes, you have to install ~latest~ (>=3.2.0) version of zetapush-js enable NodeJS support.\n\n```js\nconst { WeakClient } = require('zetapush-js')\nconst NodeJSTransports = require('zetapush-cometd/lib/node/Transports')\n// Create new ZetaPush Client\nconst client = new WeakClient({\n  transports: NodeJSTransports,\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\n// Add connection establised listener\nclient.onConnectionEstablished(() => {\n  console.log('onConnectionEstablished')\n})\nclient.connect()\n```\n\n## Can I use zetapush-js with TypeScript?\n\nYes, since 3.1.2 zetapush-js include typings definition.\n\n## How to use [ES2015 features](https://babeljs.io/docs/learn-es2015/) (const, class, arrow functions, ...) on my project today ?\n\nZetaPush source code and examples are written in plain [ES2015](http://kangax.github.io/compat-table/es6/), you can use [Babel to transpile your code](https://babeljs.io/docs/learn-es2015/)\n\n## How to subscribe and publish to a ZetaPush service ?\n\nZetaPush Client provide a function **createService({ type, listener })**\n\n```js\nconst client = new ZetaPush.Client({ ... })\n// Create a service publisher mapping Stack service\nconst service = client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    // callback fired when a list message is fired by ZetaPush\n    list(message) {\n      console.log('list callback', message)\n    }\n  }\n})\n// Request a list\nservice.list({\n  stack: '<YOUR-STACK-ID>'\n})\n```\n\n## How force ZetaPush SDK to use **https** instead **http** ?\n\nZetaPush client allow you to declare a specific apiUrl\n\n```js\nconst client = new ZetaPush.Client({\n  forceHttps: true,\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\n```\n\n## How to use ZetaPush with my on-premise backend ?\n\nZetaPush client allow you to declare a specific apiUrl\n\n```js\nconst client = new ZetaPush.Client({\n  apiUrl: '<YOUR-ON-PREMISE-URL>',\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\n```\n\n## How to know my ZetaPush SDK version ?\n\nZetaPush SDK provide a top level constant VERSION\n\n```js\nconsole.log(ZetaPush.VERSION)\n```\n\n## How to change log level ?\n\nZetaPush Client provide a function **setLogLevel**\n\n```js\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\nclient.setLogLevel('debug')\n```\n\n## How to force long polling instead of websocket ?\n\nZetaPush Client provide an option to specify active transports\n\n```js\nconst client = new ZetaPush.WeakClient({\n  sandboxId: 'Y1k3xBDc',\n  transports: [ZetaPush.TransportTypes.LONG_POLLING]\n})\n```\n\n## How ZetaPush client call my service without explicit deployment id ?\n\nZetaPush Client provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n\n```js\n// Create service with implicit service deployment id\nconst service = client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on stack list', message)\n    }\n  }\n})\nservice.list({\n  stack: '<YOUR-STACK-ID>'\n})\n```\n\nIn the previous example, deployment id is `stack_0`\n\n```js\n// Create service with explicit service deployment id\nconst service = client.createService({\n  deploymentId: 'stack_0',\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on stack list', message)\n    }\n  }\n})\nservice.list({\n  stack: '<YOUR-STACK-ID>'\n})\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/ghoullier/GitHub/zetapush/zetapush-js/docs/MIGRATION.md",
    "name": "./docs/MIGRATION.md",
    "content": "# Migrating from ZetaPush 1 to 2\n\nZetaPush 2 is a ground-up rewrite of ZetaPush. This new version of ZetaPush had three basic goals:\n\n1. Similar API to other language implementations (Java, Swift, ...)\n2. Better maintenance\n3. Full CommonJS support\n\n## Configuration\n\n`ZetaPush 1`\n\n```js\nzp.init('<YOUR-SANDBOX-ID>')\n```\n\n`ZetaPush 2`\n\n```js\nconst client = new ZetaPush.Client({\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\n```\n\n## Authentication\n\n`ZetaPush 1`\n\n```js\nzp.init('<YOUR-SANDBOX-ID>')\nconst authent = new zp.authent.Simple('<YOUR-SIMPLE-DEPLOYMENT-ID>')\nzp.onHandshake((message) => {    \n  console.log('ZetaPush_Hanshake_Successful', message)\n})\nzp.onConnected((message) => {\n  if (message.successful) {\n    console.log('You are connected')\n  }\n})\nzp.connect(authent.getConnectionData('login', 'password', 'resource'))\n```\n\n`ZetaPush 2`\n\n```js\nconst client = new ZetaPush.Client({\n  credentials() {\n    return ZetaPush.Authentication.simple({\n      deploymentId: '<YOUR-SIMPLE-DEPLOYMENT-ID>',\n      login: 'login',\n      password: 'password'\n    })\n  },\n  resource: 'resource',\n  sandboxId: '<YOUR-SANDBOX-ID>'\n})\nzp.onSuccessfulHandshake((message) => {\n  console.log('ZetaPush_Hanshake_Successful', message)\n})\nclient.onConnectionEstablished(() => {\n  console.log('You are connected')\n})\nclient.connect()\n```\n\n## Publish/Subscribe\n\n`ZetaPush 1`\n\n```js\nconst service = new zp.service.Generic('<YOUR-STACK-DEPLOYMENT-ID>')\nservice.onError((message) => {\n  console.error('on stack error', message)\n})\nservice.on('list', (message) => {\n  console.log('on stack list', message)\n})\nservice.send('list', {\n  stack: '<YOUR-STACK-ID>'\n})\n```\n\n`ZetaPush 2`\n\n```js\nconst service = client.createService({\n  deploymentId: '<YOUR-STACK-DEPLOYMENT-ID>'\n  type: ZetaPush.services.Stack,\n  listener: {\n    error(message) {\n      console.error('on stack error', message)\n    },\n    list(message) {\n      console.log('on stack list', message)\n    }\n  }\n})\nservice.list({\n  stack: '<YOUR-STACK-ID>'\n})\n```\n\n## Optional deployment id\n\n`ZetaPush 2` provide optional deployment id, according to the following convention `${ServiceType.toLowerCase()_0}`\n\n```js\n// Create service with implicit service deployment id\nconst service = client.createService({\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on stack list', message)\n    }\n  }\n})\nservice.list({\n  stack: '<YOUR-STACK-ID>'\n})\n```\n\nIn the previous example, deployment id is `stack_0`\n\n```js\n// Create service with explicit service deployment id\nconst service = client.createService({\n  deploymentId: 'stack_0',\n  type: ZetaPush.services.Stack,\n  listener: {\n    list(message) {\n      console.log('on stack list', message)\n    }\n  }\n})\nservice.list({\n  stack: '<YOUR-STACK-ID>'\n})\n```\n",
    "static": true,
    "access": "public"
  }
]